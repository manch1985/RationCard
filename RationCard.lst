

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Thu Mar 03 21:15:17 2016

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	idataBANK1,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text728,local,class=CODE,delta=2
    20                           	psect	text729,local,class=CODE,delta=2
    21                           	psect	text732,local,class=CODE,delta=2
    22                           	psect	text735,local,class=CODE,delta=2
    23                           	psect	text742,local,class=CODE,delta=2
    24                           	psect	text743,local,class=CODE,delta=2
    25                           	psect	text746,local,class=CODE,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text747,local,class=CODE,delta=2
    28                           	psect	pa_nodes,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  000A                     	;#
    31                           
    32                           	psect	config
    33  2007  2CE2               	dw	11490	;#
    34                           
    35                           	psect	eeprom_data
    36  0000  000A 0000 0032     	db	10,0,50,10,8,0,0,0	;#
      +       000A 0008 0000     
      +       0000 0000          
    37  0008  000A 0000 001E     	db	10,0,30,8,6,0,0,0	;#
      +       0008 0006 0000     
      +       0000 0000          
    38  0010  000A 0000 0014     	db	10,0,20,4,5,0,0,0	;#
      +       0004 0005 0000     
      +       0000 0000          
    39                           
    40                           	psect	idataBANK0
    41  0000                     __pidataBANK0:	
    42                           
    43                           	psect	idataBANK1
    44  0000                     __pidataBANK1:	
    45                           
    46                           	psect	stringtext
    47  0700                     __pstringtext:	
    48  0700                     stringtab:	
    49                           ;	global	stringtab,__stringbase
    50                           
    51                           
    52                           ;	String table - string pointers are 2 bytes each
    53  0700  1BFF               	btfsc	btemp+1,7
    54  0701  2F0A               	ljmp	stringcode
    55  0702  1383               	bcf	3,7
    56  0703  187F               	btfsc	btemp+1,0
    57  0704  1783               	bsf	3,7
    58  0705  0800               	movf	0,w
    59  0706  0A84               	incf	4,f
    60  0707  1903               	skipnz
    61  0708  0AFF               	incf	btemp+1,f
    62  0709  0008               	return
    63  070A                     stringcode:	
    64  070A  087F               	movf	btemp+1,w
    65  070B  397F               	andlw	127
    66  070C  008A               	movwf	10
    67  070D  0804               	movf	4,w
    68  070E  0A84               	incf	4,f
    69  070F  1903               	skipnz
    70  0710  0AFF               	incf	btemp+1,f
    71  0711  0082               	movwf	2
    72  0712                     __stringbase:	
    73  0712                     _digit:	
    74  0712  3430               	retlw	48
    75  0713  3431               	retlw	49
    76  0714  3432               	retlw	50
    77  0715  3433               	retlw	51
    78  0716  3434               	retlw	52
    79  0717  3435               	retlw	53
    80  0718  3436               	retlw	54
    81  0719  3437               	retlw	55
    82  071A  3438               	retlw	56
    83  071B  3439               	retlw	57
    84  071C  3400               	retlw	0
    85  0007                     _PORTC	set	7
    86  0008                     _PORTD	set	8
    87  001A                     _RCREG	set	26
    88  0018                     _RCSTA	set	24
    89  0038                     _RC0	set	56
    90  0040                     _RD0	set	64
    91  0041                     _RD1	set	65
    92  0042                     _RD2	set	66
    93  0043                     _RD3	set	67
    94  0044                     _RD4	set	68
    95  0045                     _RD5	set	69
    96  0046                     _RD6	set	70
    97  0047                     _RD7	set	71
    98  0099                     _SPBRG	set	153
    99  0087                     _TRISC	set	135
   100  0088                     _TRISD	set	136
   101  0098                     _TXSTA	set	152
   102  0440                     _TRISD0	set	1088
   103  0441                     _TRISD1	set	1089
   104  010D                     _EEADR	set	269
   105  010C                     _EEDATA	set	268
   106  0188                     _ANSEL	set	392
   107  0189                     _ANSELH	set	393
   108  018C                     _EECON1	set	396
   109  0C60                     _RD	set	3168
   110  0C61                     _WR	set	3169
   111  071D                     STR_20:	
   112  071D  3420               	retlw	32	;' '
   113  071E  3420               	retlw	32	;' '
   114  071F  3420               	retlw	32	;' '
   115  0720  3420               	retlw	32	;' '
   116  0721  3420               	retlw	32	;' '
   117  0722  3420               	retlw	32	;' '
   118  0723  3420               	retlw	32	;' '
   119  0724  3420               	retlw	32	;' '
   120  0725  3420               	retlw	32	;' '
   121  0726  3420               	retlw	32	;' '
   122  0727  3420               	retlw	32	;' '
   123  0728  3420               	retlw	32	;' '
   124  0729  3420               	retlw	32	;' '
   125  072A  3420               	retlw	32	;' '
   126  072B  3420               	retlw	32	;' '
   127  072C  3420               	retlw	32	;' '
   128  072D  3420               	retlw	32	;' '
   129  072E  3420               	retlw	32	;' '
   130  072F  3420               	retlw	32	;' '
   131  0730  3420               	retlw	32	;' '
   132  0731  3400               	retlw	0
   133  0732                     STR_6:	
   134  0732  3452               	retlw	82	;'R'
   135  0733  3449               	retlw	73	;'I'
   136  0734  3453               	retlw	83	;'S'
   137  0735  3445               	retlw	69	;'E'
   138  0736  343A               	retlw	58	;':'
   139  0737  3420               	retlw	32	;' '
   140  0738  3420               	retlw	32	;' '
   141  0739  3420               	retlw	32	;' '
   142  073A  344B               	retlw	75	;'K'
   143  073B  3467               	retlw	103	;'g'
   144  073C  3420               	retlw	32	;' '
   145  073D  3420               	retlw	32	;' '
   146  073E  3420               	retlw	32	;' '
   147  073F  3420               	retlw	32	;' '
   148  0740  3420               	retlw	32	;' '
   149  0741  3420               	retlw	32	;' '
   150  0742  3420               	retlw	32	;' '
   151  0743  3420               	retlw	32	;' '
   152  0744  3420               	retlw	32	;' '
   153  0745  3420               	retlw	32	;' '
   154  0746  3400               	retlw	0
   155  0747                     STR_19:	
   156  0747  3420               	retlw	32	;' '
   157  0748  3420               	retlw	32	;' '
   158  0749  3420               	retlw	32	;' '
   159  074A  3420               	retlw	32	;' '
   160  074B  3420               	retlw	32	;' '
   161  074C  3420               	retlw	32	;' '
   162  074D  3420               	retlw	32	;' '
   163  074E  3443               	retlw	67	;'C'
   164  074F  3441               	retlw	65	;'A'
   165  0750  3452               	retlw	82	;'R'
   166  0751  3444               	retlw	68	;'D'
   167  0752  3420               	retlw	32	;' '
   168  0753  3420               	retlw	32	;' '
   169  0754  3420               	retlw	32	;' '
   170  0755  3420               	retlw	32	;' '
   171  0756  3420               	retlw	32	;' '
   172  0757  3420               	retlw	32	;' '
   173  0758  3420               	retlw	32	;' '
   174  0759  3420               	retlw	32	;' '
   175  075A  3420               	retlw	32	;' '
   176  075B  3400               	retlw	0
   177  075C                     STR_7:	
   178  075C  3453               	retlw	83	;'S'
   179  075D  3455               	retlw	85	;'U'
   180  075E  3447               	retlw	71	;'G'
   181  075F  3441               	retlw	65	;'A'
   182  0760  3452               	retlw	82	;'R'
   183  0761  343A               	retlw	58	;':'
   184  0762  3420               	retlw	32	;' '
   185  0763  3420               	retlw	32	;' '
   186  0764  3420               	retlw	32	;' '
   187  0765  344B               	retlw	75	;'K'
   188  0766  3467               	retlw	103	;'g'
   189  0767  3420               	retlw	32	;' '
   190  0768  3420               	retlw	32	;' '
   191  0769  3420               	retlw	32	;' '
   192  076A  3420               	retlw	32	;' '
   193  076B  3420               	retlw	32	;' '
   194  076C  3420               	retlw	32	;' '
   195  076D  3420               	retlw	32	;' '
   196  076E  3420               	retlw	32	;' '
   197  076F  3420               	retlw	32	;' '
   198  0770  3400               	retlw	0
   199  0771                     STR_5:	
   200  0771  3455               	retlw	85	;'U'
   201  0772  3453               	retlw	83	;'S'
   202  0773  3445               	retlw	69	;'E'
   203  0774  3452               	retlw	82	;'R'
   204  0775  3431               	retlw	49	;'1'
   205  0776  3420               	retlw	32	;' '
   206  0777  3441               	retlw	65	;'A'
   207  0778  344D               	retlw	77	;'M'
   208  0779  344F               	retlw	79	;'O'
   209  077A  3455               	retlw	85	;'U'
   210  077B  344E               	retlw	78	;'N'
   211  077C  3454               	retlw	84	;'T'
   212  077D  343A               	retlw	58	;':'
   213  077E  3420               	retlw	32	;' '
   214  077F  3420               	retlw	32	;' '
   215  0780  3420               	retlw	32	;' '
   216  0781  3420               	retlw	32	;' '
   217  0782  3420               	retlw	32	;' '
   218  0783  3420               	retlw	32	;' '
   219  0784  3420               	retlw	32	;' '
   220  0785  3400               	retlw	0
   221  0786                     STR_9:	
   222  0786  3455               	retlw	85	;'U'
   223  0787  3453               	retlw	83	;'S'
   224  0788  3445               	retlw	69	;'E'
   225  0789  3452               	retlw	82	;'R'
   226  078A  3432               	retlw	50	;'2'
   227  078B  3420               	retlw	32	;' '
   228  078C  3441               	retlw	65	;'A'
   229  078D  344D               	retlw	77	;'M'
   230  078E  344F               	retlw	79	;'O'
   231  078F  3455               	retlw	85	;'U'
   232  0790  344E               	retlw	78	;'N'
   233  0791  3454               	retlw	84	;'T'
   234  0792  343A               	retlw	58	;':'
   235  0793  3420               	retlw	32	;' '
   236  0794  3420               	retlw	32	;' '
   237  0795  3420               	retlw	32	;' '
   238  0796  3420               	retlw	32	;' '
   239  0797  3420               	retlw	32	;' '
   240  0798  3420               	retlw	32	;' '
   241  0799  3420               	retlw	32	;' '
   242  079A  3400               	retlw	0
   243  079B                     STR_13:	
   244  079B  3455               	retlw	85	;'U'
   245  079C  3453               	retlw	83	;'S'
   246  079D  3445               	retlw	69	;'E'
   247  079E  3452               	retlw	82	;'R'
   248  079F  3433               	retlw	51	;'3'
   249  07A0  3420               	retlw	32	;' '
   250  07A1  3441               	retlw	65	;'A'
   251  07A2  344D               	retlw	77	;'M'
   252  07A3  344F               	retlw	79	;'O'
   253  07A4  3455               	retlw	85	;'U'
   254  07A5  344E               	retlw	78	;'N'
   255  07A6  3454               	retlw	84	;'T'
   256  07A7  343A               	retlw	58	;':'
   257  07A8  3420               	retlw	32	;' '
   258  07A9  3420               	retlw	32	;' '
   259  07AA  3420               	retlw	32	;' '
   260  07AB  3420               	retlw	32	;' '
   261  07AC  3420               	retlw	32	;' '
   262  07AD  3420               	retlw	32	;' '
   263  07AE  3420               	retlw	32	;' '
   264  07AF  3400               	retlw	0
   265  07B0                     STR_8:	
   266  07B0  344B               	retlw	75	;'K'
   267  07B1  3445               	retlw	69	;'E'
   268  07B2  3452               	retlw	82	;'R'
   269  07B3  344F               	retlw	79	;'O'
   270  07B4  3453               	retlw	83	;'S'
   271  07B5  3445               	retlw	69	;'E'
   272  07B6  344E               	retlw	78	;'N'
   273  07B7  3445               	retlw	69	;'E'
   274  07B8  343A               	retlw	58	;':'
   275  07B9  3420               	retlw	32	;' '
   276  07BA  3420               	retlw	32	;' '
   277  07BB  3420               	retlw	32	;' '
   278  07BC  344C               	retlw	76	;'L'
   279  07BD  3474               	retlw	116	;'t'
   280  07BE  3473               	retlw	115	;'s'
   281  07BF  3420               	retlw	32	;' '
   282  07C0  3420               	retlw	32	;' '
   283  07C1  3420               	retlw	32	;' '
   284  07C2  3420               	retlw	32	;' '
   285  07C3  3420               	retlw	32	;' '
   286  07C4  3400               	retlw	0
   287  07C5                     STR_18:	
   288  07C5  3420               	retlw	32	;' '
   289  07C6  3450               	retlw	80	;'P'
   290  07C7  344C               	retlw	76	;'L'
   291  07C8  3445               	retlw	69	;'E'
   292  07C9  3441               	retlw	65	;'A'
   293  07CA  3453               	retlw	83	;'S'
   294  07CB  3445               	retlw	69	;'E'
   295  07CC  3420               	retlw	32	;' '
   296  07CD  3443               	retlw	67	;'C'
   297  07CE  3448               	retlw	72	;'H'
   298  07CF  3445               	retlw	69	;'E'
   299  07D0  3443               	retlw	67	;'C'
   300  07D1  344B               	retlw	75	;'K'
   301  07D2  3420               	retlw	32	;' '
   302  07D3  3459               	retlw	89	;'Y'
   303  07D4  344F               	retlw	79	;'O'
   304  07D5  3455               	retlw	85	;'U'
   305  07D6  3452               	retlw	82	;'R'
   306  07D7  3420               	retlw	32	;' '
   307  07D8  3420               	retlw	32	;' '
   308  07D9  3400               	retlw	0
   309  07DA                     STR_17:	
   310  07DA  3455               	retlw	85	;'U'
   311  07DB  3453               	retlw	83	;'S'
   312  07DC  3445               	retlw	69	;'E'
   313  07DD  3452               	retlw	82	;'R'
   314  07DE  3420               	retlw	32	;' '
   315  07DF  344E               	retlw	78	;'N'
   316  07E0  344F               	retlw	79	;'O'
   317  07E1  3454               	retlw	84	;'T'
   318  07E2  3420               	retlw	32	;' '
   319  07E3  3441               	retlw	65	;'A'
   320  07E4  3455               	retlw	85	;'U'
   321  07E5  3454               	retlw	84	;'T'
   322  07E6  3448               	retlw	72	;'H'
   323  07E7  3445               	retlw	69	;'E'
   324  07E8  344E               	retlw	78	;'N'
   325  07E9  3454               	retlw	84	;'T'
   326  07EA  3449               	retlw	73	;'I'
   327  07EB  3443               	retlw	67	;'C'
   328  07EC  3441               	retlw	65	;'A'
   329  07ED  3454               	retlw	84	;'T'
   330  07EE  3400               	retlw	0
   331  07EF                     STR_4:	
   332  07EF  3453               	retlw	83	;'S'
   333  07F0  344D               	retlw	77	;'M'
   334  07F1  3441               	retlw	65	;'A'
   335  07F2  3452               	retlw	82	;'R'
   336  07F3  3454               	retlw	84	;'T'
   337  07F4  3420               	retlw	32	;' '
   338  07F5  3443               	retlw	67	;'C'
   339  07F6  3441               	retlw	65	;'A'
   340  07F7  3452               	retlw	82	;'R'
   341  07F8  3444               	retlw	68	;'D'
   342  07F9  3420               	retlw	32	;' '
   343  07FA  3420               	retlw	32	;' '
   344  07FB  3420               	retlw	32	;' '
   345  07FC  3420               	retlw	32	;' '
   346  07FD  3420               	retlw	32	;' '
   347  07FE  3420               	retlw	32	;' '
   348  07FF  3420               	retlw	32	;' '
   349  0800  3400               	retlw	0
   350  0801                     STR_2:	
   351  0801  3420               	retlw	32	;' '
   352  0802  3420               	retlw	32	;' '
   353  0803  3420               	retlw	32	;' '
   354  0804  3443               	retlw	67	;'C'
   355  0805  3441               	retlw	65	;'A'
   356  0806  3452               	retlw	82	;'R'
   357  0807  3444               	retlw	68	;'D'
   358  0808  3420               	retlw	32	;' '
   359  0809  3453               	retlw	83	;'S'
   360  080A  3459               	retlw	89	;'Y'
   361  080B  3453               	retlw	83	;'S'
   362  080C  3454               	retlw	84	;'T'
   363  080D  3445               	retlw	69	;'E'
   364  080E  344D               	retlw	77	;'M'
   365  080F  3420               	retlw	32	;' '
   366  0810  3420               	retlw	32	;' '
   367  0811  3420               	retlw	32	;' '
   368  0812  3400               	retlw	0
   369  0813                     STR_3:	
   370  0813  3450               	retlw	80	;'P'
   371  0814  344C               	retlw	76	;'L'
   372  0815  3445               	retlw	69	;'E'
   373  0816  3441               	retlw	65	;'A'
   374  0817  3453               	retlw	83	;'S'
   375  0818  3445               	retlw	69	;'E'
   376  0819  3420               	retlw	32	;' '
   377  081A  3454               	retlw	84	;'T'
   378  081B  3441               	retlw	65	;'A'
   379  081C  3450               	retlw	80	;'P'
   380  081D  3420               	retlw	32	;' '
   381  081E  3459               	retlw	89	;'Y'
   382  081F  344F               	retlw	79	;'O'
   383  0820  3455               	retlw	85	;'U'
   384  0821  3452               	retlw	82	;'R'
   385  0822  3420               	retlw	32	;' '
   386  0823  3420               	retlw	32	;' '
   387  0824  3400               	retlw	0
   388  0825                     STR_1:	
   389  0825  3441               	retlw	65	;'A'
   390  0826  3455               	retlw	85	;'U'
   391  0827  3454               	retlw	84	;'T'
   392  0828  344F               	retlw	79	;'O'
   393  0829  344D               	retlw	77	;'M'
   394  082A  3441               	retlw	65	;'A'
   395  082B  3454               	retlw	84	;'T'
   396  082C  3449               	retlw	73	;'I'
   397  082D  3443               	retlw	67	;'C'
   398  082E  3420               	retlw	32	;' '
   399  082F  3452               	retlw	82	;'R'
   400  0830  3441               	retlw	65	;'A'
   401  0831  3454               	retlw	84	;'T'
   402  0832  3449               	retlw	73	;'I'
   403  0833  344F               	retlw	79	;'O'
   404  0834  344E               	retlw	78	;'N'
   405  0835  3420               	retlw	32	;' '
   406  0836  3400               	retlw	0
   407  0732                     
   408                           	psect	cinit
   409  0570                     start_initialization:	
   410                           
   411                           ; Clear objects allocated to BITCOMMON
   412  0570  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   413                           
   414                           ; Clear objects allocated to COMMON
   415  0571  01FA               	clrf	__pbssCOMMON& (0+127)
   416                           
   417                           ; Clear objects allocated to BANK0
   418  0572  1383               	bcf	3,7	;select IRP bank0
   419  0573  3020               	movlw	low __pbssBANK0
   420  0574  0084               	movwf	4
   421  0575  3040               	movlw	low (__pbssBANK0+32)
   422  0576  120A  118A  2642   	fcall	clear_ram
      +       120A  118A         
   423                           
   424                           ; Initialize objects allocated to BANK1
   425  057B  1683               	bsf	3,5	;RP0=1, select bank1
   426                           
   427                           ;initializer for _User3
   428  057C  3031               	movlw	49
   429  057D  00A0               	movwf	__pdataBANK1& (0+127)
   430  057E  3042               	movlw	66
   431  057F  00A1               	movwf	(__pdataBANK1+1)& (0+127)
   432  0580  3030               	movlw	48
   433  0581  00A2               	movwf	(__pdataBANK1+2)& (0+127)
   434  0582  00A3               	movwf	(__pdataBANK1+3)& (0+127)
   435  0583  3033               	movlw	51
   436  0584  00A4               	movwf	(__pdataBANK1+4)& (0+127)
   437  0585  3043               	movlw	67
   438  0586  00A5               	movwf	(__pdataBANK1+5)& (0+127)
   439  0587  3035               	movlw	53
   440  0588  00A6               	movwf	(__pdataBANK1+6)& (0+127)
   441  0589  3042               	movlw	66
   442  058A  00A7               	movwf	(__pdataBANK1+7)& (0+127)
   443  058B  3046               	movlw	70
   444  058C  00A8               	movwf	(__pdataBANK1+8)& (0+127)
   445  058D  3043               	movlw	67
   446  058E  00A9               	movwf	(__pdataBANK1+9)& (0+127)
   447  058F  3038               	movlw	56
   448  0590  00AA               	movwf	(__pdataBANK1+10)& (0+127)
   449  0591  3031               	movlw	49
   450  0592  00AB               	movwf	(__pdataBANK1+11)& (0+127)
   451  0593  01AC               	clrf	(__pdataBANK1+12)& (0+127)
   452                           
   453                           ; Initialize objects allocated to BANK0
   454  0594  1283               	bcf	3,5	;RP0=0, select bank0
   455                           
   456                           ;initializer for _User1
   457  0595  00C0               	movwf	__pdataBANK0& (0+127)
   458  0596  3043               	movlw	67
   459  0597  00C1               	movwf	(__pdataBANK0+1)& (0+127)
   460  0598  3030               	movlw	48
   461  0599  00C2               	movwf	(__pdataBANK0+2)& (0+127)
   462  059A  00C3               	movwf	(__pdataBANK0+3)& (0+127)
   463  059B  3038               	movlw	56
   464  059C  00C4               	movwf	(__pdataBANK0+4)& (0+127)
   465  059D  3032               	movlw	50
   466  059E  00C5               	movwf	(__pdataBANK0+5)& (0+127)
   467  059F  3043               	movlw	67
   468  05A0  00C6               	movwf	(__pdataBANK0+6)& (0+127)
   469  05A1  3045               	movlw	69
   470  05A2  00C7               	movwf	(__pdataBANK0+7)& (0+127)
   471  05A3  3036               	movlw	54
   472  05A4  00C8               	movwf	(__pdataBANK0+8)& (0+127)
   473  05A5  3039               	movlw	57
   474  05A6  00C9               	movwf	(__pdataBANK0+9)& (0+127)
   475  05A7  3033               	movlw	51
   476  05A8  00CA               	movwf	(__pdataBANK0+10)& (0+127)
   477  05A9  3039               	movlw	57
   478  05AA  00CB               	movwf	(__pdataBANK0+11)& (0+127)
   479  05AB  01CC               	clrf	(__pdataBANK0+12)& (0+127)
   480                           
   481                           ;initializer for _User2
   482  05AC  3031               	movlw	49
   483  05AD  00CD               	movwf	(__pdataBANK0+13)& (0+127)
   484  05AE  3042               	movlw	66
   485  05AF  00CE               	movwf	(__pdataBANK0+14)& (0+127)
   486  05B0  3030               	movlw	48
   487  05B1  00CF               	movwf	(__pdataBANK0+15)& (0+127)
   488  05B2  00D0               	movwf	(__pdataBANK0+16)& (0+127)
   489  05B3  3033               	movlw	51
   490  05B4  00D1               	movwf	(__pdataBANK0+17)& (0+127)
   491  05B5  3043               	movlw	67
   492  05B6  00D2               	movwf	(__pdataBANK0+18)& (0+127)
   493  05B7  3035               	movlw	53
   494  05B8  00D3               	movwf	(__pdataBANK0+19)& (0+127)
   495  05B9  3042               	movlw	66
   496  05BA  00D4               	movwf	(__pdataBANK0+20)& (0+127)
   497  05BB  3046               	movlw	70
   498  05BC  00D5               	movwf	(__pdataBANK0+21)& (0+127)
   499  05BD  3043               	movlw	67
   500  05BE  00D6               	movwf	(__pdataBANK0+22)& (0+127)
   501  05BF  3038               	movlw	56
   502  05C0  00D7               	movwf	(__pdataBANK0+23)& (0+127)
   503  05C1  3030               	movlw	48
   504  05C2  00D8               	movwf	(__pdataBANK0+24)& (0+127)
   505  05C3  01D9               	clrf	(__pdataBANK0+25)& (0+127)
   506  05C4                     end_of_initialization:	
   507                           ;End of C runtime variable initialization code
   508                           
   509  05C4  0183               	clrf	3
   510  05C5  120A  118A  2ABB   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bitbssCOMMON
   513  03C8                     __pbitbssCOMMON:	
   514  03C8                     _rfid_flag:	
   515  03C8                     	ds	1
   516                           
   517                           	psect	bssCOMMON
   518  007A                     __pbssCOMMON:	
   519  007A                     _User1Rise:	
   520  007A                     	ds	1
   521                           
   522                           	psect	bssBANK0
   523  0020                     __pbssBANK0:	
   524  0020                     _User:	
   525  0020                     	ds	2
   526  0022                     _User1amt:	
   527  0022                     	ds	2
   528  0024                     _User2amt:	
   529  0024                     	ds	2
   530  0026                     _User3amt:	
   531  0026                     	ds	2
   532  0028                     _User1Kerosene:	
   533  0028                     	ds	1
   534  0029                     _User1Sugar:	
   535  0029                     	ds	1
   536  002A                     _User2Kerosene:	
   537  002A                     	ds	1
   538  002B                     _User2Rise:	
   539  002B                     	ds	1
   540  002C                     _User2Sugar:	
   541  002C                     	ds	1
   542  002D                     _User3Kerosene:	
   543  002D                     	ds	1
   544  002E                     _User3Rise:	
   545  002E                     	ds	1
   546  002F                     _User3Sugar:	
   547  002F                     	ds	1
   548  0030                     _delayus_variable:	
   549  0030                     	ds	1
   550  0031                     _card_store:	
   551  0031                     	ds	15
   552                           
   553                           	psect	dataBANK0
   554  0040                     __pdataBANK0:	
   555  0040                     _User1:	
   556  0040                     	ds	13
   557  004D                     _User2:	
   558  004D                     	ds	13
   559                           
   560                           	psect	dataBANK1
   561  00A0                     __pdataBANK1:	
   562  00A0                     _User3:	
   563  00A0                     	ds	13
   564                           
   565                           	psect	clrtext
   566  0642                     clear_ram:	
   567                           ;	Called with FSR containing the base address, and
   568                           ;	W with the last address+1
   569                           
   570  0642  0064               	clrwdt	;clear the watchdog before getting into this loop
   571  0643                     clrloop:	
   572  0643  0180               	clrf	0	;clear RAM location pointed to by FSR
   573  0644  0A84               	incf	4,f	;increment pointer
   574  0645  0604               	xorwf	4,w	;XOR with final address
   575  0646  1903               	btfsc	3,2	;have we reached the end yet?
   576  0647  3400               	retlw	0	;all done for this memory range, return
   577  0648  0604               	xorwf	4,w	;XOR again to restore value
   578  0649  2E43               	goto	clrloop	;do the next byte
   579                           
   580                           	psect	cstackCOMMON
   581  0070                     __pcstackCOMMON:	
   582  0070                     ?_enable:	
   583  0070                     ?_lcdport:	
   584                           ; 0 bytes @ 0x0
   585                           
   586  0070                     ?_lcdcmd:	
   587                           ; 0 bytes @ 0x0
   588                           
   589  0070                     ?_lcddata:	
   590                           ; 0 bytes @ 0x0
   591                           
   592  0070                     ?_lcdclear:	
   593                           ; 0 bytes @ 0x0
   594                           
   595  0070                     ?_lcd_init:	
   596                           ; 0 bytes @ 0x0
   597                           
   598  0070                     ?_SoftWareUart_Init:	
   599                           ; 0 bytes @ 0x0
   600                           
   601  0070                     ?_ISR:	
   602                           ; 0 bytes @ 0x0
   603                           
   604  0070                     ??_ISR:	
   605                           ; 0 bytes @ 0x0
   606                           
   607  0070                     ?_RFID_read:	
   608                           ; 0 bytes @ 0x0
   609                           
   610  0070                     ?_ReadAmnt:	
   611                           ; 0 bytes @ 0x0
   612                           
   613  0070                     ?_uart_init:	
   614                           ; 0 bytes @ 0x0
   615                           
   616  0070                     ?_paramter:	
   617                           ; 0 bytes @ 0x0
   618                           
   619  0070                     ?_startup:	
   620                           ; 0 bytes @ 0x0
   621                           
   622  0070                     ?_main:	
   623                           ; 0 bytes @ 0x0
   624                           
   625  0070                     ?_eeprom_read:	
   626                           ; 0 bytes @ 0x0
   627                           
   628  0070                     ?_softreceive:	
   629                           ; 1 bytes @ 0x0
   630                           
   631                           
   632                           ; 1 bytes @ 0x0
   633  0070                     	ds	2
   634  0072                     ??_eeprom_read:	
   635  0072                     ??_enable:	
   636                           ; 0 bytes @ 0x2
   637                           
   638  0072                     ??_lcdport:	
   639                           ; 0 bytes @ 0x2
   640                           
   641  0072                     ??_SoftWareUart_Init:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0072                     ??_softreceive:	
   645                           ; 0 bytes @ 0x2
   646                           
   647  0072                     ??_uart_init:	
   648                           ; 0 bytes @ 0x2
   649                           
   650  0072                     ?___lbdiv:	
   651                           ; 0 bytes @ 0x2
   652                           
   653  0072                     ?___lbmod:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     ?_strcmp:	
   657                           ; 1 bytes @ 0x2
   658                           
   659  0072                     ?___awmod:	
   660                           ; 2 bytes @ 0x2
   661                           
   662  0072                     lcdport@a:	
   663                           ; 2 bytes @ 0x2
   664                           
   665  0072                     strcmp@s2:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ___lbdiv@divisor:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ___lbmod@divisor:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ___awmod@divisor:	
   675                           ; 1 bytes @ 0x2
   676                           
   677                           
   678                           ; 2 bytes @ 0x2
   679  0072                     	ds	1
   680  0073                     ??___lbdiv:	
   681  0073                     ??___lbmod:	
   682                           ; 0 bytes @ 0x3
   683                           
   684  0073                     softreceive@Data:	
   685                           ; 0 bytes @ 0x3
   686                           
   687  0073                     ___lbdiv@dividend:	
   688                           ; 1 bytes @ 0x3
   689                           
   690                           
   691                           ; 1 bytes @ 0x3
   692  0073                     	ds	1
   693  0074                     ??_strcmp:	
   694  0074                     ??_lcdcmd:	
   695                           ; 0 bytes @ 0x4
   696                           
   697  0074                     ??_lcddata:	
   698                           ; 0 bytes @ 0x4
   699                           
   700  0074                     lcdcmd@y:	
   701                           ; 0 bytes @ 0x4
   702                           
   703  0074                     lcddata@y:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     softreceive@mask:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     eeprom_read@addr:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     ___lbdiv@counter:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ___lbmod@dividend:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     ___awmod@dividend:	
   719                           ; 1 bytes @ 0x4
   720                           
   721                           
   722                           ; 2 bytes @ 0x4
   723  0074                     	ds	1
   724  0075                     ??_RFID_read:	
   725  0075                     ?___wmul:	
   726                           ; 0 bytes @ 0x5
   727                           
   728  0075                     lcdcmd@z:	
   729                           ; 2 bytes @ 0x5
   730                           
   731  0075                     lcddata@z:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     ___lbdiv@quotient:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0075                     ___lbmod@counter:	
   738                           ; 1 bytes @ 0x5
   739                           
   740  0075                     RFID_read@i:	
   741                           ; 1 bytes @ 0x5
   742                           
   743  0075                     ___wmul@multiplier:	
   744                           ; 2 bytes @ 0x5
   745                           
   746                           
   747                           ; 2 bytes @ 0x5
   748  0075                     	ds	1
   749  0076                     ??___awmod:	
   750  0076                     lcdcmd@a:	
   751                           ; 0 bytes @ 0x6
   752                           
   753  0076                     lcddata@a:	
   754                           ; 1 bytes @ 0x6
   755                           
   756  0076                     strcmp@r:	
   757                           ; 1 bytes @ 0x6
   758                           
   759  0076                     ___lbmod@rem:	
   760                           ; 1 bytes @ 0x6
   761                           
   762  0076                     ___awmod@counter:	
   763                           ; 1 bytes @ 0x6
   764                           
   765                           
   766                           ; 1 bytes @ 0x6
   767  0076                     	ds	1
   768  0077                     ??_lcdclear:	
   769  0077                     ??_lcd_init:	
   770                           ; 0 bytes @ 0x7
   771                           
   772  0077                     ?_lcdstring:	
   773                           ; 0 bytes @ 0x7
   774                           
   775  0077                     ?_DisplaySugar:	
   776                           ; 0 bytes @ 0x7
   777                           
   778  0077                     ?_DisplayRise:	
   779                           ; 0 bytes @ 0x7
   780                           
   781  0077                     ?_DisplayKerosene:	
   782                           ; 0 bytes @ 0x7
   783                           
   784  0077                     DisplaySugar@Sugar:	
   785                           ; 0 bytes @ 0x7
   786                           
   787  0077                     DisplayRise@Rise:	
   788                           ; 1 bytes @ 0x7
   789                           
   790  0077                     DisplayKerosene@Kerosene:	
   791                           ; 1 bytes @ 0x7
   792                           
   793  0077                     strcmp@s1:	
   794                           ; 1 bytes @ 0x7
   795                           
   796  0077                     ___awmod@sign:	
   797                           ; 1 bytes @ 0x7
   798                           
   799  0077                     lcdstring@a:	
   800                           ; 1 bytes @ 0x7
   801                           
   802  0077                     ___wmul@multiplicand:	
   803                           ; 2 bytes @ 0x7
   804                           
   805                           
   806                           ; 2 bytes @ 0x7
   807  0077                     	ds	1
   808  0078                     ??_DisplayAmnt:	
   809  0078                     ??_DisplaySugar:	
   810                           ; 0 bytes @ 0x8
   811                           
   812  0078                     ??_DisplayRise:	
   813                           ; 0 bytes @ 0x8
   814                           
   815  0078                     ??_DisplayKerosene:	
   816                           ; 0 bytes @ 0x8
   817                           
   818  0078                     ??___awdiv:	
   819                           ; 0 bytes @ 0x8
   820                           
   821  0078                     DisplaySugar@Location:	
   822                           ; 0 bytes @ 0x8
   823                           
   824  0078                     DisplayRise@Location:	
   825                           ; 1 bytes @ 0x8
   826                           
   827  0078                     DisplayKerosene@Location:	
   828                           ; 1 bytes @ 0x8
   829                           
   830                           
   831                           ; 1 bytes @ 0x8
   832  0078                     	ds	1
   833  0079                     ??_lcdstring:	
   834  0079                     ??_ReadAmnt:	
   835                           ; 0 bytes @ 0x9
   836                           
   837  0079                     ??_paramter:	
   838                           ; 0 bytes @ 0x9
   839                           
   840  0079                     ??___wmul:	
   841                           ; 0 bytes @ 0x9
   842                           
   843                           
   844                           	psect	cstackBANK0
   845  005A                     __pcstackBANK0:	
   846                           ; 0 bytes @ 0x9
   847                           
   848  005A                     ??_startup:	
   849  005A                     ?___awdiv:	
   850                           ; 0 bytes @ 0x0
   851                           
   852  005A                     ___wmul@product:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  005A                     ___awdiv@divisor:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 2 bytes @ 0x0
   860  005A                     	ds	2
   861  005C                     ___awdiv@dividend:	
   862                           
   863                           ; 2 bytes @ 0x2
   864  005C                     	ds	2
   865  005E                     ___awdiv@counter:	
   866                           
   867                           ; 1 bytes @ 0x4
   868  005E                     	ds	1
   869  005F                     ___awdiv@sign:	
   870                           
   871                           ; 1 bytes @ 0x5
   872  005F                     	ds	1
   873  0060                     ___awdiv@quotient:	
   874                           
   875                           ; 2 bytes @ 0x6
   876  0060                     	ds	2
   877  0062                     ?_DisplayAmnt:	
   878  0062                     DisplayAmnt@Amnt:	
   879                           ; 0 bytes @ 0x8
   880                           
   881                           
   882                           ; 2 bytes @ 0x8
   883  0062                     	ds	2
   884  0064                     DisplayAmnt@Location:	
   885                           
   886                           ; 1 bytes @ 0xA
   887  0064                     	ds	1
   888  0065                     _DisplayAmnt$973:	
   889                           
   890                           ; 2 bytes @ 0xB
   891  0065                     	ds	2
   892  0067                     ??_main:	
   893                           
   894                           ; 0 bytes @ 0xD
   895  0067                     	ds	3
   896                           
   897                           	psect	maintext
   898  02BB                     __pmaintext:	
   899 ;;Data sizes: Strings 282, constant 11, data 39, bss 33, persistent 0 stack 0
   900 ;;Auto spaces:   Size  Autos    Used
   901 ;; COMMON          14      9      11
   902 ;; BANK0           80     16      74
   903 ;; BANK1           80      0      13
   904 ;; BANK3           96      0       0
   905 ;; BANK2           96      0       0
   906 ;;
   907 ;; Pointer list with targets:
   908 ;; ?_strcmp	int  size(1) Largest target is 0
   909 ;;
   910 ;; ?___awmod	int  size(1) Largest target is 0
   911 ;;
   912 ;; ?___awdiv	int  size(1) Largest target is 0
   913 ;;
   914 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   915 ;;
   916 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 13
   917 ;;		 -> User3(BANK1[13]), User2(BANK0[13]), User1(BANK0[13]), 
   918 ;;
   919 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 15
   920 ;;		 -> card_store(BANK0[15]), 
   921 ;;
   922 ;; lcdstring@a	PTR const unsigned char  size(2) Largest target is 21
   923 ;;		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
   924 ;;		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
   925 ;;		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
   926 ;;		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
   927 ;;		 -> STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[18]), 
   928 ;;
   929 ;;
   930 ;; Critical Paths under _main in COMMON
   931 ;;
   932 ;;   _main->_lcd_init
   933 ;;   _main->_lcdstring
   934 ;;   _main->_DisplayRise
   935 ;;   _main->_DisplaySugar
   936 ;;   _main->_DisplayKerosene
   937 ;;   _startup->_lcdstring
   938 ;;   _DisplayKerosene->_lcdcmd
   939 ;;   _DisplayKerosene->_lcddata
   940 ;;   _DisplayKerosene->___lbmod
   941 ;;   _DisplayRise->_lcdcmd
   942 ;;   _DisplayRise->_lcddata
   943 ;;   _DisplayRise->___lbmod
   944 ;;   _DisplaySugar->_lcdcmd
   945 ;;   _DisplaySugar->_lcddata
   946 ;;   _DisplaySugar->___lbmod
   947 ;;   _DisplayAmnt->___awmod
   948 ;;   _lcdstring->_lcddata
   949 ;;   _lcd_init->_lcdcmd
   950 ;;   _lcdclear->_lcdcmd
   951 ;;   _RFID_read->_softreceive
   952 ;;   _lcddata->_enable
   953 ;;   _lcdcmd->_enable
   954 ;;   _paramter->___wmul
   955 ;;   _ReadAmnt->___wmul
   956 ;;   ___awdiv->___awmod
   957 ;;   ___wmul->_eeprom_read
   958 ;;
   959 ;; Critical Paths under _ISR in COMMON
   960 ;;
   961 ;;   None.
   962 ;;
   963 ;; Critical Paths under _main in BANK0
   964 ;;
   965 ;;   _main->_DisplayAmnt
   966 ;;   _DisplayAmnt->___awdiv
   967 ;;   _paramter->___wmul
   968 ;;   _ReadAmnt->___wmul
   969 ;;
   970 ;; Critical Paths under _ISR in BANK0
   971 ;;
   972 ;;   None.
   973 ;;
   974 ;; Critical Paths under _main in BANK1
   975 ;;
   976 ;;   None.
   977 ;;
   978 ;; Critical Paths under _ISR in BANK1
   979 ;;
   980 ;;   None.
   981 ;;
   982 ;; Critical Paths under _main in BANK3
   983 ;;
   984 ;;   None.
   985 ;;
   986 ;; Critical Paths under _ISR in BANK3
   987 ;;
   988 ;;   None.
   989 ;;
   990 ;; Critical Paths under _main in BANK2
   991 ;;
   992 ;;   None.
   993 ;;
   994 ;; Critical Paths under _ISR in BANK2
   995 ;;
   996 ;;   None.
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   999 ;;
  1000 ;;
  1001 ;;Call Graph Tables:
  1002 ;;
  1003 ;; ---------------------------------------------------------------------------------
  1004 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (0) _main                                                 3     3      0    5354
  1007 ;;                                             13 BANK0      3     3      0
  1008 ;;                          _uart_init
  1009 ;;                           _lcd_init
  1010 ;;                           _paramter
  1011 ;;                  _SoftWareUart_Init
  1012 ;;                            _startup
  1013 ;;                           _lcdclear
  1014 ;;                          _RFID_read
  1015 ;;                             _strcmp
  1016 ;;                           _ReadAmnt
  1017 ;;                             _lcdcmd
  1018 ;;                          _lcdstring
  1019 ;;                        _DisplayAmnt
  1020 ;;                        _DisplayRise
  1021 ;;                       _DisplaySugar
  1022 ;;                    _DisplayKerosene
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (1) _startup                                              3     3      0     405
  1025 ;;                                              0 BANK0      3     3      0
  1026 ;;                             _lcdcmd
  1027 ;;                          _lcdstring
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (1) _DisplayKerosene                                      2     1      1     747
  1030 ;;                                              7 COMMON     2     1      1
  1031 ;;                             _lcdcmd
  1032 ;;                            ___lbdiv
  1033 ;;                            _lcddata
  1034 ;;                            ___lbmod
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (1) _DisplayRise                                          2     1      1     747
  1037 ;;                                              7 COMMON     2     1      1
  1038 ;;                             _lcdcmd
  1039 ;;                            ___lbdiv
  1040 ;;                            _lcddata
  1041 ;;                            ___lbmod
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (1) _DisplaySugar                                         2     1      1     747
  1044 ;;                                              7 COMMON     2     1      1
  1045 ;;                             _lcdcmd
  1046 ;;                            ___lbdiv
  1047 ;;                            _lcddata
  1048 ;;                            ___lbmod
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (1) _DisplayAmnt                                          5     3      2    1290
  1051 ;;                                              8 BANK0      5     3      2
  1052 ;;                             _lcdcmd
  1053 ;;                            ___awdiv
  1054 ;;                            _lcddata
  1055 ;;                            ___awmod
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (1) _lcdstring                                            2     0      2     225
  1058 ;;                                              7 COMMON     2     0      2
  1059 ;;                            _lcddata
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (1) _lcd_init                                             2     2      0     268
  1062 ;;                                              7 COMMON     2     2      0
  1063 ;;                            _lcdport
  1064 ;;                             _lcdcmd
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (1) _lcdclear                                             0     0      0     180
  1067 ;;                             _lcdcmd
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (1) _RFID_read                                            2     2      0     160
  1070 ;;                                              5 COMMON     2     2      0
  1071 ;;                        _softreceive
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (2) _lcddata                                              3     3      0     180
  1074 ;;                                              4 COMMON     3     3      0
  1075 ;;                            _lcdport
  1076 ;;                             _enable
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (2) _lcdcmd                                               3     3      0     180
  1079 ;;                                              4 COMMON     3     3      0
  1080 ;;                            _lcdport
  1081 ;;                             _enable
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (1) _paramter                                             0     0      0     158
  1084 ;;                        _eeprom_read
  1085 ;;                             ___wmul
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (1) _ReadAmnt                                             0     0      0     158
  1088 ;;                        _eeprom_read
  1089 ;;                             ___wmul
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (2) _softreceive                                          3     3      0      92
  1092 ;;                                              2 COMMON     3     3      0
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; (1) _SoftWareUart_Init                                    1     1      0       0
  1095 ;;                                              2 COMMON     1     1      0
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (3) _enable                                               2     2      0       0
  1098 ;;                                              2 COMMON     2     2      0
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) ___awmod                                              6     2      4     296
  1101 ;;                                              2 COMMON     6     2      4
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (2) ___awdiv                                              8     4      4     445
  1104 ;;                                              0 BANK0      8     4      4
  1105 ;;                            ___awmod (ARG)
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (2) ___lbmod                                              5     4      1     159
  1108 ;;                                              2 COMMON     5     4      1
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (2) ___lbdiv                                              4     3      1     162
  1111 ;;                                              2 COMMON     4     3      1
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (2) ___wmul                                               6     2      4     136
  1114 ;;                                              5 COMMON     4     0      4
  1115 ;;                                              0 BANK0      2     2      0
  1116 ;;                        _eeprom_read (ARG)
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (1) _strcmp                                               6     4      2      89
  1119 ;;                                              2 COMMON     6     4      2
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (1) _uart_init                                            0     0      0       0
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (2) _eeprom_read                                          3     3      0      22
  1124 ;;                                              2 COMMON     3     3      0
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (3) _lcdport                                              1     1      0      88
  1127 ;;                                              2 COMMON     1     1      0
  1128 ;; ---------------------------------------------------------------------------------
  1129 ;; Estimated maximum stack depth 3
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (5) _ISR                                                  2     2      0       0
  1134 ;;                                              0 COMMON     2     2      0
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; Estimated maximum stack depth 5
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; Call Graph Graphs:
  1139 ;; _main (ROOT)
  1140 ;;   _uart_init
  1141 ;;   _lcd_init
  1142 ;;     _lcdport
  1143 ;;     _lcdcmd
  1144 ;;       _lcdport
  1145 ;;       _enable
  1146 ;;   _paramter
  1147 ;;     _eeprom_read
  1148 ;;     ___wmul
  1149 ;;       _eeprom_read (ARG)
  1150 ;;   _SoftWareUart_Init
  1151 ;;   _startup
  1152 ;;     _lcdcmd
  1153 ;;       _lcdport
  1154 ;;       _enable
  1155 ;;     _lcdstring
  1156 ;;       _lcddata
  1157 ;;         _lcdport
  1158 ;;         _enable
  1159 ;;   _lcdclear
  1160 ;;     _lcdcmd
  1161 ;;       _lcdport
  1162 ;;       _enable
  1163 ;;   _RFID_read
  1164 ;;     _softreceive
  1165 ;;   _strcmp
  1166 ;;   _ReadAmnt
  1167 ;;     _eeprom_read
  1168 ;;     ___wmul
  1169 ;;       _eeprom_read (ARG)
  1170 ;;   _lcdcmd
  1171 ;;     _lcdport
  1172 ;;     _enable
  1173 ;;   _lcdstring
  1174 ;;     _lcddata
  1175 ;;       _lcdport
  1176 ;;       _enable
  1177 ;;   _DisplayAmnt
  1178 ;;     _lcdcmd
  1179 ;;       _lcdport
  1180 ;;       _enable
  1181 ;;     ___awdiv
  1182 ;;       ___awmod (ARG)
  1183 ;;     _lcddata
  1184 ;;       _lcdport
  1185 ;;       _enable
  1186 ;;     ___awmod
  1187 ;;   _DisplayRise
  1188 ;;     _lcdcmd
  1189 ;;       _lcdport
  1190 ;;       _enable
  1191 ;;     ___lbdiv
  1192 ;;     _lcddata
  1193 ;;       _lcdport
  1194 ;;       _enable
  1195 ;;     ___lbmod
  1196 ;;   _DisplaySugar
  1197 ;;     _lcdcmd
  1198 ;;       _lcdport
  1199 ;;       _enable
  1200 ;;     ___lbdiv
  1201 ;;     _lcddata
  1202 ;;       _lcdport
  1203 ;;       _enable
  1204 ;;     ___lbmod
  1205 ;;   _DisplayKerosene
  1206 ;;     _lcdcmd
  1207 ;;       _lcdport
  1208 ;;       _enable
  1209 ;;     ___lbdiv
  1210 ;;     _lcddata
  1211 ;;       _lcdport
  1212 ;;       _enable
  1213 ;;     ___lbmod
  1214 ;;
  1215 ;; _ISR (ROOT)
  1216 ;;
  1217 ;; Address spaces:
  1218 ;;Name               Size   Autos  Total    Cost      Usage
  1219 ;;BANK3               60      0       0       9        0.0%
  1220 ;;BITBANK3            60      0       0       8        0.0%
  1221 ;;SFR3                 0      0       0       4        0.0%
  1222 ;;BITSFR3              0      0       0       4        0.0%
  1223 ;;BANK2               60      0       0      11        0.0%
  1224 ;;BITBANK2            60      0       0      10        0.0%
  1225 ;;SFR2                 0      0       0       5        0.0%
  1226 ;;BITSFR2              0      0       0       5        0.0%
  1227 ;;SFR1                 0      0       0       2        0.0%
  1228 ;;BITSFR1              0      0       0       2        0.0%
  1229 ;;BANK1               50      0       D       7       16.3%
  1230 ;;BITBANK1            50      0       0       6        0.0%
  1231 ;;CODE                 0      0       0       0        0.0%
  1232 ;;DATA                 0      0      66      12        0.0%
  1233 ;;ABS                  0      0      62       3        0.0%
  1234 ;;NULL                 0      0       0       0        0.0%
  1235 ;;STACK                0      0       4       2        0.0%
  1236 ;;BANK0               50     10      4A       5       92.5%
  1237 ;;BITBANK0            50      0       0       4        0.0%
  1238 ;;SFR0                 0      0       0       1        0.0%
  1239 ;;BITSFR0              0      0       0       1        0.0%
  1240 ;;COMMON               E      9       B       1       78.6%
  1241 ;;BITCOMMON            E      0       1       0        7.1%
  1242 ;;EEDATA             100      0       0       0        0.0%
  1243                           
  1244                           
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 143 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;		None               void
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 17F/0
  1258 ;;		On exit  : 160/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          0       3       0       0       0
  1264 ;;      Totals:         0       3       0       0       0
  1265 ;;Total ram usage:        3 bytes
  1266 ;; Hardware stack levels required when called:    5
  1267 ;; This function calls:
  1268 ;;		_uart_init
  1269 ;;		_lcd_init
  1270 ;;		_paramter
  1271 ;;		_SoftWareUart_Init
  1272 ;;		_startup
  1273 ;;		_lcdclear
  1274 ;;		_RFID_read
  1275 ;;		_strcmp
  1276 ;;		_ReadAmnt
  1277 ;;		_lcdcmd
  1278 ;;		_lcdstring
  1279 ;;		_DisplayAmnt
  1280 ;;		_DisplayRise
  1281 ;;		_DisplaySugar
  1282 ;;		_DisplayKerosene
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287  02BB                     _main:	
  1288                           
  1289                           ;Main.c: 144: ANSEL=0x00;
  1290                           
  1291                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1292  02BB  1683               	bsf	3,5	;RP0=1, select bank3
  1293  02BC  1703               	bsf	3,6	;RP1=1, select bank3
  1294  02BD  0188               	clrf	8	;volatile
  1295                           
  1296                           ;Main.c: 145: ANSELH=0x00;
  1297  02BE  0189               	clrf	9	;volatile
  1298                           
  1299                           ;Main.c: 146: TRISD=0X01;
  1300  02BF  3001               	movlw	1
  1301  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1302  02C1  0088               	movwf	8	;volatile
  1303                           
  1304                           ;Main.c: 147: PORTD=0X00;
  1305  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1306  02C3  0188               	clrf	8	;volatile
  1307                           
  1308                           ;Main.c: 148: TRISC=0X0F;
  1309  02C4  300F               	movlw	15
  1310  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  1311  02C6  0087               	movwf	7	;volatile
  1312                           
  1313                           ;Main.c: 149: PORTC=0X00;
  1314  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1315  02C8  0187               	clrf	7	;volatile
  1316                           
  1317                           ;Main.c: 150: uart_init();
  1318  02C9  120A  118A  2624   	fcall	_uart_init
      +       120A  118A         
  1319                           
  1320                           ;Main.c: 151: lcd_init();
  1321  02CE  120A  118A  21F5   	fcall	_lcd_init
      +       120A  118A         
  1322                           
  1323                           ;Main.c: 152: paramter();
  1324  02D3  120A  118A  24A6   	fcall	_paramter
      +       120A  118A         
  1325                           
  1326                           ;Main.c: 153: SoftWareUart_Init();
  1327  02D8  120A  118A  2634   	fcall	_SoftWareUart_Init
      +       120A  118A         
  1328                           
  1329                           ;Main.c: 154: startup();
  1330  02DD  120A  118A  21AD   	fcall	_startup
      +       120A  118A         
  1331                           
  1332                           ;Main.c: 155: lcdclear();
  1333  02E2  120A  118A  200F   	fcall	_lcdclear
      +       120A  118A         
  1334  02E7                     l2819:	
  1335                           
  1336                           ;Main.c: 157: {
  1337                           ;Main.c: 158: if(!RC0)
  1338  02E7  1807               	btfsc	7,0
  1339  02E8  2AF6               	goto	l2825
  1340                           
  1341                           ;Main.c: 159: {
  1342                           ;Main.c: 160: _delay((unsigned long)((200)*(20000000/4000.0)));
  1343  02E9  3006               	movlw	6
  1344  02EA  00E9               	movwf	??_main+2
  1345  02EB  300E               	movlw	14
  1346  02EC  00E8               	movwf	??_main+1
  1347  02ED  30B0               	movlw	176
  1348  02EE  00E7               	movwf	??_main
  1349  02EF                     u947:	
  1350  02EF  0BE7               	decfsz	??_main,f
  1351  02F0  2AEF               	goto	u947
  1352  02F1  0BE8               	decfsz	??_main+1,f
  1353  02F2  2AEF               	goto	u947
  1354  02F3  0BE9               	decfsz	??_main+2,f
  1355  02F4  2AEF               	goto	u947
  1356                           
  1357                           ;Main.c: 161: rfid_flag=0;
  1358  02F5  1079               	bcf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  1359  02F6                     l2825:	
  1360                           
  1361                           ;Main.c: 162: }
  1362                           ;Main.c: 163: RFID_read();
  1363  02F6  120A  118A  25C8   	fcall	_RFID_read
      +       120A  118A         
  1364                           
  1365                           ;Main.c: 166: if(strcmp(card_store,User1)==0)
  1366  02FB  3040               	movlw	_User1& (0+255)
  1367  02FC  00F2               	movwf	?_strcmp
  1368  02FD  3031               	movlw	_card_store& (0+255)
  1369  02FE  120A  118A  2606   	fcall	_strcmp
      +       120A  118A         
  1370  0303  0873               	movf	?_strcmp+1,w
  1371  0304  0472               	iorwf	?_strcmp,w
  1372  0305  1D03               	skipz
  1373  0306  2B0C               	goto	l2831
  1374                           
  1375                           ;Main.c: 167: {User=1;}
  1376  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0309  01A0               	clrf	_User
  1379  030A  0AA0               	incf	_User,f
  1380  030B  2B2C               	goto	L3
  1381  030C                     l2831:	
  1382                           
  1383                           ;Main.c: 168: else if(strcmp(card_store,User2)==0)
  1384  030C  304D               	movlw	_User2& (0+255)
  1385  030D  00F2               	movwf	?_strcmp
  1386  030E  3031               	movlw	_card_store& (0+255)
  1387  030F  120A  118A  2606   	fcall	_strcmp
      +       120A  118A         
  1388  0314  0873               	movf	?_strcmp+1,w
  1389  0315  0472               	iorwf	?_strcmp,w
  1390  0316  1D03               	skipz
  1391  0317  2B1A               	goto	l2835
  1392                           
  1393                           ;Main.c: 169: {User=2;}
  1394  0318  3002               	movlw	2
  1395  0319  2B29               	goto	L4
  1396  031A                     l2835:	
  1397                           
  1398                           ;Main.c: 170: else if(strcmp(card_store,User3)==0)
  1399  031A  30A0               	movlw	_User3& (0+255)
  1400  031B  00F2               	movwf	?_strcmp
  1401  031C  3031               	movlw	_card_store& (0+255)
  1402  031D  120A  118A  2606   	fcall	_strcmp
      +       120A  118A         
  1403  0322  0873               	movf	?_strcmp+1,w
  1404  0323  0472               	iorwf	?_strcmp,w
  1405  0324  1D03               	skipz
  1406  0325  2B28               	goto	l2839
  1407                           
  1408                           ;Main.c: 171: {User=3;}
  1409  0326  3003               	movlw	3
  1410  0327  2B29               	goto	L4
  1411  0328                     l2839:	
  1412                           
  1413                           ;Main.c: 172: else
  1414                           ;Main.c: 173: {User=8;}
  1415  0328  3008               	movlw	8
  1416  0329                     L4:	
  1417  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1418  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1419  032B  00A0               	movwf	_User
  1420  032C                     L3:	
  1421  032C  01A1               	clrf	_User+1
  1422  032D  2C97               	goto	l2907
  1423  032E                     l2841:	
  1424                           
  1425                           ;Main.c: 177: {
  1426                           ;Main.c: 178: ReadAmnt();
  1427  032E  120A  118A  24C0   	fcall	_ReadAmnt
      +       120A  118A         
  1428                           
  1429                           ;Main.c: 179: lcdcmd(0x80);
  1430  0333  3080               	movlw	128
  1431  0334  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1432                           
  1433                           ;Main.c: 180: lcdstring("USER1 AMOUNT:       ");
  1434  0339  3071               	movlw	low (STR_5| (0+32768))
  1435  033A  00F7               	movwf	?_lcdstring
  1436  033B  3087               	movlw	high (STR_5| (0+32768))
  1437  033C  00F8               	movwf	?_lcdstring+1
  1438  033D  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1439                           
  1440                           ;Main.c: 181: DisplayAmnt(0X8D,User1amt);
  1441  0342  0823               	movf	_User1amt+1,w
  1442  0343  00E3               	movwf	?_DisplayAmnt+1
  1443  0344  0822               	movf	_User1amt,w
  1444  0345  00E2               	movwf	?_DisplayAmnt
  1445  0346  308D               	movlw	141
  1446  0347  120A  118A  2075   	fcall	_DisplayAmnt
      +       120A  118A         
  1447                           
  1448                           ;Main.c: 182: lcdcmd(0xC0);
  1449  034C  30C0               	movlw	192
  1450  034D  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1451                           
  1452                           ;Main.c: 183: lcdstring("RISE:   Kg          ");
  1453  0352  3032               	movlw	low (STR_6| (0+32768))
  1454  0353  00F7               	movwf	?_lcdstring
  1455  0354  3087               	movlw	high (STR_6| (0+32768))
  1456  0355  00F8               	movwf	?_lcdstring+1
  1457  0356  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1458                           
  1459                           ;Main.c: 184: DisplayRise(0XC5,User1Rise);
  1460  035B  087A               	movf	_User1Rise,w
  1461  035C  00F7               	movwf	?_DisplayRise
  1462  035D  30C5               	movlw	197
  1463  035E  120A  118A  2035   	fcall	_DisplayRise
      +       120A  118A         
  1464                           
  1465                           ;Main.c: 185: lcdcmd(0x94);
  1466  0363  3094               	movlw	148
  1467  0364  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1468                           
  1469                           ;Main.c: 186: lcdstring("SUGAR:   Kg         ");
  1470  0369  305C               	movlw	low (STR_7| (0+32768))
  1471  036A  00F7               	movwf	?_lcdstring
  1472  036B  3087               	movlw	high (STR_7| (0+32768))
  1473  036C  00F8               	movwf	?_lcdstring+1
  1474  036D  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1475                           
  1476                           ;Main.c: 187: DisplaySugar(0x9A,User1Sugar);
  1477  0372  0829               	movf	_User1Sugar,w
  1478  0373  00F7               	movwf	?_DisplaySugar
  1479  0374  309A               	movlw	154
  1480  0375  120A  118A  2055   	fcall	_DisplaySugar
      +       120A  118A         
  1481                           
  1482                           ;Main.c: 188: lcdcmd(0xD4);
  1483  037A  30D4               	movlw	212
  1484  037B  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1485                           
  1486                           ;Main.c: 189: lcdstring("KEROSENE:   Lts     ");
  1487  0380  30B0               	movlw	low (STR_8| (0+32768))
  1488  0381  00F7               	movwf	?_lcdstring
  1489  0382  3087               	movlw	high (STR_8| (0+32768))
  1490  0383  00F8               	movwf	?_lcdstring+1
  1491  0384  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1492                           
  1493                           ;Main.c: 190: DisplayKerosene(0XDD,User1Kerosene);
  1494  0389  0828               	movf	_User1Kerosene,w
  1495  038A  00F7               	movwf	?_DisplayKerosene
  1496  038B  30DD               	movlw	221
  1497  038C  120A  118A  2015   	fcall	_DisplayKerosene
      +       120A  118A         
  1498                           
  1499                           ;Main.c: 191: break;
  1500  0391  2AE7               	goto	l2819
  1501  0392                     l2859:	
  1502                           
  1503                           ;Main.c: 194: {
  1504                           ;Main.c: 195: ReadAmnt();
  1505  0392  120A  118A  24C0   	fcall	_ReadAmnt
      +       120A  118A         
  1506                           
  1507                           ;Main.c: 196: lcdcmd(0x80);
  1508  0397  3080               	movlw	128
  1509  0398  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1510                           
  1511                           ;Main.c: 197: lcdstring("USER2 AMOUNT:       ");
  1512  039D  3086               	movlw	low (STR_9| (0+32768))
  1513  039E  00F7               	movwf	?_lcdstring
  1514  039F  3087               	movlw	high (STR_9| (0+32768))
  1515  03A0  00F8               	movwf	?_lcdstring+1
  1516  03A1  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1517                           
  1518                           ;Main.c: 198: DisplayAmnt(0X8D,User2amt);
  1519  03A6  0825               	movf	_User2amt+1,w
  1520  03A7  00E3               	movwf	?_DisplayAmnt+1
  1521  03A8  0824               	movf	_User2amt,w
  1522  03A9  00E2               	movwf	?_DisplayAmnt
  1523  03AA  308D               	movlw	141
  1524  03AB  120A  118A  2075   	fcall	_DisplayAmnt
      +       120A  118A         
  1525                           
  1526                           ;Main.c: 199: lcdcmd(0xC0);
  1527  03B0  30C0               	movlw	192
  1528  03B1  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1529                           
  1530                           ;Main.c: 200: lcdstring("RISE:   Kg          ");
  1531  03B6  3032               	movlw	low (STR_6| (0+32768))
  1532  03B7  00F7               	movwf	?_lcdstring
  1533  03B8  3087               	movlw	high (STR_6| (0+32768))
  1534  03B9  00F8               	movwf	?_lcdstring+1
  1535  03BA  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1536                           
  1537                           ;Main.c: 201: DisplayRise(0XC5,User2Rise);
  1538  03BF  082B               	movf	_User2Rise,w
  1539  03C0  00F7               	movwf	?_DisplayRise
  1540  03C1  30C5               	movlw	197
  1541  03C2  120A  118A  2035   	fcall	_DisplayRise
      +       120A  118A         
  1542                           
  1543                           ;Main.c: 202: lcdcmd(0x94);
  1544  03C7  3094               	movlw	148
  1545  03C8  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1546                           
  1547                           ;Main.c: 203: lcdstring("SUGAR:   Kg         ");
  1548  03CD  305C               	movlw	low (STR_7| (0+32768))
  1549  03CE  00F7               	movwf	?_lcdstring
  1550  03CF  3087               	movlw	high (STR_7| (0+32768))
  1551  03D0  00F8               	movwf	?_lcdstring+1
  1552  03D1  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1553                           
  1554                           ;Main.c: 204: DisplaySugar(0x9A,User2Sugar);
  1555  03D6  082C               	movf	_User2Sugar,w
  1556  03D7  00F7               	movwf	?_DisplaySugar
  1557  03D8  309A               	movlw	154
  1558  03D9  120A  118A  2055   	fcall	_DisplaySugar
      +       120A  118A         
  1559                           
  1560                           ;Main.c: 205: lcdcmd(0xD4);
  1561  03DE  30D4               	movlw	212
  1562  03DF  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1563                           
  1564                           ;Main.c: 206: lcdstring("KEROSENE:   Lts     ");
  1565  03E4  30B0               	movlw	low (STR_8| (0+32768))
  1566  03E5  00F7               	movwf	?_lcdstring
  1567  03E6  3087               	movlw	high (STR_8| (0+32768))
  1568  03E7  00F8               	movwf	?_lcdstring+1
  1569  03E8  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1570                           
  1571                           ;Main.c: 207: DisplayKerosene(0XDD,User2Kerosene);
  1572  03ED  082A               	movf	_User2Kerosene,w
  1573  03EE  00F7               	movwf	?_DisplayKerosene
  1574  03EF  30DD               	movlw	221
  1575  03F0  120A  118A  2015   	fcall	_DisplayKerosene
      +       120A  118A         
  1576                           
  1577                           ;Main.c: 208: break;
  1578  03F5  2AE7               	goto	l2819
  1579  03F6                     l2877:	
  1580                           
  1581                           ;Main.c: 211: {
  1582                           ;Main.c: 212: ReadAmnt();
  1583  03F6  120A  118A  24C0   	fcall	_ReadAmnt
      +       120A  118A         
  1584                           
  1585                           ;Main.c: 213: lcdcmd(0x80);
  1586  03FB  3080               	movlw	128
  1587  03FC  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1588                           
  1589                           ;Main.c: 214: lcdstring("USER3 AMOUNT:       ");
  1590  0401  309B               	movlw	low (STR_13| (0+32768))
  1591  0402  00F7               	movwf	?_lcdstring
  1592  0403  3087               	movlw	high (STR_13| (0+32768))
  1593  0404  00F8               	movwf	?_lcdstring+1
  1594  0405  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1595                           
  1596                           ;Main.c: 215: DisplayAmnt(0X8D,User3amt);
  1597  040A  0827               	movf	_User3amt+1,w
  1598  040B  00E3               	movwf	?_DisplayAmnt+1
  1599  040C  0826               	movf	_User3amt,w
  1600  040D  00E2               	movwf	?_DisplayAmnt
  1601  040E  308D               	movlw	141
  1602  040F  120A  118A  2075   	fcall	_DisplayAmnt
      +       120A  118A         
  1603                           
  1604                           ;Main.c: 216: lcdcmd(0xC0);
  1605  0414  30C0               	movlw	192
  1606  0415  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1607                           
  1608                           ;Main.c: 217: lcdstring("RISE:   Kg          ");
  1609  041A  3032               	movlw	low (STR_6| (0+32768))
  1610  041B  00F7               	movwf	?_lcdstring
  1611  041C  3087               	movlw	high (STR_6| (0+32768))
  1612  041D  00F8               	movwf	?_lcdstring+1
  1613  041E  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1614                           
  1615                           ;Main.c: 218: DisplayRise(0XC5,User3Rise);
  1616  0423  082E               	movf	_User3Rise,w
  1617  0424  00F7               	movwf	?_DisplayRise
  1618  0425  30C5               	movlw	197
  1619  0426  120A  118A  2035   	fcall	_DisplayRise
      +       120A  118A         
  1620                           
  1621                           ;Main.c: 219: lcdcmd(0x94);
  1622  042B  3094               	movlw	148
  1623  042C  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1624                           
  1625                           ;Main.c: 220: lcdstring("SUGAR:   Kg         ");
  1626  0431  305C               	movlw	low (STR_7| (0+32768))
  1627  0432  00F7               	movwf	?_lcdstring
  1628  0433  3087               	movlw	high (STR_7| (0+32768))
  1629  0434  00F8               	movwf	?_lcdstring+1
  1630  0435  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1631                           
  1632                           ;Main.c: 221: DisplaySugar(0x9A,User3Sugar);
  1633  043A  082F               	movf	_User3Sugar,w
  1634  043B  00F7               	movwf	?_DisplaySugar
  1635  043C  309A               	movlw	154
  1636  043D  120A  118A  2055   	fcall	_DisplaySugar
      +       120A  118A         
  1637                           
  1638                           ;Main.c: 222: lcdcmd(0xD4);
  1639  0442  30D4               	movlw	212
  1640  0443  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1641                           
  1642                           ;Main.c: 223: lcdstring("KEROSENE:   Lts     ");
  1643  0448  30B0               	movlw	low (STR_8| (0+32768))
  1644  0449  00F7               	movwf	?_lcdstring
  1645  044A  3087               	movlw	high (STR_8| (0+32768))
  1646  044B  00F8               	movwf	?_lcdstring+1
  1647  044C  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1648                           
  1649                           ;Main.c: 224: DisplayKerosene(0XDD,User3Kerosene);
  1650  0451  082D               	movf	_User3Kerosene,w
  1651  0452  00F7               	movwf	?_DisplayKerosene
  1652  0453  30DD               	movlw	221
  1653  0454  120A  118A  2015   	fcall	_DisplayKerosene
      +       120A  118A         
  1654                           
  1655                           ;Main.c: 225: break;
  1656  0459  2AE7               	goto	l2819
  1657  045A                     l2895:	
  1658                           
  1659                           ;Main.c: 228: {
  1660                           ;Main.c: 230: lcdcmd(0x80);
  1661  045A  3080               	movlw	128
  1662  045B  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1663                           
  1664                           ;Main.c: 231: lcdstring("USER NOT AUTHENTICAT");
  1665  0460  30DA               	movlw	low (STR_17| (0+32768))
  1666  0461  00F7               	movwf	?_lcdstring
  1667  0462  3087               	movlw	high (STR_17| (0+32768))
  1668  0463  00F8               	movwf	?_lcdstring+1
  1669  0464  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1670                           
  1671                           ;Main.c: 232: lcdcmd(0xC0);
  1672  0469  30C0               	movlw	192
  1673  046A  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1674                           
  1675                           ;Main.c: 233: lcdstring(" PLEASE CHECK YOUR  ");
  1676  046F  30C5               	movlw	low (STR_18| (0+32768))
  1677  0470  00F7               	movwf	?_lcdstring
  1678  0471  3087               	movlw	high (STR_18| (0+32768))
  1679  0472  00F8               	movwf	?_lcdstring+1
  1680  0473  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1681                           
  1682                           ;Main.c: 234: lcdcmd(0x94);
  1683  0478  3094               	movlw	148
  1684  0479  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1685                           
  1686                           ;Main.c: 235: lcdstring("       CARD         ");
  1687  047E  3047               	movlw	low (STR_19| (0+32768))
  1688  047F  00F7               	movwf	?_lcdstring
  1689  0480  3087               	movlw	high (STR_19| (0+32768))
  1690  0481  00F8               	movwf	?_lcdstring+1
  1691  0482  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1692                           
  1693                           ;Main.c: 236: lcdcmd(0xD4);
  1694  0487  30D4               	movlw	212
  1695  0488  120A  118A  223A   	fcall	_lcdcmd
      +       120A  118A         
  1696                           
  1697                           ;Main.c: 237: lcdstring("                    ");
  1698  048D  301D               	movlw	low (STR_20| (0+32768))
  1699  048E  00F7               	movwf	?_lcdstring
  1700  048F  3087               	movlw	high (STR_20| (0+32768))
  1701  0490  00F8               	movwf	?_lcdstring+1
  1702  0491  120A  118A  2250   	fcall	_lcdstring
      +       120A  118A         
  1703                           
  1704                           ;Main.c: 239: }
  1705                           ;Main.c: 240: }
  1706  0496  2AE7               	goto	l2819
  1707  0497                     l2907:	
  1708                           
  1709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1710                           ; Switch size 1, requested type "space"
  1711                           ; Number of cases is 1, Range of values is 0 to 0
  1712                           ; switch strategies available:
  1713                           ; Name         Bytes Cycles
  1714                           ; simple_byte     4     3 (average)
  1715                           ; direct_byte    22    19 (fixed)
  1716                           ;	Chosen strategy is simple_byte
  1717  0497  0821               	movf	_User+1,w
  1718  0498  3A00               	xorlw	0	; case 0
  1719  0499  1D03               	btfss	3,2
  1720  049A  2C5A               	goto	l2895
  1721                           
  1722                           ; Switch size 1, requested type "space"
  1723                           ; Number of cases is 3, Range of values is 1 to 3
  1724                           ; switch strategies available:
  1725                           ; Name         Bytes Cycles
  1726                           ; simple_byte    10     6 (average)
  1727                           ; direct_byte    31    22 (fixed)
  1728                           ;	Chosen strategy is simple_byte
  1729  049B  0820               	movf	_User,w
  1730  049C  3A01               	xorlw	1	; case 1
  1731  049D  1903               	skipnz
  1732  049E  2B2E               	goto	l2841
  1733  049F  3A03               	xorlw	3	; case 2
  1734  04A0  1903               	skipnz
  1735  04A1  2B92               	goto	l2859
  1736  04A2  3A01               	xorlw	1	; case 3
  1737  04A3  1903               	skipnz
  1738  04A4  2BF6               	goto	l2877
  1739  04A5  2C5A               	goto	l2895
  1740  04A6                     __end_of_main:	
  1741                           
  1742                           	psect	text728
  1743  000F                     __ptext728:	
  1744 ;; =============== function _lcd_init ends ============
  1745                           
  1746                           
  1747 ;; *************** function _lcdclear *****************
  1748 ;; Defined at:
  1749 ;;		line 64 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;		None               void
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 60/0
  1760 ;;		On exit  : 60/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0
  1766 ;;      Totals:         0       0       0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    3
  1770 ;; This function calls:
  1771 ;;		_lcdcmd
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776  000F                     _lcdclear:	
  1777                           
  1778                           ;lcd.c: 65: lcdcmd(0);
  1779                           
  1780                           ; Regs used in _lcdclear: [wreg+status,2+status,0+pclath+cstack]
  1781  000F  3000               	movlw	0
  1782  0010  223A  120A  118A   	fcall	_lcdcmd
  1783                           
  1784                           ;lcd.c: 66: lcdcmd(1);
  1785  0013  3001               	movlw	1
  1786  0014  2A3A               	ljmp	_lcdcmd
  1787  0015                     __end_of_lcdclear:	
  1788  0015                     __ptext722:	
  1789 ;; =============== function _startup ends ============
  1790                           
  1791                           
  1792 ;; *************** function _DisplayKerosene *****************
  1793 ;; Defined at:
  1794 ;;		line 90 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  Location        1    wreg     unsigned char 
  1797 ;;  Kerosene        1    7[COMMON] unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  Location        1    8[COMMON] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;		None               void
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 60/0
  1806 ;;		On exit  : 60/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         1       0       0       0       0
  1810 ;;      Locals:         1       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0
  1812 ;;      Totals:         2       0       0       0       0
  1813 ;;Total ram usage:        2 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    3
  1816 ;; This function calls:
  1817 ;;		_lcdcmd
  1818 ;;		___lbdiv
  1819 ;;		_lcddata
  1820 ;;		___lbmod
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825  0015                     _DisplayKerosene:	
  1826                           
  1827                           ; Regs used in _DisplayKerosene: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1828                           ;DisplayKerosene@Location stored from wreg
  1829  0015  00F8               	movwf	DisplayKerosene@Location
  1830                           
  1831                           ;Main.c: 91: lcdcmd(Location);
  1832  0016  223A  120A  118A   	fcall	_lcdcmd
  1833                           
  1834                           ;Main.c: 92: lcddata(digit[Kerosene/10]);
  1835  0019  300A               	movlw	10
  1836  001A  00F2               	movwf	?___lbdiv
  1837  001B  0877               	movf	DisplayKerosene@Kerosene,w
  1838  001C  226C  120A  118A   	fcall	___lbdiv
  1839  001F  22A3               	fcall	PL2	;call to abstracted procedure
  1840  0020  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  1841  0025  2127  120A  118A   	fcall	_lcddata
  1842                           
  1843                           ;Main.c: 93: lcddata(digit[Kerosene%10]);
  1844  0028  300A               	movlw	10
  1845  0029  00F2               	movwf	?___lbmod
  1846  002A  0877               	movf	DisplayKerosene@Kerosene,w
  1847  002B  2287  120A  118A   	fcall	___lbmod
  1848  002E  22A3               	fcall	PL2	;call to abstracted procedure
  1849  002F  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  1850  0034  2927               	ljmp	_lcddata
  1851  0035                     __end_of_DisplayKerosene:	
  1852  0035                     __ptext723:	
  1853 ;; =============== function _DisplayKerosene ends ============
  1854                           
  1855                           
  1856 ;; *************** function _DisplayRise *****************
  1857 ;; Defined at:
  1858 ;;		line 84 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  Location        1    wreg     unsigned char 
  1861 ;;  Rise            1    7[COMMON] unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  Location        1    8[COMMON] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 60/0
  1870 ;;		On exit  : 60/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         1       0       0       0       0
  1874 ;;      Locals:         1       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0
  1876 ;;      Totals:         2       0       0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    3
  1880 ;; This function calls:
  1881 ;;		_lcdcmd
  1882 ;;		___lbdiv
  1883 ;;		_lcddata
  1884 ;;		___lbmod
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889  0035                     _DisplayRise:	
  1890                           
  1891                           ; Regs used in _DisplayRise: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1892                           ;DisplayRise@Location stored from wreg
  1893  0035  00F8               	movwf	DisplayRise@Location
  1894                           
  1895                           ;Main.c: 85: lcdcmd(Location);
  1896  0036  223A  120A  118A   	fcall	_lcdcmd
  1897                           
  1898                           ;Main.c: 86: lcddata(digit[Rise/10]);
  1899  0039  300A               	movlw	10
  1900  003A  00F2               	movwf	?___lbdiv
  1901  003B  0877               	movf	DisplayRise@Rise,w
  1902  003C  226C  120A  118A   	fcall	___lbdiv
  1903  003F  22A3               	fcall	PL2	;call to abstracted procedure
  1904  0040  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  1905  0045  2127  120A  118A   	fcall	_lcddata
  1906                           
  1907                           ;Main.c: 87: lcddata(digit[Rise%10]);
  1908  0048  300A               	movlw	10
  1909  0049  00F2               	movwf	?___lbmod
  1910  004A  0877               	movf	DisplayRise@Rise,w
  1911  004B  2287  120A  118A   	fcall	___lbmod
  1912  004E  22A3               	fcall	PL2	;call to abstracted procedure
  1913  004F  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  1914  0054  2927               	ljmp	_lcddata
  1915  0055                     __end_of_DisplayRise:	
  1916  0055                     __ptext724:	
  1917 ;; =============== function _DisplayRise ends ============
  1918                           
  1919                           
  1920 ;; *************** function _DisplaySugar *****************
  1921 ;; Defined at:
  1922 ;;		line 78 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  Location        1    wreg     unsigned char 
  1925 ;;  Sugar           1    7[COMMON] unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  Location        1    8[COMMON] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;		None               void
  1930 ;; Registers used:
  1931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 60/0
  1934 ;;		On exit  : 60/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         1       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0
  1940 ;;      Totals:         2       0       0       0       0
  1941 ;;Total ram usage:        2 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    3
  1944 ;; This function calls:
  1945 ;;		_lcdcmd
  1946 ;;		___lbdiv
  1947 ;;		_lcddata
  1948 ;;		___lbmod
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953  0055                     _DisplaySugar:	
  1954                           
  1955                           ; Regs used in _DisplaySugar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1956                           ;DisplaySugar@Location stored from wreg
  1957  0055  00F8               	movwf	DisplaySugar@Location
  1958                           
  1959                           ;Main.c: 79: lcdcmd(Location);
  1960  0056  223A  120A  118A   	fcall	_lcdcmd
  1961                           
  1962                           ;Main.c: 80: lcddata(digit[Sugar/10]);
  1963  0059  300A               	movlw	10
  1964  005A  00F2               	movwf	?___lbdiv
  1965  005B  0877               	movf	DisplaySugar@Sugar,w
  1966  005C  226C  120A  118A   	fcall	___lbdiv
  1967  005F  22A3               	fcall	PL2	;call to abstracted procedure
  1968  0060  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  1969  0065  2127  120A  118A   	fcall	_lcddata
  1970                           
  1971                           ;Main.c: 81: lcddata(digit[Sugar%10]);
  1972  0068  300A               	movlw	10
  1973  0069  00F2               	movwf	?___lbmod
  1974  006A  0877               	movf	DisplaySugar@Sugar,w
  1975  006B  2287  120A  118A   	fcall	___lbmod
  1976  006E  22A3               	fcall	PL2	;call to abstracted procedure
  1977  006F  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  1978  0074  2927               	ljmp	_lcddata
  1979  0075                     __end_of_DisplaySugar:	
  1980  0075                     __ptext725:	
  1981 ;; =============== function _DisplaySugar ends ============
  1982                           
  1983                           
  1984 ;; *************** function _DisplayAmnt *****************
  1985 ;; Defined at:
  1986 ;;		line 70 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  Location        1    wreg     unsigned char 
  1989 ;;  Amnt            2    8[BANK0 ] int 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  Location        1   10[BANK0 ] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;		None               void
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 60/0
  1998 ;;		On exit  : 60/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       2       0       0       0
  2002 ;;      Locals:         0       3       0       0       0
  2003 ;;      Temps:          0       0       0       0       0
  2004 ;;      Totals:         0       5       0       0       0
  2005 ;;Total ram usage:        5 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    3
  2008 ;; This function calls:
  2009 ;;		_lcdcmd
  2010 ;;		___awdiv
  2011 ;;		_lcddata
  2012 ;;		___awmod
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017  0075                     _DisplayAmnt:	
  2018                           
  2019                           ; Regs used in _DisplayAmnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2020                           ;DisplayAmnt@Location stored from wreg
  2021  0075  00E4               	movwf	DisplayAmnt@Location
  2022                           
  2023                           ;Main.c: 71: lcdcmd(Location);
  2024  0076  223A  120A  118A   	fcall	_lcdcmd
  2025                           
  2026                           ;Main.c: 72: lcddata(digit[Amnt/1000]);
  2027  0079  30E8               	movlw	232
  2028  007A  00DA               	movwf	?___awdiv
  2029  007B  3003               	movlw	3
  2030  007C  00DB               	movwf	?___awdiv+1
  2031  007D  0863               	movf	DisplayAmnt@Amnt+1,w
  2032  007E  00DD               	movwf	?___awdiv+3
  2033  007F  0862               	movf	DisplayAmnt@Amnt,w
  2034  0080  00DC               	movwf	?___awdiv+2
  2035  0081  2140  120A  118A   	fcall	___awdiv
  2036  0084  085A               	movf	?___awdiv,w
  2037  0085  22A3               	fcall	PL2	;call to abstracted procedure
  2038  0086  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2039  008B  2127  120A  118A   	fcall	_lcddata
  2040                           
  2041                           ;Main.c: 73: lcddata(digit[Amnt%1000/100]);
  2042  008E  3064               	movlw	100
  2043  008F  00DA               	movwf	?___awdiv
  2044  0090  01DB               	clrf	?___awdiv+1
  2045  0091  22AA  120A  118A   	fcall	PL3	;call to abstracted procedure
  2046  0094  20EA  120A  118A   	fcall	___awmod
  2047  0097  0873               	movf	?___awmod+1,w
  2048  0098  00DD               	movwf	?___awdiv+3
  2049  0099  0872               	movf	?___awmod,w
  2050  009A  00DC               	movwf	?___awdiv+2
  2051  009B  2140  120A  118A   	fcall	___awdiv
  2052  009E  085A               	movf	?___awdiv,w
  2053  009F  22A3               	fcall	PL2	;call to abstracted procedure
  2054  00A0  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2055  00A5  2127  120A  118A   	fcall	_lcddata
  2056                           
  2057                           ;Main.c: 74: lcddata(digit[Amnt%1000%100/10]);
  2058  00A8  300A               	movlw	10
  2059  00A9  00DA               	movwf	?___awdiv
  2060  00AA  01DB               	clrf	?___awdiv+1
  2061  00AB  22AA  120A  118A   	fcall	PL3	;call to abstracted procedure
  2062  00AE  20EA  120A  118A   	fcall	___awmod
  2063  00B1  22B3  120A  118A   	fcall	PL4	;call to abstracted procedure
  2064  00B4  20EA  120A  118A   	fcall	___awmod
  2065  00B7  0873               	movf	?___awmod+1,w
  2066  00B8  00DD               	movwf	?___awdiv+3
  2067  00B9  0872               	movf	?___awmod,w
  2068  00BA  00DC               	movwf	?___awdiv+2
  2069  00BB  2140  120A  118A   	fcall	___awdiv
  2070  00BE  085A               	movf	?___awdiv,w
  2071  00BF  22A3               	fcall	PL2	;call to abstracted procedure
  2072  00C0  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2073  00C5  2127  120A  118A   	fcall	_lcddata
  2074                           
  2075                           ;Main.c: 75: lcddata(digit[Amnt%1000%100%10]);
  2076  00C8  22AA  120A  118A   	fcall	PL3	;call to abstracted procedure
  2077  00CB  20EA  120A  118A   	fcall	___awmod
  2078  00CE  22B3  120A  118A   	fcall	PL4	;call to abstracted procedure
  2079  00D1  20EA  120A  118A   	fcall	___awmod
  2080  00D4  0873               	movf	?___awmod+1,w
  2081  00D5  00E6               	movwf	_DisplayAmnt$973+1
  2082  00D6  0872               	movf	?___awmod,w
  2083  00D7  00E5               	movwf	_DisplayAmnt$973
  2084                           
  2085                           ;Main.c: 75: lcddata(digit[Amnt%1000%100%10]);
  2086  00D8  300A               	movlw	10
  2087  00D9  00F2               	movwf	?___awmod
  2088  00DA  01F3               	clrf	?___awmod+1
  2089  00DB  0866               	movf	_DisplayAmnt$973+1,w
  2090  00DC  00F5               	movwf	?___awmod+3
  2091  00DD  0865               	movf	_DisplayAmnt$973,w
  2092  00DE  00F4               	movwf	?___awmod+2
  2093  00DF  20EA  120A  118A   	fcall	___awmod
  2094  00E2  0872               	movf	?___awmod,w
  2095  00E3  22A3               	fcall	PL2	;call to abstracted procedure
  2096  00E4  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2097  00E9  2927               	ljmp	_lcddata
  2098  00EA                     __end_of_DisplayAmnt:	
  2099  00EA                     __ptext737:	
  2100 ;; =============== function _enable ends ============
  2101                           
  2102                           
  2103 ;; *************** function ___awmod *****************
  2104 ;; Defined at:
  2105 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awmod.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  divisor         2    2[COMMON] int 
  2108 ;;  dividend        2    4[COMMON] int 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  sign            1    7[COMMON] unsigned char 
  2111 ;;  counter         1    6[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  2    2[COMMON] int 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : 60/0
  2118 ;;		On exit  : 60/0
  2119 ;;		Unchanged: FFF9F/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         4       0       0       0       0
  2122 ;;      Locals:         2       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0
  2124 ;;      Totals:         6       0       0       0       0
  2125 ;;Total ram usage:        6 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_DisplayAmnt
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134  00EA                     ___awmod:	
  2135                           
  2136                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2137  00EA  01F7               	clrf	___awmod@sign
  2138  00EB  1FF5               	btfss	___awmod@dividend+1,7
  2139  00EC  28F4               	goto	l2367
  2140  00ED  09F4               	comf	___awmod@dividend,f
  2141  00EE  09F5               	comf	___awmod@dividend+1,f
  2142  00EF  0AF4               	incf	___awmod@dividend,f
  2143  00F0  1903               	skipnz
  2144  00F1  0AF5               	incf	___awmod@dividend+1,f
  2145  00F2  01F7               	clrf	___awmod@sign
  2146  00F3  0AF7               	incf	___awmod@sign,f
  2147  00F4                     l2367:	
  2148  00F4  1FF3               	btfss	___awmod@divisor+1,7
  2149  00F5  28FB               	goto	l2371
  2150  00F6  09F2               	comf	___awmod@divisor,f
  2151  00F7  09F3               	comf	___awmod@divisor+1,f
  2152  00F8  0AF2               	incf	___awmod@divisor,f
  2153  00F9  1903               	skipnz
  2154  00FA  0AF3               	incf	___awmod@divisor+1,f
  2155  00FB                     l2371:	
  2156  00FB  0873               	movf	___awmod@divisor+1,w
  2157  00FC  0472               	iorwf	___awmod@divisor,w
  2158  00FD  1903               	skipnz
  2159  00FE  291A               	goto	l2387
  2160  00FF  01F6               	clrf	___awmod@counter
  2161  0100                     L5:	
  2162  0100  0AF6               	incf	___awmod@counter,f
  2163  0101  1BF3               	btfsc	___awmod@divisor+1,7
  2164  0102  2907               	goto	l2379
  2165  0103  1003               	clrc
  2166  0104  0DF2               	rlf	___awmod@divisor,f
  2167  0105  0DF3               	rlf	___awmod@divisor+1,f
  2168  0106  2900               	goto	L5
  2169  0107                     l2379:	
  2170  0107  0873               	movf	___awmod@divisor+1,w
  2171  0108  0275               	subwf	___awmod@dividend+1,w
  2172  0109  1D03               	skipz
  2173  010A  290D               	goto	u685
  2174  010B  0872               	movf	___awmod@divisor,w
  2175  010C  0274               	subwf	___awmod@dividend,w
  2176  010D                     u685:	
  2177  010D  1C03               	skipc
  2178  010E  2916               	goto	L6
  2179  010F  0872               	movf	___awmod@divisor,w
  2180  0110  02F4               	subwf	___awmod@dividend,f
  2181  0111  0873               	movf	___awmod@divisor+1,w
  2182  0112  1C03               	skipc
  2183  0113  03F5               	decf	___awmod@dividend+1,f
  2184  0114  02F5               	subwf	___awmod@dividend+1,f
  2185  0115  1003               	clrc
  2186  0116                     L6:	
  2187  0116  0CF3               	rrf	___awmod@divisor+1,f
  2188  0117  0CF2               	rrf	___awmod@divisor,f
  2189  0118  0BF6               	decfsz	___awmod@counter,f
  2190  0119  2907               	goto	l2379
  2191  011A                     l2387:	
  2192  011A  0877               	movf	___awmod@sign,w
  2193  011B  1903               	btfsc	3,2
  2194  011C  2922               	goto	l2391
  2195  011D  09F4               	comf	___awmod@dividend,f
  2196  011E  09F5               	comf	___awmod@dividend+1,f
  2197  011F  0AF4               	incf	___awmod@dividend,f
  2198  0120  1903               	skipnz
  2199  0121  0AF5               	incf	___awmod@dividend+1,f
  2200  0122                     l2391:	
  2201  0122  0875               	movf	___awmod@dividend+1,w
  2202  0123  00F3               	movwf	?___awmod+1
  2203  0124  0874               	movf	___awmod@dividend,w
  2204  0125  00F2               	movwf	?___awmod
  2205  0126  0008               	return
  2206  0127                     __end_of___awmod:	
  2207  0127                     __ptext730:	
  2208 ;; =============== function _RFID_read ends ============
  2209                           
  2210                           
  2211 ;; *************** function _lcddata *****************
  2212 ;; Defined at:
  2213 ;;		line 51 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  a               1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  a               1    6[COMMON] unsigned char 
  2218 ;;  z               1    5[COMMON] unsigned char 
  2219 ;;  y               1    4[COMMON] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;		None               void
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 60/0
  2226 ;;		On exit  : 60/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       0       0       0       0
  2230 ;;      Locals:         3       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0
  2232 ;;      Totals:         3       0       0       0       0
  2233 ;;Total ram usage:        3 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    2
  2236 ;; This function calls:
  2237 ;;		_lcdport
  2238 ;;		_enable
  2239 ;; This function is called by:
  2240 ;;		_lcdstring
  2241 ;;		_DisplayAmnt
  2242 ;;		_DisplaySugar
  2243 ;;		_DisplayRise
  2244 ;;		_DisplayKerosene
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247  0127                     _lcddata:	
  2248                           
  2249                           ; Regs used in _lcddata: [wreg+status,2+status,0+pclath+cstack]
  2250                           ;lcddata@a stored from wreg
  2251  0127  00F6               	movwf	lcddata@a
  2252                           
  2253                           ;lcd.c: 52: unsigned char y,z;
  2254                           ;lcd.c: 53: z=a>>4&0x0F;
  2255  0128  0E76               	swapf	lcddata@a,w
  2256  0129  390F               	andlw	15
  2257  012A  00F5               	movwf	lcddata@z
  2258  012B  300F               	movlw	15
  2259  012C  05F5               	andwf	lcddata@z,f
  2260                           
  2261                           ;lcd.c: 54: y=a&0x0F;
  2262  012D  0876               	movf	lcddata@a,w
  2263  012E  00F4               	movwf	lcddata@y
  2264  012F  300F               	movlw	15
  2265  0130  05F4               	andwf	lcddata@y,f
  2266                           
  2267                           ;lcd.c: 55: RD2=1;
  2268  0131  1508               	bsf	8,2
  2269                           
  2270                           ;lcd.c: 56: lcdport(z);
  2271  0132  0875               	movf	lcddata@z,w
  2272  0133  2185  120A  118A   	fcall	_lcdport
  2273                           
  2274                           ;lcd.c: 57: enable();
  2275  0136  219F  120A  118A   	fcall	_enable
  2276                           
  2277                           ;lcd.c: 58: lcdport(y);
  2278  0139  0874               	movf	lcddata@y,w
  2279  013A  2185  120A  118A   	fcall	_lcdport
  2280                           
  2281                           ;lcd.c: 59: enable();
  2282  013D  219F               	fcall	_enable
  2283                           
  2284                           ;lcd.c: 60: RD2 = 0;
  2285  013E  1108               	bcf	8,2
  2286  013F  0008               	return
  2287  0140                     __end_of_lcddata:	
  2288  0140                     __ptext738:	
  2289 ;; =============== function ___awmod ends ============
  2290                           
  2291                           
  2292 ;; *************** function ___awdiv *****************
  2293 ;; Defined at:
  2294 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  divisor         2    0[BANK0 ] int 
  2297 ;;  dividend        2    2[BANK0 ] int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  quotient        2    6[BANK0 ] int 
  2300 ;;  sign            1    5[BANK0 ] unsigned char 
  2301 ;;  counter         1    4[BANK0 ] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    0[BANK0 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 60/0
  2308 ;;		On exit  : 60/0
  2309 ;;		Unchanged: FFF9F/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       4       0       0       0
  2312 ;;      Locals:         0       4       0       0       0
  2313 ;;      Temps:          0       0       0       0       0
  2314 ;;      Totals:         0       8       0       0       0
  2315 ;;Total ram usage:        8 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_DisplayAmnt
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324  0140                     ___awdiv:	
  2325                           
  2326                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2327  0140  01DF               	clrf	___awdiv@sign
  2328  0141  1FDB               	btfss	___awdiv@divisor+1,7
  2329  0142  294A               	goto	l2731
  2330  0143  09DA               	comf	___awdiv@divisor,f
  2331  0144  09DB               	comf	___awdiv@divisor+1,f
  2332  0145  0ADA               	incf	___awdiv@divisor,f
  2333  0146  1903               	skipnz
  2334  0147  0ADB               	incf	___awdiv@divisor+1,f
  2335  0148  01DF               	clrf	___awdiv@sign
  2336  0149  0ADF               	incf	___awdiv@sign,f
  2337  014A                     l2731:	
  2338  014A  1FDD               	btfss	___awdiv@dividend+1,7
  2339  014B  2953               	goto	l2737
  2340  014C  09DC               	comf	___awdiv@dividend,f
  2341  014D  09DD               	comf	___awdiv@dividend+1,f
  2342  014E  0ADC               	incf	___awdiv@dividend,f
  2343  014F  1903               	skipnz
  2344  0150  0ADD               	incf	___awdiv@dividend+1,f
  2345  0151  3001               	movlw	1
  2346  0152  06DF               	xorwf	___awdiv@sign,f
  2347  0153                     l2737:	
  2348  0153  01E0               	clrf	___awdiv@quotient
  2349  0154  01E1               	clrf	___awdiv@quotient+1
  2350  0155  085B               	movf	___awdiv@divisor+1,w
  2351  0156  045A               	iorwf	___awdiv@divisor,w
  2352  0157  1903               	skipnz
  2353  0158  2978               	goto	l2759
  2354  0159  01DE               	clrf	___awdiv@counter
  2355  015A                     L7:	
  2356  015A  0ADE               	incf	___awdiv@counter,f
  2357  015B  1BDB               	btfsc	___awdiv@divisor+1,7
  2358  015C  2961               	goto	l2747
  2359  015D  1003               	clrc
  2360  015E  0DDA               	rlf	___awdiv@divisor,f
  2361  015F  0DDB               	rlf	___awdiv@divisor+1,f
  2362  0160  295A               	goto	L7
  2363  0161                     l2747:	
  2364  0161  1003               	clrc
  2365  0162  0DE0               	rlf	___awdiv@quotient,f
  2366  0163  0DE1               	rlf	___awdiv@quotient+1,f
  2367  0164  085B               	movf	___awdiv@divisor+1,w
  2368  0165  025D               	subwf	___awdiv@dividend+1,w
  2369  0166  1D03               	skipz
  2370  0167  296A               	goto	u875
  2371  0168  085A               	movf	___awdiv@divisor,w
  2372  0169  025C               	subwf	___awdiv@dividend,w
  2373  016A                     u875:	
  2374  016A  1C03               	skipc
  2375  016B  2974               	goto	L8
  2376  016C  085A               	movf	___awdiv@divisor,w
  2377  016D  02DC               	subwf	___awdiv@dividend,f
  2378  016E  085B               	movf	___awdiv@divisor+1,w
  2379  016F  1C03               	skipc
  2380  0170  03DD               	decf	___awdiv@dividend+1,f
  2381  0171  02DD               	subwf	___awdiv@dividend+1,f
  2382  0172  1460               	bsf	___awdiv@quotient,0
  2383  0173  1003               	clrc
  2384  0174                     L8:	
  2385  0174  0CDB               	rrf	___awdiv@divisor+1,f
  2386  0175  0CDA               	rrf	___awdiv@divisor,f
  2387  0176  0BDE               	decfsz	___awdiv@counter,f
  2388  0177  2961               	goto	l2747
  2389  0178                     l2759:	
  2390  0178  085F               	movf	___awdiv@sign,w
  2391  0179  1903               	btfsc	3,2
  2392  017A  2980               	goto	l2763
  2393  017B  09E0               	comf	___awdiv@quotient,f
  2394  017C  09E1               	comf	___awdiv@quotient+1,f
  2395  017D  0AE0               	incf	___awdiv@quotient,f
  2396  017E  1903               	skipnz
  2397  017F  0AE1               	incf	___awdiv@quotient+1,f
  2398  0180                     l2763:	
  2399  0180  0861               	movf	___awdiv@quotient+1,w
  2400  0181  00DB               	movwf	?___awdiv+1
  2401  0182  0860               	movf	___awdiv@quotient,w
  2402  0183  00DA               	movwf	?___awdiv
  2403  0184  0008               	return
  2404  0185                     __end_of___awdiv:	
  2405  0185                     __ptext745:	
  2406 ;; =============== function _eeprom_read ends ============
  2407                           
  2408                           
  2409 ;; *************** function _lcdport *****************
  2410 ;; Defined at:
  2411 ;;		line 16 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  a               1    wreg     unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  a               1    2[COMMON] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;		None               void
  2418 ;; Registers used:
  2419 ;;		wreg
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 60/0
  2423 ;;		Unchanged: FFF9F/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_lcdcmd
  2436 ;;		_lcddata
  2437 ;;		_lcd_init
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440  0185                     _lcdport:	
  2441                           
  2442                           ; Regs used in _lcdport: [wreg]
  2443                           ;lcdport@a stored from wreg
  2444  0185  00F2               	movwf	lcdport@a
  2445                           
  2446                           ;lcd.c: 17: if(a & 1)
  2447  0186  1C72               	btfss	lcdport@a,0
  2448  0187  298C               	goto	l934
  2449                           
  2450                           ;lcd.c: 18: RD4 = 1;
  2451  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2453  018A  1608               	bsf	8,4
  2454  018B  298F               	goto	l935
  2455  018C                     l934:	
  2456                           
  2457                           ;lcd.c: 19: else
  2458                           ;lcd.c: 20: RD4 = 0;
  2459  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2460  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2461  018E  1208               	bcf	8,4
  2462  018F                     l935:	
  2463                           
  2464                           ;lcd.c: 22: if(a & 2)
  2465  018F  1CF2               	btfss	lcdport@a,1
  2466  0190  2993               	goto	l936
  2467                           
  2468                           ;lcd.c: 23: RD5 = 1;
  2469  0191  1688               	bsf	8,5
  2470  0192  2994               	goto	l937
  2471  0193                     l936:	
  2472                           
  2473                           ;lcd.c: 24: else
  2474                           ;lcd.c: 25: RD5 = 0;
  2475  0193  1288               	bcf	8,5
  2476  0194                     l937:	
  2477                           
  2478                           ;lcd.c: 27: if(a & 4)
  2479  0194  1D72               	btfss	lcdport@a,2
  2480  0195  2998               	goto	l938
  2481                           
  2482                           ;lcd.c: 28: RD6 = 1;
  2483  0196  1708               	bsf	8,6
  2484  0197  2999               	goto	l939
  2485  0198                     l938:	
  2486                           
  2487                           ;lcd.c: 29: else
  2488                           ;lcd.c: 30: RD6 = 0;
  2489  0198  1308               	bcf	8,6
  2490  0199                     l939:	
  2491                           
  2492                           ;lcd.c: 32: if(a & 8)
  2493  0199  1DF2               	btfss	lcdport@a,3
  2494  019A  299D               	goto	l940
  2495                           
  2496                           ;lcd.c: 33: RD7 = 1;
  2497  019B  1788               	bsf	8,7
  2498  019C  0008               	return
  2499  019D                     l940:	
  2500                           
  2501                           ;lcd.c: 34: else
  2502                           ;lcd.c: 35: RD7 = 0;
  2503  019D  1388               	bcf	8,7
  2504  019E  0008               	return
  2505  019F                     __end_of_lcdport:	
  2506  019F                     __ptext736:	
  2507 ;; =============== function _SoftWareUart_Init ends ============
  2508                           
  2509                           
  2510 ;; *************** function _enable *****************
  2511 ;; Defined at:
  2512 ;;		line 9 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		wreg
  2521 ;; Tracked objects:
  2522 ;;		On entry : 60/0
  2523 ;;		On exit  : 60/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0
  2529 ;;      Totals:         2       0       0       0       0
  2530 ;;Total ram usage:        2 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_lcdcmd
  2537 ;;		_lcddata
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540  019F                     _enable:	
  2541  019F                     l2395:	
  2542                           ; Regs used in _enable: [wreg]
  2543                           
  2544                           
  2545                           ;lcd.c: 10: RD3 = 1;
  2546  019F  1588               	bsf	8,3
  2547                           
  2548                           ;lcd.c: 11: _delay((unsigned long)((4)*(20000000/4000.0)));
  2549  01A0  301A               	movlw	26
  2550  01A1  00F3               	movwf	??_enable+1
  2551  01A2  30F8               	movlw	248
  2552  01A3  00F2               	movwf	??_enable
  2553  01A4                     u1047:	
  2554  01A4  0BF2               	decfsz	??_enable,f
  2555  01A5  29A4               	goto	u1047
  2556  01A6  0BF3               	decfsz	??_enable+1,f
  2557  01A7  29A4               	goto	u1047
  2558  01A8  0064               	clrwdt
  2559                           
  2560                           ;lcd.c: 12: RD3 = 0;
  2561  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2562  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2563  01AB  1188               	bcf	8,3
  2564  01AC  0008               	return
  2565  01AD                     __end_of_enable:	
  2566  01AD                     __ptext721:	
  2567 ;; =============== function _main ends ============
  2568                           
  2569                           
  2570 ;; *************** function _startup *****************
  2571 ;; Defined at:
  2572 ;;		line 128 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/40
  2583 ;;		On exit  : 60/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       3       0       0       0
  2589 ;;      Totals:         0       3       0       0       0
  2590 ;;Total ram usage:        3 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    4
  2593 ;; This function calls:
  2594 ;;		_lcdcmd
  2595 ;;		_lcdstring
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600  01AD                     _startup:	
  2601                           
  2602                           ;Main.c: 129: lcdcmd(0x80);
  2603                           
  2604                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2605  01AD  3080               	movlw	128
  2606  01AE  223A  120A  118A   	fcall	_lcdcmd
  2607                           
  2608                           ;Main.c: 130: lcdstring("AUTOMATIC RATION ");
  2609  01B1  3025               	movlw	low (STR_1| (0+32768))
  2610  01B2  00F7               	movwf	?_lcdstring
  2611  01B3  3088               	movlw	high (STR_1| (0+32768))
  2612  01B4  00F8               	movwf	?_lcdstring+1
  2613  01B5  2250  120A  118A   	fcall	_lcdstring
  2614                           
  2615                           ;Main.c: 131: lcdcmd(0xC0);
  2616  01B8  30C0               	movlw	192
  2617  01B9  223A  120A  118A   	fcall	_lcdcmd
  2618                           
  2619                           ;Main.c: 132: lcdstring("   CARD SYSTEM   ");
  2620  01BC  3001               	movlw	low (STR_2| (0+32768))
  2621  01BD  00F7               	movwf	?_lcdstring
  2622  01BE  3088               	movlw	high (STR_2| (0+32768))
  2623  01BF  00F8               	movwf	?_lcdstring+1
  2624  01C0  2250  120A  118A   	fcall	_lcdstring
  2625                           
  2626                           ;Main.c: 133: _delay((unsigned long)((5000)*(20000000/4000.0)));
  2627  01C3  307F               	movlw	127
  2628  01C4  00DC               	movwf	??_startup+2
  2629  01C5  3056               	movlw	86
  2630  01C6  00DB               	movwf	??_startup+1
  2631  01C7  3084               	movlw	132
  2632  01C8  00DA               	movwf	??_startup
  2633  01C9                     u957:	
  2634  01C9  0BDA               	decfsz	??_startup,f
  2635  01CA  29C9               	goto	u957
  2636  01CB  0BDB               	decfsz	??_startup+1,f
  2637  01CC  29C9               	goto	u957
  2638  01CD  0BDC               	decfsz	??_startup+2,f
  2639  01CE  29C9               	goto	u957
  2640  01CF  29D0               	nop2
  2641                           
  2642                           ;Main.c: 134: lcdcmd(0x01);
  2643  01D0  3001               	movlw	1
  2644  01D1  223A  120A  118A   	fcall	_lcdcmd
  2645                           
  2646                           ;Main.c: 135: _delay((unsigned long)((500)*(20000000/4000.0)));
  2647  01D4  300D               	movlw	13
  2648  01D5  00DC               	movwf	??_startup+2
  2649  01D6  30A3               	movlw	163
  2650  01D7  00DB               	movwf	??_startup+1
  2651  01D8  30BD               	movlw	189
  2652  01D9  00DA               	movwf	??_startup
  2653  01DA                     u967:	
  2654  01DA  0BDA               	decfsz	??_startup,f
  2655  01DB  29DA               	goto	u967
  2656  01DC  0BDB               	decfsz	??_startup+1,f
  2657  01DD  29DA               	goto	u967
  2658  01DE  0BDC               	decfsz	??_startup+2,f
  2659  01DF  29DA               	goto	u967
  2660  01E0  0064               	clrwdt
  2661                           
  2662                           ;Main.c: 136: lcdcmd(0x80);
  2663  01E1  3080               	movlw	128
  2664  01E2  223A  120A  118A   	fcall	_lcdcmd
  2665                           
  2666                           ;Main.c: 137: lcdstring("PLEASE TAP YOUR  ");
  2667  01E5  3013               	movlw	low (STR_3| (0+32768))
  2668  01E6  00F7               	movwf	?_lcdstring
  2669  01E7  3088               	movlw	high (STR_3| (0+32768))
  2670  01E8  00F8               	movwf	?_lcdstring+1
  2671  01E9  2250  120A  118A   	fcall	_lcdstring
  2672                           
  2673                           ;Main.c: 138: lcdcmd(0xC0);
  2674  01EC  30C0               	movlw	192
  2675  01ED  223A  120A  118A   	fcall	_lcdcmd
  2676                           
  2677                           ;Main.c: 139: lcdstring("SMART CARD       ");
  2678  01F0  30EF               	movlw	low (STR_4| (0+32768))
  2679  01F1  00F7               	movwf	?_lcdstring
  2680  01F2  3087               	movlw	high (STR_4| (0+32768))
  2681  01F3  00F8               	movwf	?_lcdstring+1
  2682  01F4  2A50               	ljmp	l2497
  2683  01F5                     __end_of_startup:	
  2684  01F5                     __ptext727:	
  2685 ;; =============== function _lcdstring ends ============
  2686                           
  2687                           
  2688 ;; *************** function _lcd_init *****************
  2689 ;; Defined at:
  2690 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 17F/0
  2701 ;;		On exit  : 60/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0
  2706 ;;      Temps:          2       0       0       0       0
  2707 ;;      Totals:         2       0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    3
  2711 ;; This function calls:
  2712 ;;		_lcdport
  2713 ;;		_lcdcmd
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718  01F5                     _lcd_init:	
  2719                           
  2720                           ;lcd.c: 72: lcdport(0x00);
  2721                           
  2722                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2723  01F5  3000               	movlw	0
  2724  01F6  2185  120A  118A   	fcall	_lcdport
  2725                           
  2726                           ;lcd.c: 73: _delay((unsigned long)((20)*(20000000/4000.0)));
  2727  01F9  3082               	movlw	130
  2728  01FA  00F8               	movwf	??_lcd_init+1
  2729  01FB  30DD               	movlw	221
  2730  01FC  00F7               	movwf	??_lcd_init
  2731  01FD                     u977:	
  2732  01FD  0BF7               	decfsz	??_lcd_init,f
  2733  01FE  29FD               	goto	u977
  2734  01FF  0BF8               	decfsz	??_lcd_init+1,f
  2735  0200  29FD               	goto	u977
  2736  0201  2A02               	nop2
  2737                           
  2738                           ;lcd.c: 74: lcdcmd(0x03);
  2739  0202  3003               	movlw	3
  2740  0203  223A  120A  118A   	fcall	_lcdcmd
  2741                           
  2742                           ;lcd.c: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
  2743  0206  3021               	movlw	33
  2744  0207  00F8               	movwf	??_lcd_init+1
  2745  0208  3076               	movlw	118
  2746  0209  00F7               	movwf	??_lcd_init
  2747  020A                     u987:	
  2748  020A  0BF7               	decfsz	??_lcd_init,f
  2749  020B  2A0A               	goto	u987
  2750  020C  0BF8               	decfsz	??_lcd_init+1,f
  2751  020D  2A0A               	goto	u987
  2752  020E  0064               	clrwdt
  2753                           
  2754                           ;lcd.c: 76: lcdcmd(0x03);
  2755  020F  3003               	movlw	3
  2756  0210  223A  120A  118A   	fcall	_lcdcmd
  2757                           
  2758                           ;lcd.c: 77: _delay((unsigned long)((11)*(20000000/4000.0)));
  2759  0213  3048               	movlw	72
  2760  0214  00F8               	movwf	??_lcd_init+1
  2761  0215  306C               	movlw	108
  2762  0216  00F7               	movwf	??_lcd_init
  2763  0217                     u997:	
  2764  0217  0BF7               	decfsz	??_lcd_init,f
  2765  0218  2A17               	goto	u997
  2766  0219  0BF8               	decfsz	??_lcd_init+1,f
  2767  021A  2A17               	goto	u997
  2768  021B  0064               	clrwdt
  2769                           
  2770                           ;lcd.c: 78: lcdcmd(0x03);
  2771  021C  3003               	movlw	3
  2772  021D  223A  120A  118A   	fcall	_lcdcmd
  2773                           
  2774                           ;lcd.c: 80: lcdcmd(0x02);
  2775  0220  3002               	movlw	2
  2776  0221  223A  120A  118A   	fcall	_lcdcmd
  2777                           
  2778                           ;lcd.c: 81: lcdcmd(0x02);
  2779  0224  3002               	movlw	2
  2780  0225  223A  120A  118A   	fcall	_lcdcmd
  2781                           
  2782                           ;lcd.c: 82: lcdcmd(0x28);
  2783  0228  3028               	movlw	40
  2784  0229  223A  120A  118A   	fcall	_lcdcmd
  2785                           
  2786                           ;lcd.c: 83: lcdcmd(0x00);
  2787  022C  3000               	movlw	0
  2788  022D  223A  120A  118A   	fcall	_lcdcmd
  2789                           
  2790                           ;lcd.c: 84: lcdcmd(0x0C);
  2791  0230  300C               	movlw	12
  2792  0231  223A  120A  118A   	fcall	_lcdcmd
  2793                           
  2794                           ;lcd.c: 85: lcdcmd(0x00);
  2795  0234  3000               	movlw	0
  2796  0235  223A  120A  118A   	fcall	_lcdcmd
  2797                           
  2798                           ;lcd.c: 86: lcdcmd(0x06);
  2799  0238  3006               	movlw	6
  2800  0239  2A3A               	ljmp	_lcdcmd
  2801  023A                     __end_of_lcd_init:	
  2802  023A                     __ptext731:	
  2803 ;; =============== function _lcddata ends ============
  2804                           
  2805                           
  2806 ;; *************** function _lcdcmd *****************
  2807 ;; Defined at:
  2808 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  a               1    wreg     unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  a               1    6[COMMON] unsigned char 
  2813 ;;  z               1    5[COMMON] unsigned char 
  2814 ;;  y               1    4[COMMON] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;		None               void
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 60/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       0       0       0       0
  2825 ;;      Locals:         3       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0
  2827 ;;      Totals:         3       0       0       0       0
  2828 ;;Total ram usage:        3 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    2
  2831 ;; This function calls:
  2832 ;;		_lcdport
  2833 ;;		_enable
  2834 ;; This function is called by:
  2835 ;;		_lcdclear
  2836 ;;		_lcd_init
  2837 ;;		_DisplayAmnt
  2838 ;;		_DisplaySugar
  2839 ;;		_DisplayRise
  2840 ;;		_DisplayKerosene
  2841 ;;		_startup
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845  023A                     _lcdcmd:	
  2846                           
  2847                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+pclath+cstack]
  2848                           ;lcdcmd@a stored from wreg
  2849  023A  00F6               	movwf	lcdcmd@a
  2850                           
  2851                           ;lcd.c: 40: unsigned char y,z;
  2852                           ;lcd.c: 41: z=a>>4&0x0F;
  2853  023B  0E76               	swapf	lcdcmd@a,w
  2854  023C  390F               	andlw	15
  2855  023D  00F5               	movwf	lcdcmd@z
  2856  023E  300F               	movlw	15
  2857  023F  05F5               	andwf	lcdcmd@z,f
  2858                           
  2859                           ;lcd.c: 42: y=a&0x0F;
  2860  0240  0876               	movf	lcdcmd@a,w
  2861  0241  00F4               	movwf	lcdcmd@y
  2862  0242  300F               	movlw	15
  2863  0243  05F4               	andwf	lcdcmd@y,f
  2864                           
  2865                           ;lcd.c: 44: lcdport(z);
  2866  0244  0875               	movf	lcdcmd@z,w
  2867  0245  2185  120A  118A   	fcall	_lcdport
  2868                           
  2869                           ;lcd.c: 45: enable();
  2870  0248  219F  120A  118A   	fcall	_enable
  2871                           
  2872                           ;lcd.c: 46: lcdport(y);
  2873  024B  0874               	movf	lcdcmd@y,w
  2874  024C  2185  120A  118A   	fcall	_lcdport
  2875                           
  2876                           ;lcd.c: 47: enable();
  2877  024F  299F               	ljmp	l2395
  2878  0250                     __end_of_lcdcmd:	
  2879  0250                     __ptext726:	
  2880 ;; =============== function _DisplayAmnt ends ============
  2881                           
  2882                           
  2883 ;; *************** function _lcdstring *****************
  2884 ;; Defined at:
  2885 ;;		line 90 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  a               2    7[COMMON] PTR const unsigned char 
  2888 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
  2889 ;;		 -> STR_16(21), STR_15(21), STR_14(21), STR_13(21), 
  2890 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
  2891 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
  2892 ;;		 -> STR_4(18), STR_3(18), STR_2(18), STR_1(18), 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;		None               void
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 60/0
  2901 ;;		On exit  : 60/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         2       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0
  2907 ;;      Totals:         2       0       0       0       0
  2908 ;;Total ram usage:        2 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    3
  2911 ;; This function calls:
  2912 ;;		_lcddata
  2913 ;; This function is called by:
  2914 ;;		_startup
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918  0250                     _lcdstring:	
  2919  0250                     l2497:	
  2920                           ;lcd.c: 91: while(*a)
  2921                           
  2922                           ; Regs used in _lcdstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2923                           
  2924  0250  0878               	movf	lcdstring@a+1,w
  2925  0251  00FF               	movwf	127
  2926  0252  0877               	movf	lcdstring@a,w
  2927  0253  0084               	movwf	4
  2928  0254  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2929  0259  3800               	iorlw	0
  2930  025A  1903               	btfsc	3,2
  2931  025B  0008               	return
  2932                           
  2933                           ;lcd.c: 92: {
  2934                           ;lcd.c: 93: lcddata(*a++);
  2935  025C  0878               	movf	lcdstring@a+1,w
  2936  025D  00FF               	movwf	127
  2937  025E  0877               	movf	lcdstring@a,w
  2938  025F  0084               	movwf	4
  2939  0260  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2940  0265  2127  120A  118A   	fcall	_lcddata
  2941  0268  0AF7               	incf	lcdstring@a,f
  2942  0269  1903               	skipnz
  2943  026A  0AF8               	incf	lcdstring@a+1,f
  2944  026B  2A50               	goto	l2497
  2945  026C                     __end_of_lcdstring:	
  2946  026C                     __ptext740:	
  2947 ;; =============== function ___lbmod ends ============
  2948                           
  2949                           
  2950 ;; *************** function ___lbdiv *****************
  2951 ;; Defined at:
  2952 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbdiv.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  dividend        1    wreg     unsigned char 
  2955 ;;  divisor         1    2[COMMON] unsigned char 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  dividend        1    3[COMMON] unsigned char 
  2958 ;;  quotient        1    5[COMMON] unsigned char 
  2959 ;;  counter         1    4[COMMON] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      unsigned char 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 60/0
  2966 ;;		On exit  : 60/0
  2967 ;;		Unchanged: FFF9F/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969 ;;      Params:         1       0       0       0       0
  2970 ;;      Locals:         3       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0
  2972 ;;      Totals:         4       0       0       0       0
  2973 ;;Total ram usage:        4 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_DisplaySugar
  2980 ;;		_DisplayRise
  2981 ;;		_DisplayKerosene
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984  026C                     ___lbdiv:	
  2985                           
  2986                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  2987                           ;___lbdiv@dividend stored from wreg
  2988  026C  00F3               	movwf	___lbdiv@dividend
  2989  026D  01F5               	clrf	___lbdiv@quotient
  2990  026E  0872               	movf	___lbdiv@divisor,w
  2991  026F  1903               	btfsc	3,2
  2992  0270  2A85               	goto	l2293
  2993  0271  01F4               	clrf	___lbdiv@counter
  2994  0272                     l2279:	
  2995  0272  0AF4               	incf	___lbdiv@counter,f
  2996  0273  1BF2               	btfsc	___lbdiv@divisor,7
  2997  0274  2A78               	goto	l1123
  2998  0275  1003               	clrc
  2999  0276  0DF2               	rlf	___lbdiv@divisor,f
  3000  0277  2A72               	goto	l2279
  3001  0278                     l1123:	
  3002  0278  1003               	clrc
  3003  0279  0DF5               	rlf	___lbdiv@quotient,f
  3004  027A  0872               	movf	___lbdiv@divisor,w
  3005  027B  0273               	subwf	___lbdiv@dividend,w
  3006  027C  1C03               	skipc
  3007  027D  2A82               	goto	L10
  3008  027E  0872               	movf	___lbdiv@divisor,w
  3009  027F  02F3               	subwf	___lbdiv@dividend,f
  3010  0280  1475               	bsf	___lbdiv@quotient,0
  3011  0281  1003               	clrc
  3012  0282                     L10:	
  3013  0282  0CF2               	rrf	___lbdiv@divisor,f
  3014  0283  0BF4               	decfsz	___lbdiv@counter,f
  3015  0284  2A78               	goto	l1123
  3016  0285                     l2293:	
  3017  0285  0875               	movf	___lbdiv@quotient,w
  3018  0286  0008               	return
  3019  0287                     __end_of___lbdiv:	
  3020  0287                     __ptext739:	
  3021 ;; =============== function ___awdiv ends ============
  3022                           
  3023                           
  3024 ;; *************** function ___lbmod *****************
  3025 ;; Defined at:
  3026 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbmod.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  dividend        1    wreg     unsigned char 
  3029 ;;  divisor         1    2[COMMON] unsigned char 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  dividend        1    4[COMMON] unsigned char 
  3032 ;;  rem             1    6[COMMON] unsigned char 
  3033 ;;  counter         1    5[COMMON] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      unsigned char 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 60/0
  3040 ;;		On exit  : 60/0
  3041 ;;		Unchanged: FFF9F/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         1       0       0       0       0
  3044 ;;      Locals:         3       0       0       0       0
  3045 ;;      Temps:          1       0       0       0       0
  3046 ;;      Totals:         5       0       0       0       0
  3047 ;;Total ram usage:        5 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_DisplaySugar
  3054 ;;		_DisplayRise
  3055 ;;		_DisplayKerosene
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058  0287                     ___lbmod:	
  3059                           
  3060                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3061                           ;___lbmod@dividend stored from wreg
  3062  0287  00F4               	movwf	___lbmod@dividend
  3063  0288  3008               	movlw	8
  3064  0289  00F5               	movwf	___lbmod@counter
  3065  028A  01F6               	clrf	___lbmod@rem
  3066  028B                     l2301:	
  3067  028B  0874               	movf	___lbmod@dividend,w
  3068  028C  00F3               	movwf	??___lbmod
  3069  028D  3007               	movlw	7
  3070  028E  1003               	clrc
  3071  028F                     L9:	
  3072  028F  0CF3               	rrf	??___lbmod,f
  3073  0290  3EFF               	addlw	-1
  3074  0291  1003               	clrc
  3075  0292  1D03               	skipz
  3076  0293  2A8F               	goto	L9
  3077  0294  0D76               	rlf	___lbmod@rem,w
  3078  0295  0473               	iorwf	??___lbmod,w
  3079  0296  00F6               	movwf	___lbmod@rem
  3080  0297  1003               	clrc
  3081  0298  0DF4               	rlf	___lbmod@dividend,f
  3082  0299  0872               	movf	___lbmod@divisor,w
  3083  029A  0276               	subwf	___lbmod@rem,w
  3084  029B  1C03               	skipc
  3085  029C  2A9F               	goto	l2309
  3086  029D  0872               	movf	___lbmod@divisor,w
  3087  029E  02F6               	subwf	___lbmod@rem,f
  3088  029F                     l2309:	
  3089  029F  0BF5               	decfsz	___lbmod@counter,f
  3090  02A0  2A8B               	goto	l2301
  3091  02A1  0876               	movf	___lbmod@rem,w
  3092  02A2  0008               	return
  3093  02A3                     __end_of___lbmod:	
  3094  02A3                     PL2:	
  3095  02A3  3E12               	addlw	low (_digit| (0+32768))
  3096  02A4  0084               	movwf	4
  3097  02A5  3087               	movlw	high (_digit| (0+32768))
  3098  02A6  1803               	skipnc
  3099  02A7  3E01               	addlw	1
  3100  02A8  00FF               	movwf	127
  3101  02A9  0008               	return
  3102  02AA                     PL3:	
  3103  02AA  0863               	movf	DisplayAmnt@Amnt+1,w
  3104  02AB  00F5               	movwf	?___awmod+3
  3105  02AC  0862               	movf	DisplayAmnt@Amnt,w
  3106  02AD  00F4               	movwf	?___awmod+2
  3107  02AE  30E8               	movlw	232
  3108  02AF  00F2               	movwf	?___awmod
  3109  02B0  3003               	movlw	3
  3110  02B1  00F3               	movwf	?___awmod+1
  3111  02B2  0008               	return
  3112  02B3                     PL4:	
  3113  02B3  0873               	movf	?___awmod+1,w
  3114  02B4  00F5               	movwf	?___awmod+3
  3115  02B5  0872               	movf	?___awmod,w
  3116  02B6  00F4               	movwf	?___awmod+2
  3117  02B7  3064               	movlw	100
  3118  02B8  00F2               	movwf	?___awmod
  3119  02B9  01F3               	clrf	?___awmod+1
  3120  02BA  0008               	return
  3121                           
  3122                           	psect	text729
  3123  05C8                     __ptext729:	
  3124 ;; =============== function _lcdclear ends ============
  3125                           
  3126                           
  3127 ;; *************** function _RFID_read *****************
  3128 ;; Defined at:
  3129 ;;		line 45 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  i               2    5[COMMON] int 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         2       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0
  3146 ;;      Totals:         2       0       0       0       0
  3147 ;;Total ram usage:        2 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    2
  3150 ;; This function calls:
  3151 ;;		_softreceive
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156  05C8                     _RFID_read:	
  3157                           
  3158                           ;Main.c: 46: if(!rfid_flag)
  3159                           
  3160                           ; Regs used in _RFID_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3161  05C8  1879               	btfsc	_rfid_flag/(0+8),_rfid_flag& (0+7)
  3162  05C9  0008               	return
  3163                           
  3164                           ;Main.c: 47: {
  3165                           ;Main.c: 48: for(int i=0;i<12;i++)
  3166  05CA  01F5               	clrf	RFID_read@i
  3167  05CB  01F6               	clrf	RFID_read@i+1
  3168  05CC                     l2473:	
  3169                           
  3170                           ;Main.c: 49: {card_store[i]=softreceive();}
  3171  05CC  0875               	movf	RFID_read@i,w
  3172  05CD  3E31               	addlw	_card_store& (0+255)
  3173  05CE  0084               	movwf	4
  3174  05CF  25E4  120A  118A   	fcall	_softreceive
  3175  05D2  1383               	bcf	3,7	;select IRP bank0
  3176  05D3  0080               	movwf	0
  3177  05D4  0AF5               	incf	RFID_read@i,f
  3178  05D5  1903               	skipnz
  3179  05D6  0AF6               	incf	RFID_read@i+1,f
  3180  05D7  0876               	movf	RFID_read@i+1,w
  3181  05D8  3A80               	xorlw	128
  3182  05D9  00FF               	movwf	127
  3183  05DA  3080               	movlw	128
  3184  05DB  027F               	subwf	127,w
  3185  05DC  1D03               	skipz
  3186  05DD  2DE0               	goto	u755
  3187  05DE  300C               	movlw	12
  3188  05DF  0275               	subwf	RFID_read@i,w
  3189  05E0                     u755:	
  3190  05E0  1C03               	skipc
  3191  05E1  2DCC               	goto	l2473
  3192                           
  3193                           ;Main.c: 50: rfid_flag=1;
  3194  05E2  1479               	bsf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  3195  05E3  0008               	return
  3196  05E4                     __end_of_RFID_read:	
  3197  05E4                     __ptext734:	
  3198 ;; =============== function _ReadAmnt ends ============
  3199                           
  3200                           
  3201 ;; *************** function _softreceive *****************
  3202 ;; Defined at:
  3203 ;;		line 21 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  mask            1    4[COMMON] unsigned char 
  3208 ;;  Data            1    3[COMMON] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      unsigned char 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       0       0       0       0
  3219 ;;      Locals:         2       0       0       0       0
  3220 ;;      Temps:          1       0       0       0       0
  3221 ;;      Totals:         3       0       0       0       0
  3222 ;;Total ram usage:        3 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    1
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_RFID_read
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231  05E4                     _softreceive:	
  3232                           
  3233                           ;softuart.c: 22: char mask;
  3234                           ;softuart.c: 23: char Data;
  3235                           ;softuart.c: 24: Data=0;
  3236                           
  3237                           ; Regs used in _softreceive: [wreg+status,2+status,0]
  3238  05E4  01F3               	clrf	softreceive@Data
  3239  05E5                     l972:	
  3240                           ;softuart.c: 25: while(RD0);
  3241                           
  3242  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3243  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3244  05E7  1808               	btfsc	8,0
  3245  05E8  2DE5               	goto	l972
  3246                           
  3247                           ;softuart.c: 26: _delay((unsigned long)(((((1000000/9600)-2)/2))*(20000000/4000000.0)));
  3248  05E9  3054               	movlw	84
  3249  05EA  00F2               	movwf	??_softreceive
  3250  05EB                     u1007:	
  3251  05EB  0BF2               	decfsz	??_softreceive,f
  3252  05EC  2DEB               	goto	u1007
  3253  05ED  2DEE               	nop2	;nop
  3254                           
  3255                           ;softuart.c: 27: for(mask=0x01;mask!=0;mask=mask<<1)
  3256  05EE  01F4               	clrf	softreceive@mask
  3257  05EF  0AF4               	incf	softreceive@mask,f
  3258  05F0                     l2415:	
  3259                           
  3260                           ;softuart.c: 28: {
  3261                           ;softuart.c: 29: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  3262  05F0  30A9               	movlw	169
  3263  05F1  00F2               	movwf	??_softreceive
  3264  05F2                     u1017:	
  3265  05F2  0BF2               	decfsz	??_softreceive,f
  3266  05F3  2DF2               	goto	u1017
  3267  05F4  2DF5               	nop2	;nop
  3268                           
  3269                           ;softuart.c: 30: if(RD0)Data=Data|mask;
  3270  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3271  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3272  05F7  0874               	movf	softreceive@mask,w
  3273  05F8  1808               	btfsc	8,0
  3274  05F9  04F3               	iorwf	softreceive@Data,f
  3275  05FA  1003               	clrc
  3276  05FB  0DF4               	rlf	softreceive@mask,f
  3277  05FC  08F4               	movf	softreceive@mask,f
  3278  05FD  1D03               	skipz
  3279  05FE  2DF0               	goto	l2415
  3280                           
  3281                           ;softuart.c: 31: }
  3282                           ;softuart.c: 32: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  3283  05FF  30A9               	movlw	169
  3284  0600  00F2               	movwf	??_softreceive
  3285  0601                     u1027:	
  3286  0601  0BF2               	decfsz	??_softreceive,f
  3287  0602  2E01               	goto	u1027
  3288  0603  2E04               	nop2	;nop
  3289                           
  3290                           ;softuart.c: 33: return Data;
  3291  0604  0873               	movf	softreceive@Data,w
  3292  0605  0008               	return
  3293  0606                     __end_of_softreceive:	
  3294                           
  3295                           	psect	text732
  3296  04A6                     __ptext732:	
  3297 ;; =============== function _lcdcmd ends ============
  3298                           
  3299                           
  3300 ;; *************** function _paramter *****************
  3301 ;; Defined at:
  3302 ;;		line 123 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 60/0
  3313 ;;		On exit  : 60/40
  3314 ;;		Unchanged: FFE00/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		_eeprom_read
  3325 ;;		___wmul
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330  04A6                     _paramter:	
  3331                           
  3332                           ;Main.c: 124: c1=(eeprom_read(0)*100)+eeprom_read(1);
  3333                           
  3334                           ; Regs used in _paramter: [wreg+status,2+status,0+pclath+cstack]
  3335  04A6  3000               	movlw	0
  3336  04A7  2536  120A  118A   	fcall	_eeprom_read
  3337  04AA  256A  120A  118A   	fcall	PL5	;call to abstracted procedure
  3338  04AD  254E  120A  118A   	fcall	___wmul
  3339  04B0  3001               	movlw	1
  3340  04B1  2536  120A  118A   	fcall	_eeprom_read
  3341                           
  3342                           ;Main.c: 125: c2=(eeprom_read(2)*100)+eeprom_read(3);
  3343  04B4  3002               	movlw	2
  3344  04B5  2536  120A  118A   	fcall	_eeprom_read
  3345  04B8  256A  120A  118A   	fcall	PL5	;call to abstracted procedure
  3346  04BB  254E  120A  118A   	fcall	___wmul
  3347  04BE  3003               	movlw	3
  3348  04BF  2D36               	ljmp	_eeprom_read
  3349  04C0                     __end_of_paramter:	
  3350  04C0                     __ptext733:	
  3351 ;; =============== function _paramter ends ============
  3352                           
  3353                           
  3354 ;; *************** function _ReadAmnt *****************
  3355 ;; Defined at:
  3356 ;;		line 55 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, pclath, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 160/0
  3367 ;;		On exit  : 60/0
  3368 ;;		Unchanged: FFE00/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3370 ;;      Params:         0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    2
  3377 ;; This function calls:
  3378 ;;		_eeprom_read
  3379 ;;		___wmul
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384  04C0                     _ReadAmnt:	
  3385                           
  3386                           ;Main.c: 56: User1amt=(eeprom_read(0)*100)+eeprom_read(1);
  3387                           
  3388                           ; Regs used in _ReadAmnt: [wreg+status,2+status,0+pclath+cstack]
  3389  04C0  3000               	movlw	0
  3390  04C1  2536  120A  118A   	fcall	_eeprom_read
  3391  04C4  256A  120A  118A   	fcall	PL5	;call to abstracted procedure
  3392  04C7  254E  120A  118A   	fcall	___wmul
  3393  04CA  0876               	movf	?___wmul+1,w
  3394  04CB  00A3               	movwf	_User1amt+1
  3395  04CC  0875               	movf	?___wmul,w
  3396  04CD  00A2               	movwf	_User1amt
  3397  04CE  3001               	movlw	1
  3398  04CF  2536  120A  118A   	fcall	_eeprom_read
  3399  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3400  04D3  07A2               	addwf	_User1amt,f
  3401  04D4  1803               	skipnc
  3402  04D5  0AA3               	incf	_User1amt+1,f
  3403                           
  3404                           ;Main.c: 57: User2amt=(eeprom_read(8)*100)+eeprom_read(15);
  3405  04D6  3008               	movlw	8
  3406  04D7  2536  120A  118A   	fcall	_eeprom_read
  3407  04DA  256A  120A  118A   	fcall	PL5	;call to abstracted procedure
  3408  04DD  254E  120A  118A   	fcall	___wmul
  3409  04E0  0876               	movf	?___wmul+1,w
  3410  04E1  00A5               	movwf	_User2amt+1
  3411  04E2  0875               	movf	?___wmul,w
  3412  04E3  00A4               	movwf	_User2amt
  3413  04E4  300F               	movlw	15
  3414  04E5  2536  120A  118A   	fcall	_eeprom_read
  3415  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3416  04E9  07A4               	addwf	_User2amt,f
  3417  04EA  1803               	skipnc
  3418  04EB  0AA5               	incf	_User2amt+1,f
  3419                           
  3420                           ;Main.c: 58: User3amt=(eeprom_read(16)*100)+eeprom_read(23);
  3421  04EC  3010               	movlw	16
  3422  04ED  2536  120A  118A   	fcall	_eeprom_read
  3423  04F0  256A  120A  118A   	fcall	PL5	;call to abstracted procedure
  3424  04F3  254E  120A  118A   	fcall	___wmul
  3425  04F6  0876               	movf	?___wmul+1,w
  3426  04F7  00A7               	movwf	_User3amt+1
  3427  04F8  0875               	movf	?___wmul,w
  3428  04F9  00A6               	movwf	_User3amt
  3429  04FA  3017               	movlw	23
  3430  04FB  2536  120A  118A   	fcall	_eeprom_read
  3431  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3432  04FF  07A6               	addwf	_User3amt,f
  3433  0500  1803               	skipnc
  3434  0501  0AA7               	incf	_User3amt+1,f
  3435                           
  3436                           ;Main.c: 59: User1Rise = eeprom_read(2);
  3437  0502  3002               	movlw	2
  3438  0503  2536  120A  118A   	fcall	_eeprom_read
  3439  0506  00FA               	movwf	_User1Rise
  3440                           
  3441                           ;Main.c: 60: User2Rise = eeprom_read(10);
  3442  0507  300A               	movlw	10
  3443  0508  2536  120A  118A   	fcall	_eeprom_read
  3444  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3445  050C  00AB               	movwf	_User2Rise
  3446                           
  3447                           ;Main.c: 61: User3Rise = eeprom_read(18);
  3448  050D  3012               	movlw	18
  3449  050E  2536  120A  118A   	fcall	_eeprom_read
  3450  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0512  00AE               	movwf	_User3Rise
  3452                           
  3453                           ;Main.c: 62: User1Kerosene = eeprom_read(4);
  3454  0513  3004               	movlw	4
  3455  0514  2536  120A  118A   	fcall	_eeprom_read
  3456  0517  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0518  00A8               	movwf	_User1Kerosene
  3458                           
  3459                           ;Main.c: 63: User2Kerosene = eeprom_read(12);
  3460  0519  300C               	movlw	12
  3461  051A  2536  120A  118A   	fcall	_eeprom_read
  3462  051D  1303               	bcf	3,6	;RP1=0, select bank0
  3463  051E  00AA               	movwf	_User2Kerosene
  3464                           
  3465                           ;Main.c: 64: User3Kerosene = eeprom_read(20);
  3466  051F  3014               	movlw	20
  3467  0520  2536  120A  118A   	fcall	_eeprom_read
  3468  0523  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0524  00AD               	movwf	_User3Kerosene
  3470                           
  3471                           ;Main.c: 65: User1Sugar = eeprom_read(3);
  3472  0525  3003               	movlw	3
  3473  0526  2536  120A  118A   	fcall	_eeprom_read
  3474  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3475  052A  00A9               	movwf	_User1Sugar
  3476                           
  3477                           ;Main.c: 66: User2Sugar = eeprom_read(11);
  3478  052B  300B               	movlw	11
  3479  052C  2536  120A  118A   	fcall	_eeprom_read
  3480  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0530  00AC               	movwf	_User2Sugar
  3482                           
  3483                           ;Main.c: 67: User3Sugar = eeprom_read(19);
  3484  0531  3013               	movlw	19
  3485  0532  2536               	fcall	_eeprom_read
  3486  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0534  00AF               	movwf	_User3Sugar
  3488  0535  0008               	return
  3489  0536                     __end_of_ReadAmnt:	
  3490  0536                     __ptext744:	
  3491 ;; =============== function _uart_init ends ============
  3492                           
  3493                           
  3494 ;; *************** function _eeprom_read *****************
  3495 ;; Defined at:
  3496 ;;		line 8 in file "eeread.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  addr            1    wreg     unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  addr            1    4[COMMON] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      unsigned char 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 20/0
  3507 ;;		On exit  : 60/40
  3508 ;;		Unchanged: FFE00/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         1       0       0       0       0
  3512 ;;      Temps:          2       0       0       0       0
  3513 ;;      Totals:         3       0       0       0       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_ReadAmnt
  3521 ;;		_paramter
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524  0536                     _eeprom_read:	
  3525                           
  3526                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3527                           ;eeprom_read@addr stored from wreg
  3528  0536  00F4               	movwf	eeprom_read@addr
  3529  0537                     l1074:	
  3530  0537  0064               	clrwdt	;#
  3531  0538  1683               	bsf	3,5	;RP0=1, select bank3
  3532  0539  1703               	bsf	3,6	;RP1=1, select bank3
  3533  053A  188C               	btfsc	12,1
  3534  053B  2D37               	goto	l1074
  3535  053C  0874               	movf	eeprom_read@addr,w
  3536  053D  1283               	bcf	3,5	;RP0=0, select bank2
  3537  053E  008D               	movwf	13	;volatile
  3538  053F  303F               	movlw	63
  3539  0540  1683               	bsf	3,5	;RP0=1, select bank3
  3540  0541  058C               	andwf	12,f	;volatile
  3541  0542  140C               	bsf	12,0
  3542  0543  1003               	clrc
  3543  0544  180C               	btfsc	12,0
  3544  0545  1403               	setc
  3545  0546  3000               	movlw	0
  3546  0547  1803               	skipnc
  3547  0548  3001               	movlw	1
  3548  0549  00F2               	movwf	??_eeprom_read
  3549  054A  01F3               	clrf	??_eeprom_read+1
  3550  054B  1283               	bcf	3,5	;RP0=0, select bank2
  3551  054C  080C               	movf	12,w	;volatile
  3552  054D  0008               	return
  3553  054E                     __end_of_eeprom_read:	
  3554  054E                     __ptext741:	
  3555 ;; =============== function ___lbdiv ends ============
  3556                           
  3557                           
  3558 ;; *************** function ___wmul *****************
  3559 ;; Defined at:
  3560 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  multiplier      2    5[COMMON] unsigned int 
  3563 ;;  multiplicand    2    7[COMMON] unsigned int 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  product         2    0[BANK0 ] unsigned int 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2    5[COMMON] unsigned int 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 60/40
  3572 ;;		On exit  : 60/0
  3573 ;;		Unchanged: FFF9F/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         4       0       0       0       0
  3576 ;;      Locals:         0       2       0       0       0
  3577 ;;      Temps:          0       0       0       0       0
  3578 ;;      Totals:         4       2       0       0       0
  3579 ;;Total ram usage:        6 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_ReadAmnt
  3586 ;;		_paramter
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589  054E                     ___wmul:	
  3590                           
  3591                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3592  054E  1303               	bcf	3,6	;RP1=0, select bank0
  3593  054F  01DA               	clrf	___wmul@product
  3594  0550  01DB               	clrf	___wmul@product+1
  3595  0551                     l2709:	
  3596  0551  1C75               	btfss	___wmul@multiplier,0
  3597  0552  2D5A               	goto	l2713
  3598  0553  0877               	movf	___wmul@multiplicand,w
  3599  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0555  07DA               	addwf	___wmul@product,f
  3601  0556  1803               	skipnc
  3602  0557  0ADB               	incf	___wmul@product+1,f
  3603  0558  0878               	movf	___wmul@multiplicand+1,w
  3604  0559  07DB               	addwf	___wmul@product+1,f
  3605  055A                     l2713:	
  3606  055A  1003               	clrc
  3607  055B  0DF7               	rlf	___wmul@multiplicand,f
  3608  055C  0DF8               	rlf	___wmul@multiplicand+1,f
  3609  055D  1003               	clrc
  3610  055E  0CF6               	rrf	___wmul@multiplier+1,f
  3611  055F  0CF5               	rrf	___wmul@multiplier,f
  3612  0560  0876               	movf	___wmul@multiplier+1,w
  3613  0561  0475               	iorwf	___wmul@multiplier,w
  3614  0562  1D03               	skipz
  3615  0563  2D51               	goto	l2709
  3616  0564  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0565  085B               	movf	___wmul@product+1,w
  3618  0566  00F6               	movwf	?___wmul+1
  3619  0567  085A               	movf	___wmul@product,w
  3620  0568  00F5               	movwf	?___wmul
  3621  0569  0008               	return
  3622  056A                     __end_of___wmul:	
  3623  056A                     PL5:	
  3624  056A  00F5               	movwf	?___wmul
  3625  056B  01F6               	clrf	?___wmul+1
  3626  056C  3064               	movlw	100
  3627  056D  00F7               	movwf	?___wmul+2
  3628  056E  01F8               	clrf	?___wmul+3
  3629  056F  0008               	return
  3630                           
  3631                           	psect	text735
  3632  0634                     __ptext735:	
  3633 ;; =============== function _softreceive ends ============
  3634                           
  3635                           
  3636 ;; *************** function _SoftWareUart_Init *****************
  3637 ;; Defined at:
  3638 ;;		line 10 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		wreg
  3647 ;; Tracked objects:
  3648 ;;		On entry : 60/40
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3652 ;;      Params:         0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0
  3654 ;;      Temps:          1       0       0       0       0
  3655 ;;      Totals:         1       0       0       0       0
  3656 ;;Total ram usage:        1 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    1
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665  0634                     _SoftWareUart_Init:	
  3666                           
  3667                           ;softuart.c: 11: RD1=1;
  3668                           
  3669                           ; Regs used in _SoftWareUart_Init: [wreg]
  3670  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3671  0635  1488               	bsf	8,1
  3672                           
  3673                           ;softuart.c: 12: RD0=1;
  3674  0636  1408               	bsf	8,0
  3675                           
  3676                           ;softuart.c: 13: TRISD1=0;
  3677  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3678  0638  1088               	bcf	8,1
  3679                           
  3680                           ;softuart.c: 14: TRISD0=1;
  3681  0639  1408               	bsf	8,0
  3682                           
  3683                           ;softuart.c: 15: RD1=1;
  3684  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3685  063B  1488               	bsf	8,1
  3686                           
  3687                           ;softuart.c: 16: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  3688  063C  30A9               	movlw	169
  3689  063D  00F2               	movwf	??_SoftWareUart_Init
  3690  063E                     u1037:	
  3691  063E  0BF2               	decfsz	??_SoftWareUart_Init,f
  3692  063F  2E3E               	goto	u1037
  3693  0640  2E41               	nop2	;nop
  3694  0641  0008               	return
  3695  0642                     __end_of_SoftWareUart_Init:	
  3696                           
  3697                           	psect	text742
  3698  0606                     __ptext742:	
  3699 ;; =============== function ___wmul ends ============
  3700                           
  3701                           
  3702 ;; *************** function _strcmp *****************
  3703 ;; Defined at:
  3704 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strcmp.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  s1              1    wreg     PTR const unsigned char 
  3707 ;;		 -> card_store(15), 
  3708 ;;  s2              1    2[COMMON] PTR const unsigned char 
  3709 ;;		 -> User3(13), User2(13), User1(13), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  s1              1    7[COMMON] PTR const unsigned char 
  3712 ;;		 -> card_store(15), 
  3713 ;;  r               1    6[COMMON] char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  2    2[COMMON] int 
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 100/0
  3721 ;;		Unchanged: FFEFF/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         2       0       0       0       0
  3724 ;;      Locals:         2       0       0       0       0
  3725 ;;      Temps:          2       0       0       0       0
  3726 ;;      Totals:         6       0       0       0       0
  3727 ;;Total ram usage:        6 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736  0606                     _strcmp:	
  3737                           
  3738                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  3739                           ;strcmp@s1 stored from wreg
  3740  0606  00F7               	movwf	strcmp@s1
  3741  0607  2E0E               	goto	l2249
  3742  0608                     l2251:	
  3743  0608  0877               	movf	strcmp@s1,w
  3744  0609  0AF7               	incf	strcmp@s1,f
  3745  060A  0084               	movwf	4
  3746  060B  0880               	movf	0,f
  3747  060C  1903               	btfsc	3,2
  3748  060D  2E1E               	goto	l2253
  3749  060E                     l2249:	
  3750  060E  0872               	movf	strcmp@s2,w
  3751  060F  0AF2               	incf	strcmp@s2,f
  3752  0610  0084               	movwf	4
  3753  0611  1383               	bcf	3,7	;select IRP bank0
  3754  0612  0800               	movf	0,w
  3755  0613  00F4               	movwf	??_strcmp
  3756  0614  0877               	movf	strcmp@s1,w
  3757  0615  0084               	movwf	4
  3758  0616  0800               	movf	0,w
  3759  0617  00F5               	movwf	??_strcmp+1
  3760  0618  0874               	movf	??_strcmp,w
  3761  0619  0275               	subwf	??_strcmp+1,w
  3762  061A  00F6               	movwf	strcmp@r
  3763  061B  08F6               	movf	strcmp@r,f
  3764  061C  1903               	btfsc	3,2
  3765  061D  2E08               	goto	l2251
  3766  061E                     l2253:	
  3767  061E  0876               	movf	strcmp@r,w
  3768  061F  00F2               	movwf	?_strcmp
  3769  0620  01F3               	clrf	?_strcmp+1
  3770  0621  1BF2               	btfsc	?_strcmp,7
  3771  0622  03F3               	decf	?_strcmp+1,f
  3772  0623  0008               	return
  3773  0624                     __end_of_strcmp:	
  3774                           
  3775                           	psect	text743
  3776  0624                     __ptext743:	
  3777 ;; =============== function _strcmp ends ============
  3778                           
  3779                           
  3780 ;; *************** function _uart_init *****************
  3781 ;; Defined at:
  3782 ;;		line 114 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg, status,2
  3791 ;; Tracked objects:
  3792 ;;		On entry : 17F/0
  3793 ;;		On exit  : 17F/0
  3794 ;;		Unchanged: FFE80/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3796 ;;      Params:         0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809  0624                     _uart_init:	
  3810                           
  3811                           ;Main.c: 115: PORTC=0xFF;
  3812                           
  3813                           ; Regs used in _uart_init: [wreg+status,2]
  3814  0624  30FF               	movlw	255
  3815  0625  0087               	movwf	7	;volatile
  3816                           
  3817                           ;Main.c: 116: TRISC=0x80;
  3818  0626  3080               	movlw	128
  3819  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3820  0628  0087               	movwf	7	;volatile
  3821                           
  3822                           ;Main.c: 117: TXSTA=0X24;
  3823  0629  3024               	movlw	36
  3824  062A  0098               	movwf	24	;volatile
  3825                           
  3826                           ;Main.c: 118: RCSTA=0X90;
  3827  062B  3090               	movlw	144
  3828  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3829  062D  0098               	movwf	24	;volatile
  3830                           
  3831                           ;Main.c: 119: SPBRG=129;
  3832  062E  3081               	movlw	129
  3833  062F  1683               	bsf	3,5	;RP0=1, select bank1
  3834  0630  0099               	movwf	25	;volatile
  3835                           
  3836                           ;Main.c: 120: RCREG=0;
  3837  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0632  019A               	clrf	26	;volatile
  3839  0633  0008               	return
  3840  0634                     __end_of_uart_init:	
  3841                           
  3842                           	psect	text746
  3843  064A                     __ptext746:	
  3844 ;; =============== function _lcdport ends ============
  3845                           
  3846                           
  3847 ;; *************** function _ISR *****************
  3848 ;; Defined at:
  3849 ;;		line 41 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;		None               void
  3856 ;; Registers used:
  3857 ;;		None
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: FFFFF/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3863 ;;      Params:         0       0       0       0       0
  3864 ;;      Locals:         0       0       0       0       0
  3865 ;;      Temps:          2       0       0       0       0
  3866 ;;      Totals:         2       0       0       0       0
  3867 ;;Total ram usage:        2 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		Interrupt level 1
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875  064A                     _ISR:	
  3876  064A  0871               	movf	??_ISR+1,w
  3877  064B  008A               	movwf	10
  3878  064C  0870               	movf	??_ISR,w
  3879  064D  0083               	movwf	3
  3880  064E  0EFE               	swapf	126,f
  3881  064F  0E7E               	swapf	126,w
  3882  0650  0009               	retfie
  3883  0651                     __end_of_ISR:	
  3884                           
  3885                           	psect	intentry
  3886  0004                     __pintentry:	
  3887                           ; Regs used in _ISR: []
  3888                           
  3889  0004                     interrupt_function:	
  3890  007E                     saved_w	set	btemp
  3891  0004  00FE               	movwf	btemp
  3892  0005  0803               	movf	3,w
  3893  0006  00F0               	movwf	??_ISR
  3894  0007  080A               	movf	10,w
  3895  0008  00F1               	movwf	??_ISR+1
  3896  0009  120A  118A  2E4A   	ljmp	_ISR
  3897                           
  3898                           	psect	text747
  3899  0000                     __ptext747:	
  3900 ;; =============== function _ISR ends ============
  3901                           
  3902  007E                     btemp	set	126	;btemp
  3903  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Thu Mar 03 21:15:17 2016

                         pc 0002                 _softreceive 05E4                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 005F                          fsr 0004  
       ___wmul@multiplicand 0077                         l931 0000                         l940 019D  
                       l934 018C                         l935 018F                         l951 0000  
                       l936 0193                         l960 0000                         l937 0194  
                       l945 0000                         l938 0198                         l954 0000  
                       l939 0199                         l972 05E5                         l948 0000  
                       l969 0000                         l978 0000                         _RC0 0038  
                       _RD0 0040                         _RD1 0041                         _RD2 0042  
                       _RD3 0043                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _ISR 064A  
                       u755 05E0                         u685 010D                         u875 016A  
                       u947 02EF                         u957 01C9                         u967 01DA  
                       u977 01FD                         u987 020A                         u997 0217  
                       fsr0 0004                         indf 0000                ___awmod@sign 0077  
 __end_of_SoftWareUart_Init 0642                        ?_ISR 0070                        l1003 0000  
                      l1012 0000                        l1006 0000                        l1015 0000  
                      l1009 0000                        l1042 0000                        l1123 0278  
                      l1036 0000                        l1132 0000                        l1126 0000  
                      l1311 0000                        l1039 0000                        l1074 0537  
                      l1243 0000                        l1076 0000                        l1084 0000  
                      l2301 028B                        l2311 0000                        l2303 0000  
                      l1096 0000                        l2305 0000                        l2401 0000  
                      l2243 0000                        l2251 0608                        l2403 0000  
                      l2229 0000                        l2245 0000                        l2253 061E  
                      l2309 029F                        l2405 0000                        l2247 0000  
                      l2423 0000                        l2415 05F0                        l2511 0000  
                      l2249 060E                        l2273 0000                        l2361 0000  
                      l2417 0000                        l2409 0000                        l2441 0000  
                      l2433 0000                        l2513 0000                        l2521 0000  
                      l2291 0000                        l2283 0000                        l2275 0000  
                      l2371 00FB                        l2443 0000                        l2435 0000  
                      l2451 0000                        l2515 0000                        l2523 0000  
                      l2277 0000                        l2293 0285                        l2365 0000  
                      l2445 0000                        l2437 0000                        l2461 0000  
                      l2453 0000                        l2509 0000                        l2517 0000  
                      l2525 0000                        l2287 0000                        l2279 0272  
                      l2391 0122                        l2367 00F4                        l2359 0000  
                      l2439 0000                        l2463 0000                        l2455 0000  
                      l2447 0000                        l2519 0000                        l2713 055A  
                      l2297 0000                        l2385 0000                        l2457 0000  
                      l2449 0000                        l2473 05CC                        l2465 0000  
                      l2481 0000                        l2801 0000                        l2715 0000  
                      l2707 0000                        l2299 0000                        l2731 014A  
                      l2723 0000                        l2379 0107                        l2387 011A  
                      l2395 019F                        l2459 0000                        l2475 0000  
                      l2483 0000                        l2811 0000                        l2803 0000  
                      l2717 0000                        l2709 0551                        l2725 0000  
                      l2389 0000                        l2397 0000                        l2477 0000  
                      l2485 0000                        l2901 0000                        l2813 0000  
                      l2805 0000                        l2735 0000                        l2399 0000  
                      l2479 0000                        l2487 0000                        l2495 0000  
                      l2903 0000                        l2831 030C                        l2823 0000  
                      l2815 0000                        l2807 0000                        l2761 0000  
                      l2753 0000                        l2737 0153                        l2729 0000  
                      l2489 0000                        l2497 0250                        l2905 0000  
                      l2841 032E                        l2825 02F6                        l2817 0000  
                      l2809 0000                        l2763 0180                        l2747 0161  
                      l2739 0000                        l2771 0000                        l2851 0000  
                      l2843 0000                        l2835 031A                        l2907 0497  
                      l2827 0000                        l2819 02E7                        l2757 0000  
                      l2749 0000                        l2773 0000                        l2781 0000  
                      l2861 0000                        l2853 0000                        l2845 0000  
                      l2759 0178                        l2767 0000                        l2775 0000  
                      l2791 0000                        l2783 0000                        l2871 0000  
                      l2863 0000                        l2855 0000                        l2847 0000  
                      l2839 0328                        l2769 0000                        l2777 0000  
                      l2793 0000                        l2785 0000                        l2881 0000  
                      l2873 0000                        l2865 0000                        l2857 0000  
                      l2849 0000                        l2779 0000                        l2795 0000  
                      l2787 0000                        l2891 0000                        l2883 0000  
                      l2875 0000                        l2867 0000                        l2859 0392  
                      l2797 0000                        l2789 0000                        l2893 0000  
                      l2885 0000                        l2877 03F6                        l2869 0000  
                      l2895 045A                        l2887 0000                        l2879 0000  
                      l2799 0000                        l2897 0000                        l2889 0000  
                      l2899 0000                        STR_1 0825                        STR_2 0801  
                      STR_3 0813                        STR_4 07EF                        STR_5 0771  
                      STR_6 0732                        STR_7 075C                        STR_8 07B0  
                      STR_9 0786                        u1007 05EB                        u1017 05F2  
                      u1027 0601                        u1037 063E                        u1047 01A4  
                      _User 0020                        _main 02BB                        btemp 007E  
                      start 000C                       ??_ISR 0070         __end_of_DisplayAmnt 00EA  
       __end_of_DisplayRise 0055          __size_of_RFID_read 001C                       ?_main 0070  
           __end_of___awdiv 0185             __end_of___lbdiv 0287                       _EEADR 010D  
                     STR_10 0732                       STR_11 075C                       STR_12 07B0  
                     STR_20 071D                       STR_13 079B                       STR_14 0732  
                     STR_15 075C                       STR_16 07B0                       STR_17 07DA  
                     STR_18 07C5                       STR_19 0747             __end_of___awmod 0127  
           __end_of___lbmod 02A3                       _ANSEL 0188             ___awdiv@divisor 005A  
                     i1l994 0000             ___awdiv@counter 005E                       _RCREG 001A  
                     _RCSTA 0018                       _SPBRG 0099                       _PORTC 0007  
                     _PORTD 0008                       _TRISC 0087                       _TRISD 0088  
                     _TXSTA 0098                       _User1 0040                       _User2 004D  
                     _User3 00A0             __end_of_lcddata 0140             __end_of_lcdport 019F  
                     _digit 0712              __pbitbssCOMMON 03C8                       pclath 000A  
                     status 0003             __end_of_startup 01F5                       wtemp0 007E  
           ___lbdiv@divisor 0072             ___lbdiv@counter 0074                __end_of_main 04A6  
          __end_of_ReadAmnt 0536                      ??_main 0067  __size_of_SoftWareUart_Init 000E  
      __end_of_DisplaySugar 0075                      _EEDATA 010C                      _EECON1 018C  
          ___awdiv@dividend 005C                      _ANSELH 0189           __end_of_RFID_read 05E4  
                    _TRISD0 0440                      _TRISD1 0441             _DisplayAmnt$973 0065  
      __size_of_eeprom_read 0018                 _DisplayAmnt 0075            __end_of_lcd_init 023A  
               _DisplayRise 0035            __end_of_lcdclear 0015                      ___wmul 054E  
                 ??___awdiv 0078                   ??___lbdiv 0073                   ??___awmod 0076  
                 ??___lbmod 0073                      _enable 019F                      _lcdcmd 023A  
          ___awdiv@quotient 0060             ___awmod@divisor 0072            __end_of_paramter 04C0  
           ___awmod@counter 0076             _DisplayKerosene 0015                   ??_lcddata 0074  
                    _strcmp 0606                      clrloop 0643                   ??_lcdport 0072  
                _User1Sugar 0029                  _User2Sugar 002C                  _User3Sugar 002F  
                    saved_w 007E                   ??_startup 005A            ___lbdiv@dividend 0073  
           ___lbmod@divisor 0072           DisplaySugar@Sugar 0077             ___lbmod@counter 0075  
           eeprom_read@addr 0074              __pcstackCOMMON 0070                __pidataBANK0 0000  
              __pidataBANK1 0000                ?_softreceive 0070            ___lbdiv@quotient 0075  
           softreceive@Data 0073             softreceive@mask 0074                  __pbssBANK0 0020  
                _card_store 0031          __size_of_lcdstring 001C                   ?_ReadAmnt 0070  
                __pmaintext 02BB     __end_of_DisplayKerosene 0035                     ?___wmul 0075  
                __pintentry 0004                     ?_enable 0070                     ?_lcdcmd 0070  
                   ?_strcmp 0072       __size_of_DisplaySugar 0020          __size_of_uart_init 0010  
                 ?_lcd_init 0070                   ?_lcdclear 0070                  ??_ReadAmnt 0079  
                 ?_paramter 0070                _DisplaySugar 0055                     ___awdiv 0140  
                   ___lbdiv 026C                     ___awmod 00EA                     ___lbmod 0287  
           __size_of___wmul 001C             __size_of_enable 000E             __size_of_lcdcmd 0016  
         __end_of_lcdstring 026C                     _lcddata 0127             __size_of_strcmp 001E  
              __size_of_ISR 0007                     _lcdport 0185            ___awmod@dividend 0074  
                   lcdcmd@a 0076                     lcdcmd@y 0074                     lcdcmd@z 0075  
                   _startup 01AD                  ??_lcd_init 0077                  ??_lcdclear 0077  
      end_of_initialization 05C4                  ??_paramter 0079           __end_of_uart_init 0634  
                 _RFID_read 05C8                ?_DisplayAmnt 0062                ?_DisplayRise 0077  
          ?_DisplayKerosene 0077             DisplayAmnt@Amnt 0062                __pstringtext 0700  
                   strcmp@r 0076        __size_of_softreceive 0022            ___lbmod@dividend 0074  
               ___lbmod@rem 0076               ??_eeprom_read 0072                  ?_RFID_read 0070  
           DisplayRise@Rise 0077              __end_of___wmul 056A              __end_of_enable 01AD  
            __end_of_lcdcmd 0250            _delayus_variable 0030              __end_of_strcmp 0624  
       start_initialization 0570                 __end_of_ISR 0651                  lcdstring@a 0077  
         __size_of_ReadAmnt 0076         DisplayRise@Location 0078                    ??___wmul 0079  
       __end_of_eeprom_read 054E                    ??_enable 0072                    ??_lcdcmd 0074  
               __pdataBANK0 0040                 __pdataBANK1 00A0                   _User1Rise 007A  
                 _User2Rise 002B                   _User3Rise 002E                    ??_strcmp 0074  
       DisplayAmnt@Location 0064                 __pbssCOMMON 007A               __pcstackBANK0 005A  
                RFID_read@i 0075           __size_of_lcd_init 0045           __size_of_lcdclear 0006  
               ??_RFID_read 0075           __size_of_paramter 001A                    ?___awdiv 005A  
                  ?___lbdiv 0072                    ?___awmod 0072                   __ptext721 01AD  
                 __ptext730 0127                   __ptext722 0015                   __ptext731 023A  
                 __ptext723 0035                    ?___lbmod 0072                   __ptext740 026C  
                 __ptext732 04A6                   __ptext724 0055                   __ptext741 054E  
                 __ptext733 04C0                   __ptext725 0075                   __ptext742 0606  
                 __ptext734 05E4                   __ptext726 0250                   __ptext743 0624  
                 __ptext735 0634                   __ptext727 01F5                   __ptext744 0536  
                 __ptext736 019F                   __ptext728 000F                   __ptext745 0185  
                 __ptext737 00EA                   __ptext729 05C8                   __ptext746 064A  
                 __ptext738 0140                   __ptext747 0000                   __ptext739 0287  
      __size_of_DisplayAmnt 0075        __size_of_DisplayRise 0020                    ?_lcddata 0070  
                  ?_lcdport 0070                   _lcdstring 0250                    ?_startup 0070  
         interrupt_function 0004                   _rfid_flag 03C8              ___wmul@product 005A  
               _eeprom_read 0536                   _uart_init 0624                 __stringbase 0712  
         ___wmul@multiplier 0075                  ?_lcdstring 0077               _User1Kerosene 0028  
                  _ReadAmnt 04C0               _User2Kerosene 002A               _User3Kerosene 002D  
             ??_softreceive 0072                  ?_uart_init 0070                    _User1amt 0022  
                  _User2amt 0024                    _User3amt 0026            __size_of___awdiv 0045  
          __size_of___lbdiv 001B            __size_of___awmod 003D            __size_of___lbmod 001C  
  __size_of_DisplayKerosene 0020            __size_of_lcddata 0019            __size_of_lcdport 001A  
                  _lcd_init 01F5                    _lcdclear 000F            __size_of_startup 0048  
             __size_of_main 01EB                    _paramter 04A6                    clear_ram 0642  
                  lcddata@a 0076                    lcddata@y 0074                    lcddata@z 0075  
                  lcdport@a 0072         __end_of_softreceive 0606                 ??_lcdstring 0079  
                  intlevel1 0000                   stringcode 070A               ?_DisplaySugar 0077  
               ??_uart_init 0072                    strcmp@s1 0077                    strcmp@s2 0072  
                  stringtab 0700           _SoftWareUart_Init 0634           ??_DisplayKerosene 0078  
      DisplaySugar@Location 0078          ?_SoftWareUart_Init 0070                ?_eeprom_read 0070  
   DisplayKerosene@Kerosene 0077     DisplayKerosene@Location 0078               ??_DisplayAmnt 0078  
       ??_SoftWareUart_Init 0072               ??_DisplayRise 0078              ??_DisplaySugar 0078  
