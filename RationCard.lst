

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Sat Mar 05 00:04:42 2016

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text1180,local,class=CODE,delta=2
    20                           	psect	text1182,local,class=CODE,delta=2
    21                           	psect	text1187,local,class=CODE,delta=2
    22                           	psect	text1191,local,class=CODE,delta=2
    23                           	psect	text1196,local,class=CODE,delta=2
    24                           	psect	text1206,local,class=CODE,delta=2
    25                           	psect	text1207,local,class=CODE,delta=2
    26                           	psect	text1208,local,class=CODE,delta=2
    27                           	psect	text1209,local,class=CODE,delta=2
    28                           	psect	text1215,local,class=CODE,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text1218,local,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  000A                     	;#
    34                           
    35                           	psect	config
    36  2007  2CE2               	dw	11490	;#
    37                           
    38                           	psect	eeprom_data
    39  0000  000A 0000 0032     	db	10,0,50,10,8,0,0,0	;#
      +       000A 0008 0000     
      +       0000 0000          
    40  0008  000A 0000 001E     	db	10,0,30,8,6,0,0,0	;#
      +       0008 0006 0000     
      +       0000 0000          
    41  0010  000A 0000 0014     	db	10,0,20,4,5,0,0,0	;#
      +       0004 0005 0000     
      +       0000 0000          
    42  0018  000A 0000 00FF     	db	10,0,255,200,200,0,0,0	;#
      +       00C8 00C8 0000     
      +       0000 0000          
    43                           
    44                           	psect	idataBANK1
    45  0CAE                     __pidataBANK1:	
    46                           
    47                           ;initializer for _User1
    48  0CAE  3431               	retlw	49
    49  0CAF  3443               	retlw	67
    50  0CB0  3430               	retlw	48
    51  0CB1  3430               	retlw	48
    52  0CB2  3438               	retlw	56
    53  0CB3  3432               	retlw	50
    54  0CB4  3443               	retlw	67
    55  0CB5  3445               	retlw	69
    56  0CB6  3436               	retlw	54
    57  0CB7  3439               	retlw	57
    58  0CB8  3433               	retlw	51
    59  0CB9  3439               	retlw	57
    60  0CBA  3400               	retlw	0
    61                           
    62                           ;initializer for _User2
    63  0CBB  3431               	retlw	49
    64  0CBC  3442               	retlw	66
    65  0CBD  3430               	retlw	48
    66  0CBE  3430               	retlw	48
    67  0CBF  3433               	retlw	51
    68  0CC0  3443               	retlw	67
    69  0CC1  3435               	retlw	53
    70  0CC2  3442               	retlw	66
    71  0CC3  3446               	retlw	70
    72  0CC4  3443               	retlw	67
    73  0CC5  3438               	retlw	56
    74  0CC6  3430               	retlw	48
    75  0CC7  3400               	retlw	0
    76                           
    77                           ;initializer for _User3
    78  0CC8  3431               	retlw	49
    79  0CC9  3442               	retlw	66
    80  0CCA  3430               	retlw	48
    81  0CCB  3430               	retlw	48
    82  0CCC  3433               	retlw	51
    83  0CCD  3443               	retlw	67
    84  0CCE  3435               	retlw	53
    85  0CCF  3442               	retlw	66
    86  0CD0  3446               	retlw	70
    87  0CD1  3443               	retlw	67
    88  0CD2  3438               	retlw	56
    89  0CD3  3431               	retlw	49
    90  0CD4  3400               	retlw	0
    91                           
    92                           	psect	stringtext
    93  1000                     __pstringtext:	
    94  1000                     stringtab:	
    95                           ;	global	stringtab,__stringbase
    96                           
    97                           
    98                           ;	String table - string pointers are 2 bytes each
    99  1000  1BFF               	btfsc	btemp+1,7
   100  1001  280A               	ljmp	stringcode
   101  1002  1383               	bcf	3,7
   102  1003  187F               	btfsc	btemp+1,0
   103  1004  1783               	bsf	3,7
   104  1005  0800               	movf	0,w
   105  1006  0A84               	incf	4,f
   106  1007  1903               	skipnz
   107  1008  0AFF               	incf	btemp+1,f
   108  1009  0008               	return
   109  100A                     stringcode:	
   110  100A  087F               	movf	btemp+1,w
   111  100B  397F               	andlw	127
   112  100C  008A               	movwf	10
   113  100D  0804               	movf	4,w
   114  100E  0A84               	incf	4,f
   115  100F  1903               	skipnz
   116  1010  0AFF               	incf	btemp+1,f
   117  1011  0082               	movwf	2
   118  1012                     __stringbase:	
   119  1012                     _digit:	
   120  1012  3430               	retlw	48
   121  1013  3431               	retlw	49
   122  1014  3432               	retlw	50
   123  1015  3433               	retlw	51
   124  1016  3434               	retlw	52
   125  1017  3435               	retlw	53
   126  1018  3436               	retlw	54
   127  1019  3437               	retlw	55
   128  101A  3438               	retlw	56
   129  101B  3439               	retlw	57
   130  101C  3400               	retlw	0
   131  000B                     _INTCON	set	11
   132  0007                     _PORTC	set	7
   133  0008                     _PORTD	set	8
   134  001A                     _RCREG	set	26
   135  0018                     _RCSTA	set	24
   136  0019                     _TXREG	set	25
   137  0018                     _CARRY	set	24
   138  00C4                     _CREN	set	196
   139  005F                     _GIE	set	95
   140  00C1                     _OERR	set	193
   141  0038                     _RC0	set	56
   142  0039                     _RC1	set	57
   143  0065                     _RCIF	set	101
   144  0040                     _RD0	set	64
   145  0041                     _RD1	set	65
   146  0042                     _RD2	set	66
   147  0043                     _RD3	set	67
   148  0044                     _RD4	set	68
   149  0045                     _RD5	set	69
   150  0046                     _RD6	set	70
   151  0047                     _RD7	set	71
   152  0064                     _TXIF	set	100
   153  008C                     _PIE1	set	140
   154  0099                     _SPBRG	set	153
   155  0087                     _TRISC	set	135
   156  0088                     _TRISD	set	136
   157  0098                     _TXSTA	set	152
   158  0440                     _TRISD0	set	1088
   159  0441                     _TRISD1	set	1089
   160  010D                     _EEADR	set	269
   161  010C                     _EEDATA	set	268
   162  0188                     _ANSEL	set	392
   163  0189                     _ANSELH	set	393
   164  018C                     _EECON1	set	396
   165  018D                     _EECON2	set	397
   166  0C60                     _RD	set	3168
   167  0C61                     _WR	set	3169
   168  0C62                     _WREN	set	3170
   169  101D                     STR_12:	
   170  101D  346D               	retlw	109	;'m'
   171  101E  346F               	retlw	111	;'o'
   172  101F  3469               	retlw	105	;'i'
   173  1020  3473               	retlw	115	;'s'
   174  1021  3474               	retlw	116	;'t'
   175  1022  3465               	retlw	101	;'e'
   176  1023  3472               	retlw	114	;'r'
   177  1024  3420               	retlw	32	;' '
   178  1025  346C               	retlw	108	;'l'
   179  1026  3465               	retlw	101	;'e'
   180  1027  3476               	retlw	118	;'v'
   181  1028  3465               	retlw	101	;'e'
   182  1029  346C               	retlw	108	;'l'
   183  102A  3420               	retlw	32	;' '
   184  102B  3468               	retlw	104	;'h'
   185  102C  3469               	retlw	105	;'i'
   186  102D  3467               	retlw	103	;'g'
   187  102E  3468               	retlw	104	;'h'
   188  102F  3420               	retlw	32	;' '
   189  1030  346D               	retlw	109	;'m'
   190  1031  346F               	retlw	111	;'o'
   191  1032  3474               	retlw	116	;'t'
   192  1033  3465               	retlw	101	;'e'
   193  1034  3472               	retlw	114	;'r'
   194  1035  3420               	retlw	32	;' '
   195  1036  344F               	retlw	79	;'O'
   196  1037  3446               	retlw	70	;'F'
   197  1038  3446               	retlw	70	;'F'
   198  1039  3400               	retlw	0
   199  103A                     STR_10:	
   200  103A  346D               	retlw	109	;'m'
   201  103B  346F               	retlw	111	;'o'
   202  103C  3469               	retlw	105	;'i'
   203  103D  3473               	retlw	115	;'s'
   204  103E  3474               	retlw	116	;'t'
   205  103F  3465               	retlw	101	;'e'
   206  1040  3472               	retlw	114	;'r'
   207  1041  3420               	retlw	32	;' '
   208  1042  346C               	retlw	108	;'l'
   209  1043  3465               	retlw	101	;'e'
   210  1044  3476               	retlw	118	;'v'
   211  1045  3465               	retlw	101	;'e'
   212  1046  346C               	retlw	108	;'l'
   213  1047  3420               	retlw	32	;' '
   214  1048  346C               	retlw	108	;'l'
   215  1049  346F               	retlw	111	;'o'
   216  104A  3477               	retlw	119	;'w'
   217  104B  3420               	retlw	32	;' '
   218  104C  346D               	retlw	109	;'m'
   219  104D  346F               	retlw	111	;'o'
   220  104E  3474               	retlw	116	;'t'
   221  104F  3465               	retlw	101	;'e'
   222  1050  3472               	retlw	114	;'r'
   223  1051  3420               	retlw	32	;' '
   224  1052  344F               	retlw	79	;'O'
   225  1053  344E               	retlw	78	;'N'
   226  1054  3400               	retlw	0
   227  1055                     STR_27:	
   228  1055  3441               	retlw	65	;'A'
   229  1056  3454               	retlw	84	;'T'
   230  1057  342B               	retlw	43	;'+'
   231  1058  3443               	retlw	67	;'C'
   232  1059  344D               	retlw	77	;'M'
   233  105A  3447               	retlw	71	;'G'
   234  105B  3453               	retlw	83	;'S'
   235  105C  343D               	retlw	61	;'='
   236  105D  3422               	retlw	34	;'"'
   237  105E  342B               	retlw	43	;'+'
   238  105F  3439               	retlw	57	;'9'
   239  1060  3431               	retlw	49	;'1'
   240  1061  3439               	retlw	57	;'9'
   241  1062  3438               	retlw	56	;'8'
   242  1063  3439               	retlw	57	;'9'
   243  1064  3434               	retlw	52	;'4'
   244  1065  3437               	retlw	55	;'7'
   245  1066  3434               	retlw	52	;'4'
   246  1067  3438               	retlw	56	;'8'
   247  1068  3432               	retlw	50	;'2'
   248  1069  3430               	retlw	48	;'0'
   249  106A  3430               	retlw	48	;'0'
   250  106B  3422               	retlw	34	;'"'
   251  106C  3400               	retlw	0
   252  106D                     STR_9:	
   253  106D  3441               	retlw	65	;'A'
   254  106E  3454               	retlw	84	;'T'
   255  106F  342B               	retlw	43	;'+'
   256  1070  3443               	retlw	67	;'C'
   257  1071  344D               	retlw	77	;'M'
   258  1072  3447               	retlw	71	;'G'
   259  1073  3453               	retlw	83	;'S'
   260  1074  343D               	retlw	61	;'='
   261  1075  3422               	retlw	34	;'"'
   262  1076  342B               	retlw	43	;'+'
   263  1077  3439               	retlw	57	;'9'
   264  1078  3431               	retlw	49	;'1'
   265  1079  3439               	retlw	57	;'9'
   266  107A  3437               	retlw	55	;'7'
   267  107B  3439               	retlw	57	;'9'
   268  107C  3430               	retlw	48	;'0'
   269  107D  3430               	retlw	48	;'0'
   270  107E  3438               	retlw	56	;'8'
   271  107F  3430               	retlw	48	;'0'
   272  1080  3435               	retlw	53	;'5'
   273  1081  3431               	retlw	49	;'1'
   274  1082  3430               	retlw	48	;'0'
   275  1083  3422               	retlw	34	;'"'
   276  1084  3400               	retlw	0
   277  1085                     STR_21:	
   278  1085  3453               	retlw	83	;'S'
   279  1086  3455               	retlw	85	;'U'
   280  1087  3447               	retlw	71	;'G'
   281  1088  3441               	retlw	65	;'A'
   282  1089  3452               	retlw	82	;'R'
   283  108A  343A               	retlw	58	;':'
   284  108B  3420               	retlw	32	;' '
   285  108C  3420               	retlw	32	;' '
   286  108D  3420               	retlw	32	;' '
   287  108E  3420               	retlw	32	;' '
   288  108F  344B               	retlw	75	;'K'
   289  1090  3467               	retlw	103	;'g'
   290  1091  3420               	retlw	32	;' '
   291  1092  3420               	retlw	32	;' '
   292  1093  3420               	retlw	32	;' '
   293  1094  3420               	retlw	32	;' '
   294  1095  3420               	retlw	32	;' '
   295  1096  3420               	retlw	32	;' '
   296  1097  3420               	retlw	32	;' '
   297  1098  3420               	retlw	32	;' '
   298  1099  3420               	retlw	32	;' '
   299  109A  3400               	retlw	0
   300  109B                     STR_22:	
   301  109B  344B               	retlw	75	;'K'
   302  109C  3445               	retlw	69	;'E'
   303  109D  3452               	retlw	82	;'R'
   304  109E  344F               	retlw	79	;'O'
   305  109F  3453               	retlw	83	;'S'
   306  10A0  3445               	retlw	69	;'E'
   307  10A1  344E               	retlw	78	;'N'
   308  10A2  3445               	retlw	69	;'E'
   309  10A3  343A               	retlw	58	;':'
   310  10A4  3420               	retlw	32	;' '
   311  10A5  3420               	retlw	32	;' '
   312  10A6  3420               	retlw	32	;' '
   313  10A7  3420               	retlw	32	;' '
   314  10A8  3420               	retlw	32	;' '
   315  10A9  344C               	retlw	76	;'L'
   316  10AA  3474               	retlw	116	;'t'
   317  10AB  3473               	retlw	115	;'s'
   318  10AC  3420               	retlw	32	;' '
   319  10AD  3420               	retlw	32	;' '
   320  10AE  3420               	retlw	32	;' '
   321  10AF  3420               	retlw	32	;' '
   322  10B0  3400               	retlw	0
   323  10B1                     STR_37:	
   324  10B1  3452               	retlw	82	;'R'
   325  10B2  3449               	retlw	73	;'I'
   326  10B3  3453               	retlw	83	;'S'
   327  10B4  3445               	retlw	69	;'E'
   328  10B5  343A               	retlw	58	;':'
   329  10B6  3420               	retlw	32	;' '
   330  10B7  3420               	retlw	32	;' '
   331  10B8  3420               	retlw	32	;' '
   332  10B9  344B               	retlw	75	;'K'
   333  10BA  3467               	retlw	103	;'g'
   334  10BB  3420               	retlw	32	;' '
   335  10BC  3420               	retlw	32	;' '
   336  10BD  3420               	retlw	32	;' '
   337  10BE  3420               	retlw	32	;' '
   338  10BF  3420               	retlw	32	;' '
   339  10C0  3420               	retlw	32	;' '
   340  10C1  3420               	retlw	32	;' '
   341  10C2  3420               	retlw	32	;' '
   342  10C3  3420               	retlw	32	;' '
   343  10C4  3420               	retlw	32	;' '
   344  10C5  3400               	retlw	0
   345  10C6                     STR_38:	
   346  10C6  3453               	retlw	83	;'S'
   347  10C7  3455               	retlw	85	;'U'
   348  10C8  3447               	retlw	71	;'G'
   349  10C9  3441               	retlw	65	;'A'
   350  10CA  3452               	retlw	82	;'R'
   351  10CB  343A               	retlw	58	;':'
   352  10CC  3420               	retlw	32	;' '
   353  10CD  3420               	retlw	32	;' '
   354  10CE  3420               	retlw	32	;' '
   355  10CF  344B               	retlw	75	;'K'
   356  10D0  3467               	retlw	103	;'g'
   357  10D1  3420               	retlw	32	;' '
   358  10D2  3420               	retlw	32	;' '
   359  10D3  3420               	retlw	32	;' '
   360  10D4  3420               	retlw	32	;' '
   361  10D5  3420               	retlw	32	;' '
   362  10D6  3420               	retlw	32	;' '
   363  10D7  3420               	retlw	32	;' '
   364  10D8  3420               	retlw	32	;' '
   365  10D9  3420               	retlw	32	;' '
   366  10DA  3400               	retlw	0
   367  10DB                     STR_36:	
   368  10DB  3455               	retlw	85	;'U'
   369  10DC  3453               	retlw	83	;'S'
   370  10DD  3445               	retlw	69	;'E'
   371  10DE  3452               	retlw	82	;'R'
   372  10DF  3431               	retlw	49	;'1'
   373  10E0  3420               	retlw	32	;' '
   374  10E1  3441               	retlw	65	;'A'
   375  10E2  344D               	retlw	77	;'M'
   376  10E3  344F               	retlw	79	;'O'
   377  10E4  3455               	retlw	85	;'U'
   378  10E5  344E               	retlw	78	;'N'
   379  10E6  3454               	retlw	84	;'T'
   380  10E7  343A               	retlw	58	;':'
   381  10E8  3420               	retlw	32	;' '
   382  10E9  3420               	retlw	32	;' '
   383  10EA  3420               	retlw	32	;' '
   384  10EB  3420               	retlw	32	;' '
   385  10EC  3420               	retlw	32	;' '
   386  10ED  3420               	retlw	32	;' '
   387  10EE  3420               	retlw	32	;' '
   388  10EF  3400               	retlw	0
   389  10F0                     STR_40:	
   390  10F0  3455               	retlw	85	;'U'
   391  10F1  3453               	retlw	83	;'S'
   392  10F2  3445               	retlw	69	;'E'
   393  10F3  3452               	retlw	82	;'R'
   394  10F4  3432               	retlw	50	;'2'
   395  10F5  3420               	retlw	32	;' '
   396  10F6  3441               	retlw	65	;'A'
   397  10F7  344D               	retlw	77	;'M'
   398  10F8  344F               	retlw	79	;'O'
   399  10F9  3455               	retlw	85	;'U'
   400  10FA  344E               	retlw	78	;'N'
   401  10FB  3454               	retlw	84	;'T'
   402  10FC  343A               	retlw	58	;':'
   403  10FD  3420               	retlw	32	;' '
   404  10FE  3420               	retlw	32	;' '
   405  10FF  3420               	retlw	32	;' '
   406  1100  3420               	retlw	32	;' '
   407  1101  3420               	retlw	32	;' '
   408  1102  3420               	retlw	32	;' '
   409  1103  3420               	retlw	32	;' '
   410  1104  3400               	retlw	0
   411  1105                     STR_44:	
   412  1105  3455               	retlw	85	;'U'
   413  1106  3453               	retlw	83	;'S'
   414  1107  3445               	retlw	69	;'E'
   415  1108  3452               	retlw	82	;'R'
   416  1109  3433               	retlw	51	;'3'
   417  110A  3420               	retlw	32	;' '
   418  110B  3441               	retlw	65	;'A'
   419  110C  344D               	retlw	77	;'M'
   420  110D  344F               	retlw	79	;'O'
   421  110E  3455               	retlw	85	;'U'
   422  110F  344E               	retlw	78	;'N'
   423  1110  3454               	retlw	84	;'T'
   424  1111  343A               	retlw	58	;':'
   425  1112  3420               	retlw	32	;' '
   426  1113  3420               	retlw	32	;' '
   427  1114  3420               	retlw	32	;' '
   428  1115  3420               	retlw	32	;' '
   429  1116  3420               	retlw	32	;' '
   430  1117  3420               	retlw	32	;' '
   431  1118  3420               	retlw	32	;' '
   432  1119  3400               	retlw	0
   433  111A                     STR_20:	
   434  111A  3452               	retlw	82	;'R'
   435  111B  3449               	retlw	73	;'I'
   436  111C  3453               	retlw	83	;'S'
   437  111D  3445               	retlw	69	;'E'
   438  111E  343A               	retlw	58	;':'
   439  111F  3420               	retlw	32	;' '
   440  1120  3420               	retlw	32	;' '
   441  1121  3420               	retlw	32	;' '
   442  1122  3420               	retlw	32	;' '
   443  1123  3420               	retlw	32	;' '
   444  1124  3420               	retlw	32	;' '
   445  1125  344B               	retlw	75	;'K'
   446  1126  3467               	retlw	103	;'g'
   447  1127  3420               	retlw	32	;' '
   448  1128  3420               	retlw	32	;' '
   449  1129  3420               	retlw	32	;' '
   450  112A  3420               	retlw	32	;' '
   451  112B  3420               	retlw	32	;' '
   452  112C  3420               	retlw	32	;' '
   453  112D  3420               	retlw	32	;' '
   454  112E  3400               	retlw	0
   455  112F                     STR_39:	
   456  112F  344B               	retlw	75	;'K'
   457  1130  3445               	retlw	69	;'E'
   458  1131  3452               	retlw	82	;'R'
   459  1132  344F               	retlw	79	;'O'
   460  1133  3453               	retlw	83	;'S'
   461  1134  3445               	retlw	69	;'E'
   462  1135  344E               	retlw	78	;'N'
   463  1136  3445               	retlw	69	;'E'
   464  1137  343A               	retlw	58	;':'
   465  1138  3420               	retlw	32	;' '
   466  1139  3420               	retlw	32	;' '
   467  113A  3420               	retlw	32	;' '
   468  113B  344C               	retlw	76	;'L'
   469  113C  3474               	retlw	116	;'t'
   470  113D  3473               	retlw	115	;'s'
   471  113E  3420               	retlw	32	;' '
   472  113F  3420               	retlw	32	;' '
   473  1140  3420               	retlw	32	;' '
   474  1141  3420               	retlw	32	;' '
   475  1142  3420               	retlw	32	;' '
   476  1143  3400               	retlw	0
   477  1144                     STR_19:	
   478  1144  3420               	retlw	32	;' '
   479  1145  3420               	retlw	32	;' '
   480  1146  3420               	retlw	32	;' '
   481  1147  3420               	retlw	32	;' '
   482  1148  3453               	retlw	83	;'S'
   483  1149  3454               	retlw	84	;'T'
   484  114A  344F               	retlw	79	;'O'
   485  114B  3443               	retlw	67	;'C'
   486  114C  344B               	retlw	75	;'K'
   487  114D  3420               	retlw	32	;' '
   488  114E  3444               	retlw	68	;'D'
   489  114F  3445               	retlw	69	;'E'
   490  1150  3454               	retlw	84	;'T'
   491  1151  3441               	retlw	65	;'A'
   492  1152  3449               	retlw	73	;'I'
   493  1153  344C               	retlw	76	;'L'
   494  1154  3453               	retlw	83	;'S'
   495  1155  3420               	retlw	32	;' '
   496  1156  3420               	retlw	32	;' '
   497  1157  3420               	retlw	32	;' '
   498  1158  3400               	retlw	0
   499  1159                     STR_14:	
   500  1159  3443               	retlw	67	;'C'
   501  115A  3472               	retlw	114	;'r'
   502  115B  346F               	retlw	111	;'o'
   503  115C  3470               	retlw	112	;'p'
   504  115D  3420               	retlw	32	;' '
   505  115E  3463               	retlw	99	;'c'
   506  115F  3472               	retlw	114	;'r'
   507  1160  346F               	retlw	111	;'o'
   508  1161  3473               	retlw	115	;'s'
   509  1162  3473               	retlw	115	;'s'
   510  1163  3465               	retlw	101	;'e'
   511  1164  3464               	retlw	100	;'d'
   512  1165  3420               	retlw	32	;' '
   513  1166  3473               	retlw	115	;'s'
   514  1167  3474               	retlw	116	;'t'
   515  1168  3461               	retlw	97	;'a'
   516  1169  3467               	retlw	103	;'g'
   517  116A  3465               	retlw	101	;'e'
   518  116B  3431               	retlw	49	;'1'
   519  116C  3400               	retlw	0
   520  116D                     STR_16:	
   521  116D  3443               	retlw	67	;'C'
   522  116E  3472               	retlw	114	;'r'
   523  116F  346F               	retlw	111	;'o'
   524  1170  3470               	retlw	112	;'p'
   525  1171  3420               	retlw	32	;' '
   526  1172  3463               	retlw	99	;'c'
   527  1173  3472               	retlw	114	;'r'
   528  1174  346F               	retlw	111	;'o'
   529  1175  3473               	retlw	115	;'s'
   530  1176  3473               	retlw	115	;'s'
   531  1177  3465               	retlw	101	;'e'
   532  1178  3464               	retlw	100	;'d'
   533  1179  3420               	retlw	32	;' '
   534  117A  3473               	retlw	115	;'s'
   535  117B  3474               	retlw	116	;'t'
   536  117C  3461               	retlw	97	;'a'
   537  117D  3467               	retlw	103	;'g'
   538  117E  3465               	retlw	101	;'e'
   539  117F  3432               	retlw	50	;'2'
   540  1180  3400               	retlw	0
   541  1181                     STR_18:	
   542  1181  3443               	retlw	67	;'C'
   543  1182  3472               	retlw	114	;'r'
   544  1183  346F               	retlw	111	;'o'
   545  1184  3470               	retlw	112	;'p'
   546  1185  3420               	retlw	32	;' '
   547  1186  3463               	retlw	99	;'c'
   548  1187  3472               	retlw	114	;'r'
   549  1188  346F               	retlw	111	;'o'
   550  1189  3473               	retlw	115	;'s'
   551  118A  3473               	retlw	115	;'s'
   552  118B  3465               	retlw	101	;'e'
   553  118C  3464               	retlw	100	;'d'
   554  118D  3420               	retlw	32	;' '
   555  118E  3473               	retlw	115	;'s'
   556  118F  3474               	retlw	116	;'t'
   557  1190  3461               	retlw	97	;'a'
   558  1191  3467               	retlw	103	;'g'
   559  1192  3465               	retlw	101	;'e'
   560  1193  3433               	retlw	51	;'3'
   561  1194  3400               	retlw	0
   562  1195                     STR_7:	
   563  1195  3441               	retlw	65	;'A'
   564  1196  3454               	retlw	84	;'T'
   565  1197  342B               	retlw	43	;'+'
   566  1198  3443               	retlw	67	;'C'
   567  1199  344E               	retlw	78	;'N'
   568  119A  344D               	retlw	77	;'M'
   569  119B  3449               	retlw	73	;'I'
   570  119C  343D               	retlw	61	;'='
   571  119D  3432               	retlw	50	;'2'
   572  119E  342C               	retlw	44	;','
   573  119F  3432               	retlw	50	;'2'
   574  11A0  342C               	retlw	44	;','
   575  11A1  3430               	retlw	48	;'0'
   576  11A2  342C               	retlw	44	;','
   577  11A3  3430               	retlw	48	;'0'
   578  11A4  342C               	retlw	44	;','
   579  11A5  3430               	retlw	48	;'0'
   580  11A6  340D               	retlw	13
   581  11A7  3400               	retlw	0
   582  11A8                     STR_26:	
   583  11A8  3453               	retlw	83	;'S'
   584  11A9  344D               	retlw	77	;'M'
   585  11AA  3441               	retlw	65	;'A'
   586  11AB  3452               	retlw	82	;'R'
   587  11AC  3454               	retlw	84	;'T'
   588  11AD  3420               	retlw	32	;' '
   589  11AE  3443               	retlw	67	;'C'
   590  11AF  3441               	retlw	65	;'A'
   591  11B0  3452               	retlw	82	;'R'
   592  11B1  3444               	retlw	68	;'D'
   593  11B2  3420               	retlw	32	;' '
   594  11B3  3420               	retlw	32	;' '
   595  11B4  3420               	retlw	32	;' '
   596  11B5  3420               	retlw	32	;' '
   597  11B6  3420               	retlw	32	;' '
   598  11B7  3420               	retlw	32	;' '
   599  11B8  3420               	retlw	32	;' '
   600  11B9  3400               	retlw	0
   601  11BA                     STR_24:	
   602  11BA  3420               	retlw	32	;' '
   603  11BB  3420               	retlw	32	;' '
   604  11BC  3420               	retlw	32	;' '
   605  11BD  3443               	retlw	67	;'C'
   606  11BE  3441               	retlw	65	;'A'
   607  11BF  3452               	retlw	82	;'R'
   608  11C0  3444               	retlw	68	;'D'
   609  11C1  3420               	retlw	32	;' '
   610  11C2  3453               	retlw	83	;'S'
   611  11C3  3459               	retlw	89	;'Y'
   612  11C4  3453               	retlw	83	;'S'
   613  11C5  3454               	retlw	84	;'T'
   614  11C6  3445               	retlw	69	;'E'
   615  11C7  344D               	retlw	77	;'M'
   616  11C8  3420               	retlw	32	;' '
   617  11C9  3420               	retlw	32	;' '
   618  11CA  3420               	retlw	32	;' '
   619  11CB  3400               	retlw	0
   620  11CC                     STR_25:	
   621  11CC  3450               	retlw	80	;'P'
   622  11CD  344C               	retlw	76	;'L'
   623  11CE  3445               	retlw	69	;'E'
   624  11CF  3441               	retlw	65	;'A'
   625  11D0  3453               	retlw	83	;'S'
   626  11D1  3445               	retlw	69	;'E'
   627  11D2  3420               	retlw	32	;' '
   628  11D3  3454               	retlw	84	;'T'
   629  11D4  3441               	retlw	65	;'A'
   630  11D5  3450               	retlw	80	;'P'
   631  11D6  3420               	retlw	32	;' '
   632  11D7  3459               	retlw	89	;'Y'
   633  11D8  344F               	retlw	79	;'O'
   634  11D9  3455               	retlw	85	;'U'
   635  11DA  3452               	retlw	82	;'R'
   636  11DB  3420               	retlw	32	;' '
   637  11DC  3420               	retlw	32	;' '
   638  11DD  3400               	retlw	0
   639  11DE                     STR_23:	
   640  11DE  3441               	retlw	65	;'A'
   641  11DF  3455               	retlw	85	;'U'
   642  11E0  3454               	retlw	84	;'T'
   643  11E1  344F               	retlw	79	;'O'
   644  11E2  344D               	retlw	77	;'M'
   645  11E3  3441               	retlw	65	;'A'
   646  11E4  3454               	retlw	84	;'T'
   647  11E5  3449               	retlw	73	;'I'
   648  11E6  3443               	retlw	67	;'C'
   649  11E7  3420               	retlw	32	;' '
   650  11E8  3452               	retlw	82	;'R'
   651  11E9  3441               	retlw	65	;'A'
   652  11EA  3454               	retlw	84	;'T'
   653  11EB  3449               	retlw	73	;'I'
   654  11EC  344F               	retlw	79	;'O'
   655  11ED  344E               	retlw	78	;'N'
   656  11EE  3420               	retlw	32	;' '
   657  11EF  3400               	retlw	0
   658  11F0                     STR_2:	
   659  11F0  3450               	retlw	80	;'P'
   660  11F1  344C               	retlw	76	;'L'
   661  11F2  3453               	retlw	83	;'S'
   662  11F3  3420               	retlw	32	;' '
   663  11F4  3457               	retlw	87	;'W'
   664  11F5  3441               	retlw	65	;'A'
   665  11F6  3449               	retlw	73	;'I'
   666  11F7  3454               	retlw	84	;'T'
   667  11F8  342E               	retlw	46	;'.'
   668  11F9  342E               	retlw	46	;'.'
   669  11FA  342E               	retlw	46	;'.'
   670  11FB  342E               	retlw	46	;'.'
   671  11FC  342E               	retlw	46	;'.'
   672  11FD  342E               	retlw	46	;'.'
   673  11FE  342E               	retlw	46	;'.'
   674  11FF  342E               	retlw	46	;'.'
   675  1200  3400               	retlw	0
   676  1201                     STR_1:	
   677  1201  3447               	retlw	71	;'G'
   678  1202  3453               	retlw	83	;'S'
   679  1203  344D               	retlw	77	;'M'
   680  1204  3420               	retlw	32	;' '
   681  1205  3449               	retlw	73	;'I'
   682  1206  344E               	retlw	78	;'N'
   683  1207  3449               	retlw	73	;'I'
   684  1208  3454               	retlw	84	;'T'
   685  1209  3449               	retlw	73	;'I'
   686  120A  3441               	retlw	65	;'A'
   687  120B  344C               	retlw	76	;'L'
   688  120C  3449               	retlw	73	;'I'
   689  120D  345A               	retlw	90	;'Z'
   690  120E  3449               	retlw	73	;'I'
   691  120F  344E               	retlw	78	;'N'
   692  1210  3447               	retlw	71	;'G'
   693  1211  3400               	retlw	0
   694  1212                     STR_32:	
   695  1212  344B               	retlw	75	;'K'
   696  1213  3465               	retlw	101	;'e'
   697  1214  3472               	retlw	114	;'r'
   698  1215  346F               	retlw	111	;'o'
   699  1216  3473               	retlw	115	;'s'
   700  1217  3465               	retlw	101	;'e'
   701  1218  346E               	retlw	110	;'n'
   702  1219  3465               	retlw	101	;'e'
   703  121A  3420               	retlw	32	;' '
   704  121B  3453               	retlw	83	;'S'
   705  121C  3474               	retlw	116	;'t'
   706  121D  346F               	retlw	111	;'o'
   707  121E  3463               	retlw	99	;'c'
   708  121F  346B               	retlw	107	;'k'
   709  1220  343A               	retlw	58	;':'
   710  1221  3400               	retlw	0
   711  1222                     STR_30:	
   712  1222  3453               	retlw	83	;'S'
   713  1223  3475               	retlw	117	;'u'
   714  1224  3467               	retlw	103	;'g'
   715  1225  3461               	retlw	97	;'a'
   716  1226  3472               	retlw	114	;'r'
   717  1227  3420               	retlw	32	;' '
   718  1228  3453               	retlw	83	;'S'
   719  1229  3474               	retlw	116	;'t'
   720  122A  346F               	retlw	111	;'o'
   721  122B  3463               	retlw	99	;'c'
   722  122C  346B               	retlw	107	;'k'
   723  122D  343A               	retlw	58	;':'
   724  122E  3400               	retlw	0
   725  122F                     STR_28:	
   726  122F  3452               	retlw	82	;'R'
   727  1230  3469               	retlw	105	;'i'
   728  1231  3473               	retlw	115	;'s'
   729  1232  3465               	retlw	101	;'e'
   730  1233  3420               	retlw	32	;' '
   731  1234  3453               	retlw	83	;'S'
   732  1235  3474               	retlw	116	;'t'
   733  1236  346F               	retlw	111	;'o'
   734  1237  3463               	retlw	99	;'c'
   735  1238  346B               	retlw	107	;'k'
   736  1239  343A               	retlw	58	;':'
   737  123A  3400               	retlw	0
   738  123B                     STR_6:	
   739  123B  3441               	retlw	65	;'A'
   740  123C  3454               	retlw	84	;'T'
   741  123D  342B               	retlw	43	;'+'
   742  123E  3443               	retlw	67	;'C'
   743  123F  344D               	retlw	77	;'M'
   744  1240  3447               	retlw	71	;'G'
   745  1241  3446               	retlw	70	;'F'
   746  1242  343D               	retlw	61	;'='
   747  1243  3431               	retlw	49	;'1'
   748  1244  340D               	retlw	13
   749  1245  3400               	retlw	0
   750  1246                     STR_5:	
   751  1246  3441               	retlw	65	;'A'
   752  1247  3454               	retlw	84	;'T'
   753  1248  342B               	retlw	43	;'+'
   754  1249  3443               	retlw	67	;'C'
   755  124A  3453               	retlw	83	;'S'
   756  124B  3444               	retlw	68	;'D'
   757  124C  3448               	retlw	72	;'H'
   758  124D  343D               	retlw	61	;'='
   759  124E  3431               	retlw	49	;'1'
   760  124F  340D               	retlw	13
   761  1250  3400               	retlw	0
   762  1251                     STR_4:	
   763  1251  3441               	retlw	65	;'A'
   764  1252  3454               	retlw	84	;'T'
   765  1253  342B               	retlw	43	;'+'
   766  1254  3443               	retlw	67	;'C'
   767  1255  3450               	retlw	80	;'P'
   768  1256  3449               	retlw	73	;'I'
   769  1257  344E               	retlw	78	;'N'
   770  1258  343F               	retlw	63	;'?'
   771  1259  340D               	retlw	13
   772  125A  3400               	retlw	0
   773  125B                     STR_8:	
   774  125B  3447               	retlw	71	;'G'
   775  125C  3453               	retlw	83	;'S'
   776  125D  344D               	retlw	77	;'M'
   777  125E  3420               	retlw	32	;' '
   778  125F  3452               	retlw	82	;'R'
   779  1260  3445               	retlw	69	;'E'
   780  1261  3441               	retlw	65	;'A'
   781  1262  3444               	retlw	68	;'D'
   782  1263  3459               	retlw	89	;'Y'
   783  1264  3400               	retlw	0
   784  1265                     STR_48:	
   785  1265  3453               	retlw	83	;'S'
   786  1266  3454               	retlw	84	;'T'
   787  1267  344F               	retlw	79	;'O'
   788  1268  3443               	retlw	67	;'C'
   789  1269  344B               	retlw	75	;'K'
   790  126A  3400               	retlw	0
   791  126B                     STR_29:	
   792  126B  3420               	retlw	32	;' '
   793  126C  344B               	retlw	75	;'K'
   794  126D  3467               	retlw	103	;'g'
   795  126E  3473               	retlw	115	;'s'
   796  126F  3400               	retlw	0
   797  1270                     STR_33:	
   798  1270  3420               	retlw	32	;' '
   799  1271  344C               	retlw	76	;'L'
   800  1272  3474               	retlw	116	;'t'
   801  1273  3473               	retlw	115	;'s'
   802  1274  3400               	retlw	0
   803  1275                     STR_3:	
   804  1275  3441               	retlw	65	;'A'
   805  1276  3454               	retlw	84	;'T'
   806  1277  340D               	retlw	13
   807  1278  3400               	retlw	0
   808  10B1                     
   809                           	psect	cinit
   810  0C8C                     start_initialization:	
   811                           
   812                           ; Clear objects allocated to BITCOMMON
   813  0C8C  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   814                           
   815                           ; Clear objects allocated to COMMON
   816  0C8D  01F7               	clrf	__pbssCOMMON& (0+127)
   817                           
   818                           ; Clear objects allocated to BANK0
   819  0C8E  1383               	bcf	3,7	;select IRP bank0
   820  0C8F  3020               	movlw	low __pbssBANK0
   821  0C90  0084               	movwf	4
   822  0C91  3053               	movlw	low (__pbssBANK0+51)
   823  0C92  120A  158A  2418   	fcall	clear_ram
      +       120A  158A         
   824                           
   825                           ; Clear objects allocated to BANK1
   826  0C97  30C7               	movlw	low __pbssBANK1
   827  0C98  0084               	movwf	4
   828  0C99  30DB               	movlw	low (__pbssBANK1+20)
   829  0C9A  120A  158A  2418   	fcall	clear_ram
      +       120A  158A         
   830                           
   831                           ; Initialize objects allocated to BANK1
   832  0C9F  30C7               	movlw	low (__pdataBANK1+39)
   833  0CA0  00FD               	movwf	125
   834  0CA1  300C               	movlw	high __pidataBANK1
   835  0CA2  00FE               	movwf	126
   836  0CA3  30AE               	movlw	low __pidataBANK1
   837  0CA4  00FF               	movwf	127
   838  0CA5  30A0               	movlw	low __pdataBANK1
   839  0CA6  0084               	movwf	4
   840  0CA7  120A  158A  2442   	fcall	init_ram
   841  0CAA                     end_of_initialization:	
   842                           ;End of C runtime variable initialization code
   843                           
   844  0CAA  0183               	clrf	3
   845  0CAB  120A  118A  2BE8   	ljmp	_main	;jump to C main() function
   846                           
   847                           	psect	bitbssCOMMON
   848  03B0                     __pbitbssCOMMON:	
   849  03B0                     _rfid_flag:	
   850  03B0                     	ds	1
   851  03B1                     _sms_indication:	
   852  03B1                     	ds	1
   853                           
   854                           	psect	bssCOMMON
   855  0077                     __pbssCOMMON:	
   856  0077                     _delayus_variable:	
   857  0077                     	ds	1
   858                           
   859                           	psect	bssBANK0
   860  0020                     __pbssBANK0:	
   861  0020                     _KeroseneStock:	
   862  0020                     	ds	2
   863  0022                     _RiseStock:	
   864  0022                     	ds	2
   865  0024                     _SugarStock:	
   866  0024                     	ds	2
   867  0026                     _User:	
   868  0026                     	ds	2
   869  0028                     _User1amt:	
   870  0028                     	ds	2
   871  002A                     _User2amt:	
   872  002A                     	ds	2
   873  002C                     _User3amt:	
   874  002C                     	ds	2
   875  002E                     _User1Kerosene:	
   876  002E                     	ds	1
   877  002F                     _User1Rise:	
   878  002F                     	ds	1
   879  0030                     _User1Sugar:	
   880  0030                     	ds	1
   881  0031                     _User2Kerosene:	
   882  0031                     	ds	1
   883  0032                     _User2Rise:	
   884  0032                     	ds	1
   885  0033                     _User2Sugar:	
   886  0033                     	ds	1
   887  0034                     _User3Kerosene:	
   888  0034                     	ds	1
   889  0035                     _User3Rise:	
   890  0035                     	ds	1
   891  0036                     _User3Sugar:	
   892  0036                     	ds	1
   893  0037                     _card_store:	
   894  0037                     	ds	15
   895  0046                     _RiseArray:	
   896  0046                     	ds	5
   897  004B                     _KeroseneArray:	
   898  004B                     	ds	4
   899  004F                     _SugarArray:	
   900  004F                     	ds	4
   901                           
   902                           	psect	bssBANK1
   903  00C7                     __pbssBANK1:	
   904  00C7                     _sms:	
   905  00C7                     	ds	20
   906                           
   907                           	psect	dataBANK1
   908  00A0                     __pdataBANK1:	
   909  00A0                     _User1:	
   910  00A0                     	ds	13
   911  00AD                     _User2:	
   912  00AD                     	ds	13
   913  00BA                     _User3:	
   914  00BA                     	ds	13
   915                           
   916                           	psect	clrtext
   917  0C18                     clear_ram:	
   918                           ;	Called with FSR containing the base address, and
   919                           ;	W with the last address+1
   920                           
   921  0C18  0064               	clrwdt	;clear the watchdog before getting into this loop
   922  0C19                     clrloop:	
   923  0C19  0180               	clrf	0	;clear RAM location pointed to by FSR
   924  0C1A  0A84               	incf	4,f	;increment pointer
   925  0C1B  0604               	xorwf	4,w	;XOR with final address
   926  0C1C  1903               	btfsc	3,2	;have we reached the end yet?
   927  0C1D  3400               	retlw	0	;all done for this memory range, return
   928  0C1E  0604               	xorwf	4,w	;XOR again to restore value
   929  0C1F  2C19               	goto	clrloop	;do the next byte
   930                           
   931                           	psect	inittext
   932  0C3E                     init_fetch:	
   933                           ;	Called with low address in FSR and high address in W
   934                           
   935  0C3E  087E               	movf	126,w
   936  0C3F  008A               	movwf	10
   937  0C40  087F               	movf	127,w
   938  0C41  0082               	movwf	2
   939  0C42                     init_ram:	
   940                           ;Called with:
   941                           ;	high address of idata address in btemp 
   942                           ;	low address of idata address in btemp+1 
   943                           ;	low address of data in FSR
   944                           ;	high address + 1 of data in btemp-1
   945                           
   946  0C42  243E  120A  158A   	fcall	init_fetch
   947  0C45  0080               	movwf	0
   948  0C46  0A84               	incf	4,f
   949  0C47  0804               	movf	4,w
   950  0C48  067D               	xorwf	125,w
   951  0C49  1903               	btfsc	3,2
   952  0C4A  3400               	retlw	0
   953  0C4B  0AFF               	incf	127,f
   954  0C4C  1903               	btfsc	3,2
   955  0C4D  0AFE               	incf	126,f
   956  0C4E  2C42               	goto	init_ram
   957                           
   958                           	psect	cstackCOMMON
   959  0070                     __pcstackCOMMON:	
   960  0070                     ?_DelayMs:	
   961  0070                     ?_DelayS:	
   962                           ; 0 bytes @ 0x0
   963                           
   964  0070                     ?_enable:	
   965                           ; 0 bytes @ 0x0
   966                           
   967  0070                     ?_lcdport:	
   968                           ; 0 bytes @ 0x0
   969                           
   970  0070                     ?_lcdcmd:	
   971                           ; 0 bytes @ 0x0
   972                           
   973  0070                     ?_lcddata:	
   974                           ; 0 bytes @ 0x0
   975                           
   976  0070                     ?_lcd_init:	
   977                           ; 0 bytes @ 0x0
   978                           
   979  0070                     ?_SoftWareUart_Init:	
   980                           ; 0 bytes @ 0x0
   981                           
   982  0070                     ?_transmit:	
   983                           ; 0 bytes @ 0x0
   984                           
   985  0070                     ?_gsm_init:	
   986                           ; 0 bytes @ 0x0
   987                           
   988  0070                     ?_gsm_read_line2:	
   989                           ; 0 bytes @ 0x0
   990                           
   991  0070                     ??_gsm_read_line2:	
   992                           ; 0 bytes @ 0x0
   993                           
   994  0070                     ?_ISR:	
   995                           ; 0 bytes @ 0x0
   996                           
   997  0070                     ?_RFID_read:	
   998                           ; 0 bytes @ 0x0
   999                           
  1000  0070                     ?_ReadAmnt:	
  1001                           ; 0 bytes @ 0x0
  1002                           
  1003  0070                     ?_ReadStock:	
  1004                           ; 0 bytes @ 0x0
  1005                           
  1006  0070                     ?_DisplayStock:	
  1007                           ; 0 bytes @ 0x0
  1008                           
  1009  0070                     ?_uart_init:	
  1010                           ; 0 bytes @ 0x0
  1011                           
  1012  0070                     ?_paramter:	
  1013                           ; 0 bytes @ 0x0
  1014                           
  1015  0070                     ?_startup:	
  1016                           ; 0 bytes @ 0x0
  1017                           
  1018  0070                     ?_LoadStockToArray:	
  1019                           ; 0 bytes @ 0x0
  1020                           
  1021  0070                     ?_SendStock:	
  1022                           ; 0 bytes @ 0x0
  1023                           
  1024  0070                     ?_main:	
  1025                           ; 0 bytes @ 0x0
  1026                           
  1027  0070                     ??i1_receive:	
  1028                           ; 0 bytes @ 0x0
  1029                           
  1030  0070                     ?_eeprom_read:	
  1031                           ; 0 bytes @ 0x0
  1032                           
  1033  0070                     ?_softreceive:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     ?_receive:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ?i1_receive:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     gsm_read_line2@flag:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x0
  1047  0070                     	ds	1
  1048  0071                     gsm_read_line2@buffer:	
  1049                           
  1050                           ; 1 bytes @ 0x1
  1051  0071                     	ds	1
  1052  0072                     gsm_read_line2@rec_data:	
  1053                           
  1054                           ; 1 bytes @ 0x2
  1055  0072                     	ds	1
  1056  0073                     ??_ISR:	
  1057                           
  1058                           ; 0 bytes @ 0x3
  1059  0073                     	ds	3
  1060  0076                     ??_eeprom_write:	
  1061  0076                     ??_DelayMs:	
  1062                           ; 0 bytes @ 0x6
  1063                           
  1064  0076                     ??_DelayS:	
  1065                           ; 0 bytes @ 0x6
  1066                           
  1067  0076                     ??_lcdport:	
  1068                           ; 0 bytes @ 0x6
  1069                           
  1070  0076                     ??_lcdcmd:	
  1071                           ; 0 bytes @ 0x6
  1072                           
  1073  0076                     ??_lcddata:	
  1074                           ; 0 bytes @ 0x6
  1075                           
  1076  0076                     ??_lcdstring:	
  1077                           ; 0 bytes @ 0x6
  1078                           
  1079  0076                     ??_receive:	
  1080                           ; 0 bytes @ 0x6
  1081                           
  1082  0076                     ??_transmit:	
  1083                           ; 0 bytes @ 0x6
  1084                           
  1085  0076                     ??_usartstring:	
  1086                           ; 0 bytes @ 0x6
  1087                           
  1088  0076                     ??_gsm_init:	
  1089                           ; 0 bytes @ 0x6
  1090                           
  1091  0076                     ??_RFID_read:	
  1092                           ; 0 bytes @ 0x6
  1093                           
  1094  0076                     ??_DisplayAmnt:	
  1095                           ; 0 bytes @ 0x6
  1096                           
  1097  0076                     ??_ReadAmnt:	
  1098                           ; 0 bytes @ 0x6
  1099                           
  1100  0076                     ??_ReadStock:	
  1101                           ; 0 bytes @ 0x6
  1102                           
  1103  0076                     ??_DisplayStock:	
  1104                           ; 0 bytes @ 0x6
  1105                           
  1106  0076                     ??_DisplaySugar:	
  1107                           ; 0 bytes @ 0x6
  1108                           
  1109  0076                     ??_DisplayRise:	
  1110                           ; 0 bytes @ 0x6
  1111                           
  1112  0076                     ??_DisplayKerosene:	
  1113                           ; 0 bytes @ 0x6
  1114                           
  1115  0076                     ??_uart_init:	
  1116                           ; 0 bytes @ 0x6
  1117                           
  1118  0076                     ??_paramter:	
  1119                           ; 0 bytes @ 0x6
  1120                           
  1121  0076                     ??_LoadStockToArray:	
  1122                           ; 0 bytes @ 0x6
  1123                           
  1124  0076                     ??_SendStock:	
  1125                           ; 0 bytes @ 0x6
  1126                           
  1127  0076                     ??___wmul:	
  1128                           ; 0 bytes @ 0x6
  1129                           
  1130  0076                     ??___lwdiv:	
  1131                           ; 0 bytes @ 0x6
  1132                           
  1133  0076                     ??___lwmod:	
  1134                           ; 0 bytes @ 0x6
  1135                           
  1136  0076                     ??___lbdiv:	
  1137                           ; 0 bytes @ 0x6
  1138                           
  1139  0076                     ??___awdiv:	
  1140                           ; 0 bytes @ 0x6
  1141                           
  1142  0076                     ??___awmod:	
  1143                           ; 0 bytes @ 0x6
  1144                           
  1145                           
  1146                           	psect	cstackBANK0
  1147  0053                     __pcstackBANK0:	
  1148                           ; 0 bytes @ 0x6
  1149                           
  1150  0053                     ??_eeprom_read:	
  1151  0053                     ??_enable:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0053                     ??_SoftWareUart_Init:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0053                     ??_softreceive:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0053                     ?___lbdiv:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0053                     ?___lbmod:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0053                     ?_strcmp:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0053                     ?_memcmp:	
  1170                           ; 2 bytes @ 0x0
  1171                           
  1172  0053                     ?___lwmod:	
  1173                           ; 2 bytes @ 0x0
  1174                           
  1175  0053                     ?___awmod:	
  1176                           ; 2 bytes @ 0x0
  1177                           
  1178  0053                     DelayMs@cnt:	
  1179                           ; 2 bytes @ 0x0
  1180                           
  1181  0053                     lcdport@a:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0053                     transmit@data:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0053                     strcmp@s2:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0053                     ___lbdiv@divisor:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0053                     ___lbmod@divisor:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0053                     memcmp@s1:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0053                     ___lwmod@divisor:	
  1200                           ; 2 bytes @ 0x0
  1201                           
  1202  0053                     ___awmod@divisor:	
  1203                           ; 2 bytes @ 0x0
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x0
  1207  0053                     	ds	1
  1208  0054                     ?_usartstring:	
  1209  0054                     ??___lbmod:	
  1210                           ; 0 bytes @ 0x1
  1211                           
  1212  0054                     DelayMs@i:	
  1213                           ; 0 bytes @ 0x1
  1214                           
  1215  0054                     softreceive@Data:	
  1216                           ; 1 bytes @ 0x1
  1217                           
  1218  0054                     ___lbdiv@dividend:	
  1219                           ; 1 bytes @ 0x1
  1220                           
  1221  0054                     usartstring@st:	
  1222                           ; 1 bytes @ 0x1
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x1
  1226  0054                     	ds	1
  1227  0055                     ??_strcmp:	
  1228  0055                     DelayS@cnt:	
  1229                           ; 0 bytes @ 0x2
  1230                           
  1231  0055                     lcdcmd@y:	
  1232                           ; 1 bytes @ 0x2
  1233                           
  1234  0055                     lcddata@y:	
  1235                           ; 1 bytes @ 0x2
  1236                           
  1237  0055                     softreceive@mask:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0055                     eeprom_read@addr:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0055                     memcmp@s2:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0055                     ___lbdiv@counter:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0055                     ___lbmod@dividend:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0055                     ___lwmod@dividend:	
  1253                           ; 1 bytes @ 0x2
  1254                           
  1255  0055                     ___awmod@dividend:	
  1256                           ; 2 bytes @ 0x2
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x2
  1260  0055                     	ds	1
  1261  0056                     ?___wmul:	
  1262  0056                     DelayS@i:	
  1263                           ; 2 bytes @ 0x3
  1264                           
  1265  0056                     lcdcmd@z:	
  1266                           ; 1 bytes @ 0x3
  1267                           
  1268  0056                     lcddata@z:	
  1269                           ; 1 bytes @ 0x3
  1270                           
  1271  0056                     ___lbdiv@quotient:	
  1272                           ; 1 bytes @ 0x3
  1273                           
  1274  0056                     ___lbmod@counter:	
  1275                           ; 1 bytes @ 0x3
  1276                           
  1277  0056                     RFID_read@i:	
  1278                           ; 1 bytes @ 0x3
  1279                           
  1280  0056                     memcmp@n:	
  1281                           ; 2 bytes @ 0x3
  1282                           
  1283  0056                     ___wmul@multiplier:	
  1284                           ; 2 bytes @ 0x3
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x3
  1288  0056                     	ds	1
  1289  0057                     lcdcmd@a:	
  1290  0057                     lcddata@a:	
  1291                           ; 1 bytes @ 0x4
  1292                           
  1293  0057                     strcmp@r:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296  0057                     ___lwmod@counter:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0057                     ___lbmod@rem:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302  0057                     ___awmod@counter:	
  1303                           ; 1 bytes @ 0x4
  1304                           
  1305                           
  1306                           ; 1 bytes @ 0x4
  1307  0057                     	ds	1
  1308  0058                     ??_memcmp:	
  1309  0058                     ??_lcd_init:	
  1310                           ; 0 bytes @ 0x5
  1311                           
  1312  0058                     ?_lcdstring:	
  1313                           ; 0 bytes @ 0x5
  1314                           
  1315  0058                     ?_DisplaySugar:	
  1316                           ; 0 bytes @ 0x5
  1317                           
  1318  0058                     ?_DisplayRise:	
  1319                           ; 0 bytes @ 0x5
  1320                           
  1321  0058                     ?_DisplayKerosene:	
  1322                           ; 0 bytes @ 0x5
  1323                           
  1324  0058                     ?___lwdiv:	
  1325                           ; 0 bytes @ 0x5
  1326                           
  1327  0058                     DisplaySugar@Sugar:	
  1328                           ; 2 bytes @ 0x5
  1329                           
  1330  0058                     DisplayRise@Rise:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333  0058                     DisplayKerosene@Kerosene:	
  1334                           ; 1 bytes @ 0x5
  1335                           
  1336  0058                     strcmp@s1:	
  1337                           ; 1 bytes @ 0x5
  1338                           
  1339  0058                     ___awmod@sign:	
  1340                           ; 1 bytes @ 0x5
  1341                           
  1342  0058                     lcdstring@a:	
  1343                           ; 1 bytes @ 0x5
  1344                           
  1345  0058                     ___wmul@multiplicand:	
  1346                           ; 2 bytes @ 0x5
  1347                           
  1348  0058                     ___lwdiv@divisor:	
  1349                           ; 2 bytes @ 0x5
  1350                           
  1351                           
  1352                           ; 2 bytes @ 0x5
  1353  0058                     	ds	1
  1354  0059                     ?___awdiv:	
  1355  0059                     DisplaySugar@Location:	
  1356                           ; 2 bytes @ 0x6
  1357                           
  1358  0059                     DisplayRise@Location:	
  1359                           ; 1 bytes @ 0x6
  1360                           
  1361  0059                     DisplayKerosene@Location:	
  1362                           ; 1 bytes @ 0x6
  1363                           
  1364  0059                     ___awdiv@divisor:	
  1365                           ; 1 bytes @ 0x6
  1366                           
  1367                           
  1368                           ; 2 bytes @ 0x6
  1369  0059                     	ds	1
  1370  005A                     ??_startup:	
  1371  005A                     ___wmul@product:	
  1372                           ; 0 bytes @ 0x7
  1373                           
  1374  005A                     ___lwdiv@dividend:	
  1375                           ; 2 bytes @ 0x7
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x7
  1379  005A                     	ds	1
  1380  005B                     ___awdiv@dividend:	
  1381                           
  1382                           ; 2 bytes @ 0x8
  1383  005B                     	ds	1
  1384  005C                     ___lwdiv@quotient:	
  1385                           
  1386                           ; 2 bytes @ 0x9
  1387  005C                     	ds	1
  1388  005D                     ___awdiv@counter:	
  1389                           
  1390                           ; 1 bytes @ 0xA
  1391  005D                     	ds	1
  1392  005E                     ___lwdiv@counter:	
  1393  005E                     ___awdiv@sign:	
  1394                           ; 1 bytes @ 0xB
  1395                           
  1396                           
  1397                           ; 1 bytes @ 0xB
  1398  005E                     	ds	1
  1399  005F                     ___awdiv@quotient:	
  1400  005F                     _LoadStockToArray$1128:	
  1401                           ; 2 bytes @ 0xC
  1402                           
  1403                           
  1404                           ; 2 bytes @ 0xC
  1405  005F                     	ds	2
  1406  0061                     ?_eeprom_write:	
  1407  0061                     ?_DisplayAmnt:	
  1408                           ; 0 bytes @ 0xE
  1409                           
  1410  0061                     eeprom_write@value:	
  1411                           ; 0 bytes @ 0xE
  1412                           
  1413  0061                     DisplayAmnt@Amnt:	
  1414                           ; 1 bytes @ 0xE
  1415                           
  1416                           
  1417                           ; 2 bytes @ 0xE
  1418  0061                     	ds	1
  1419  0062                     eeprom_write@addr:	
  1420                           
  1421                           ; 1 bytes @ 0xF
  1422  0062                     	ds	1
  1423  0063                     DisplayAmnt@Location:	
  1424                           
  1425                           ; 1 bytes @ 0x10
  1426  0063                     	ds	1
  1427  0064                     _DisplayAmnt$1127:	
  1428                           
  1429                           ; 2 bytes @ 0x11
  1430  0064                     	ds	2
  1431  0066                     ??_main:	
  1432                           
  1433                           ; 0 bytes @ 0x13
  1434  0066                     	ds	3
  1435                           
  1436                           	psect	maintext
  1437  03E8                     __pmaintext:	
  1438 ;;Data sizes: Strings 604, constant 11, data 39, bss 72, persistent 0 stack 0
  1439 ;;Auto spaces:   Size  Autos    Used
  1440 ;; COMMON          14      6       8
  1441 ;; BANK0           80     22      73
  1442 ;; BANK1           80      0      59
  1443 ;; BANK3           96      0       0
  1444 ;; BANK2           96      0       0
  1445 ;;
  1446 ;; Pointer list with targets:
  1447 ;; ?_memcmp	int  size(1) Largest target is 0
  1448 ;;
  1449 ;; ?_strcmp	int  size(1) Largest target is 0
  1450 ;;
  1451 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1452 ;;
  1453 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1454 ;;
  1455 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1456 ;;
  1457 ;; ?___awmod	int  size(1) Largest target is 0
  1458 ;;
  1459 ;; ?___awdiv	int  size(1) Largest target is 0
  1460 ;;
  1461 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 13
  1462 ;;		 -> User3(BANK1[13]), User2(BANK1[13]), User1(BANK1[13]), 
  1463 ;;
  1464 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 15
  1465 ;;		 -> card_store(BANK0[15]), 
  1466 ;;
  1467 ;; memcmp@s2	PTR const void  size(1) Largest target is 20
  1468 ;;		 -> sms(BANK1[20]), 
  1469 ;;
  1470 ;; memcmp@s1	PTR const void  size(2) Largest target is 6
  1471 ;;		 -> STR_48(CODE[6]), 
  1472 ;;
  1473 ;; gsm_read_line2@buffer	PTR unsigned char  size(1) Largest target is 20
  1474 ;;		 -> sms(BANK1[20]), 
  1475 ;;
  1476 ;; usartstring@st	PTR const unsigned char  size(2) Largest target is 29
  1477 ;;		 -> STR_33(CODE[5]), STR_32(CODE[16]), STR_31(CODE[5]), STR_30(CODE[13]), 
  1478 ;;		 -> STR_29(CODE[5]), STR_28(CODE[12]), STR_27(CODE[24]), KeroseneArray(BANK0[4]), 
  1479 ;;		 -> SugarArray(BANK0[4]), RiseArray(BANK0[5]), STR_18(CODE[20]), STR_17(CODE[24]), 
  1480 ;;		 -> STR_16(CODE[20]), STR_15(CODE[24]), STR_14(CODE[20]), STR_13(CODE[24]), 
  1481 ;;		 -> STR_12(CODE[29]), STR_11(CODE[24]), STR_10(CODE[27]), STR_9(CODE[24]), 
  1482 ;;		 -> STR_7(CODE[19]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[10]), 
  1483 ;;		 -> STR_3(CODE[4]), 
  1484 ;;
  1485 ;; lcdstring@a	PTR const unsigned char  size(2) Largest target is 22
  1486 ;;		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[21]), STR_44(CODE[21]), 
  1487 ;;		 -> STR_43(CODE[21]), STR_42(CODE[21]), STR_41(CODE[21]), STR_40(CODE[21]), 
  1488 ;;		 -> STR_39(CODE[21]), STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), 
  1489 ;;		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_26(CODE[18]), STR_25(CODE[18]), 
  1490 ;;		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[22]), STR_21(CODE[22]), 
  1491 ;;		 -> STR_20(CODE[21]), STR_19(CODE[21]), sms(BANK1[20]), STR_8(CODE[10]), 
  1492 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1493 ;;
  1494 ;;
  1495 ;; Critical Paths under _main in COMMON
  1496 ;;
  1497 ;;   None.
  1498 ;;
  1499 ;; Critical Paths under _ISR in COMMON
  1500 ;;
  1501 ;;   _ISR->_gsm_read_line2
  1502 ;;
  1503 ;; Critical Paths under _main in BANK0
  1504 ;;
  1505 ;;   _main->_DisplayAmnt
  1506 ;;   _startup->_lcdstring
  1507 ;;   _DisplayStock->_DisplayAmnt
  1508 ;;   _gsm_init->_lcdstring
  1509 ;;   _DisplayKerosene->_lcdcmd
  1510 ;;   _DisplayKerosene->_lcddata
  1511 ;;   _DisplayKerosene->___lbmod
  1512 ;;   _DisplayRise->_lcdcmd
  1513 ;;   _DisplayRise->_lcddata
  1514 ;;   _DisplayRise->___lbmod
  1515 ;;   _DisplaySugar->_lcdcmd
  1516 ;;   _DisplaySugar->_lcddata
  1517 ;;   _DisplaySugar->___lbmod
  1518 ;;   _DisplayAmnt->___awdiv
  1519 ;;   _lcdstring->_lcddata
  1520 ;;   _lcd_init->_lcdcmd
  1521 ;;   _SendStock->_usartstring
  1522 ;;   _RFID_read->_softreceive
  1523 ;;   _lcddata->_enable
  1524 ;;   _lcdcmd->_enable
  1525 ;;   _LoadStockToArray->___lwdiv
  1526 ;;   _paramter->___wmul
  1527 ;;   _ReadStock->___wmul
  1528 ;;   _ReadAmnt->___wmul
  1529 ;;   _usartstring->_transmit
  1530 ;;   _DelayS->_DelayMs
  1531 ;;   ___awdiv->___awmod
  1532 ;;   ___lwdiv->___lwmod
  1533 ;;   ___wmul->_eeprom_read
  1534 ;;   _eeprom_write->___awdiv
  1535 ;;
  1536 ;; Critical Paths under _ISR in BANK0
  1537 ;;
  1538 ;;   None.
  1539 ;;
  1540 ;; Critical Paths under _main in BANK1
  1541 ;;
  1542 ;;   None.
  1543 ;;
  1544 ;; Critical Paths under _ISR in BANK1
  1545 ;;
  1546 ;;   None.
  1547 ;;
  1548 ;; Critical Paths under _main in BANK3
  1549 ;;
  1550 ;;   None.
  1551 ;;
  1552 ;; Critical Paths under _ISR in BANK3
  1553 ;;
  1554 ;;   None.
  1555 ;;
  1556 ;; Critical Paths under _main in BANK2
  1557 ;;
  1558 ;;   None.
  1559 ;;
  1560 ;; Critical Paths under _ISR in BANK2
  1561 ;;
  1562 ;;   None.
  1563 ;;
  1564 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1565 ;;
  1566 ;;
  1567 ;;Call Graph Tables:
  1568 ;;
  1569 ;; ---------------------------------------------------------------------------------
  1570 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (0) _main                                                 3     3      0   12020
  1573 ;;                                             19 BANK0      3     3      0
  1574 ;;                          _uart_init
  1575 ;;                           _lcd_init
  1576 ;;                           _paramter
  1577 ;;                  _SoftWareUart_Init
  1578 ;;                            _startup
  1579 ;;                           _gsm_init
  1580 ;;                          _ReadStock
  1581 ;;                          _lcdstring
  1582 ;;                             _lcdcmd
  1583 ;;                          _RFID_read
  1584 ;;                             _strcmp
  1585 ;;                           _ReadAmnt
  1586 ;;                        _DisplayAmnt
  1587 ;;                        _DisplayRise
  1588 ;;                       _DisplaySugar
  1589 ;;                    _DisplayKerosene
  1590 ;;                            ___lwdiv
  1591 ;;                       _eeprom_write
  1592 ;;                            ___lwmod
  1593 ;;                            ___awdiv
  1594 ;;                            ___awmod
  1595 ;;                   _LoadStockToArray
  1596 ;;                       _DisplayStock
  1597 ;;                             _memcmp
  1598 ;;                          _SendStock
  1599 ;; ---------------------------------------------------------------------------------
  1600 ;; (1) _startup                                              3     3      0     585
  1601 ;;                                              7 BANK0      3     3      0
  1602 ;;                             _lcdcmd
  1603 ;;                          _lcdstring
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (1) _DisplayStock                                         0     0      0    2027
  1606 ;;                             _lcdcmd
  1607 ;;                          _lcdstring
  1608 ;;                        _DisplayAmnt
  1609 ;; ---------------------------------------------------------------------------------
  1610 ;; (1) _gsm_init                                             1     1      0     842
  1611 ;;                             _lcdcmd
  1612 ;;                          _lcdstring
  1613 ;;                             _DelayS
  1614 ;;                        _usartstring
  1615 ;;                           _transmit
  1616 ;;                            _receive
  1617 ;; ---------------------------------------------------------------------------------
  1618 ;; (1) _DisplayKerosene                                      2     1      1    1086
  1619 ;;                                              5 BANK0      2     1      1
  1620 ;;                             _lcdcmd
  1621 ;;                            ___lbdiv
  1622 ;;                            _lcddata
  1623 ;;                            ___lbmod
  1624 ;; ---------------------------------------------------------------------------------
  1625 ;; (1) _DisplayRise                                          2     1      1    1086
  1626 ;;                                              5 BANK0      2     1      1
  1627 ;;                             _lcdcmd
  1628 ;;                            ___lbdiv
  1629 ;;                            _lcddata
  1630 ;;                            ___lbmod
  1631 ;; ---------------------------------------------------------------------------------
  1632 ;; (1) _DisplaySugar                                         2     1      1    1086
  1633 ;;                                              5 BANK0      2     1      1
  1634 ;;                             _lcdcmd
  1635 ;;                            ___lbdiv
  1636 ;;                            _lcddata
  1637 ;;                            ___lbmod
  1638 ;; ---------------------------------------------------------------------------------
  1639 ;; (2) _DisplayAmnt                                          5     3      2    1442
  1640 ;;                                             14 BANK0      5     3      2
  1641 ;;                             _lcdcmd
  1642 ;;                            ___awdiv
  1643 ;;                            _lcddata
  1644 ;;                            ___awmod
  1645 ;; ---------------------------------------------------------------------------------
  1646 ;; (2) _lcdstring                                            2     0      2     325
  1647 ;;                                              5 BANK0      2     0      2
  1648 ;;                            _lcddata
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (1) _lcd_init                                             2     2      0     384
  1651 ;;                                              5 BANK0      2     2      0
  1652 ;;                            _lcdport
  1653 ;;                             _lcdcmd
  1654 ;; ---------------------------------------------------------------------------------
  1655 ;; (1) _SendStock                                            1     1      0     127
  1656 ;;                        _usartstring
  1657 ;;                           _transmit
  1658 ;;                            _receive
  1659 ;; ---------------------------------------------------------------------------------
  1660 ;; (1) _RFID_read                                            2     2      0     235
  1661 ;;                                              3 BANK0      2     2      0
  1662 ;;                        _softreceive
  1663 ;; ---------------------------------------------------------------------------------
  1664 ;; (3) _lcddata                                              3     3      0     260
  1665 ;;                                              2 BANK0      3     3      0
  1666 ;;                            _lcdport
  1667 ;;                             _enable
  1668 ;; ---------------------------------------------------------------------------------
  1669 ;; (3) _lcdcmd                                               3     3      0     260
  1670 ;;                                              2 BANK0      3     3      0
  1671 ;;                            _lcdport
  1672 ;;                             _enable
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (1) _LoadStockToArray                                     6     6      0     700
  1675 ;;                                             12 BANK0      2     2      0
  1676 ;;                            ___lwdiv
  1677 ;;                            ___lwmod
  1678 ;; ---------------------------------------------------------------------------------
  1679 ;; (1) _paramter                                             0     0      0     123
  1680 ;;                        _eeprom_read
  1681 ;;                             ___wmul
  1682 ;; ---------------------------------------------------------------------------------
  1683 ;; (1) _ReadStock                                            0     0      0     123
  1684 ;;                        _eeprom_read
  1685 ;;                             ___wmul
  1686 ;; ---------------------------------------------------------------------------------
  1687 ;; (1) _ReadAmnt                                             0     0      0     123
  1688 ;;                        _eeprom_read
  1689 ;;                             ___wmul
  1690 ;; ---------------------------------------------------------------------------------
  1691 ;; (2) _usartstring                                          2     0      2      96
  1692 ;;                                              1 BANK0      2     0      2
  1693 ;;                           _transmit
  1694 ;; ---------------------------------------------------------------------------------
  1695 ;; (2) _softreceive                                          3     3      0     136
  1696 ;;                                              0 BANK0      3     3      0
  1697 ;; ---------------------------------------------------------------------------------
  1698 ;; (1) _SoftWareUart_Init                                    1     1      0       0
  1699 ;;                                              0 BANK0      1     1      0
  1700 ;; ---------------------------------------------------------------------------------
  1701 ;; (4) _enable                                               2     2      0       0
  1702 ;;                                              0 BANK0      2     2      0
  1703 ;; ---------------------------------------------------------------------------------
  1704 ;; (2) _DelayS                                               2     2      0     130
  1705 ;;                                              2 BANK0      2     2      0
  1706 ;;                            _DelayMs
  1707 ;; ---------------------------------------------------------------------------------
  1708 ;; (3) ___awmod                                              6     2      4     433
  1709 ;;                                              0 BANK0      6     2      4
  1710 ;; ---------------------------------------------------------------------------------
  1711 ;; (3) ___awdiv                                              8     4      4     300
  1712 ;;                                              6 BANK0      8     4      4
  1713 ;;                            ___awmod (ARG)
  1714 ;; ---------------------------------------------------------------------------------
  1715 ;; (2) ___lbmod                                              5     4      1     232
  1716 ;;                                              0 BANK0      5     4      1
  1717 ;; ---------------------------------------------------------------------------------
  1718 ;; (2) ___lbdiv                                              4     3      1     241
  1719 ;;                                              0 BANK0      4     3      1
  1720 ;; ---------------------------------------------------------------------------------
  1721 ;; (2) ___lwmod                                              5     1      4     232
  1722 ;;                                              0 BANK0      5     1      4
  1723 ;; ---------------------------------------------------------------------------------
  1724 ;; (2) ___lwdiv                                              7     3      4     162
  1725 ;;                                              5 BANK0      7     3      4
  1726 ;;                            ___lwmod (ARG)
  1727 ;; ---------------------------------------------------------------------------------
  1728 ;; (2) ___wmul                                               6     2      4      92
  1729 ;;                                              3 BANK0      6     2      4
  1730 ;;                        _eeprom_read (ARG)
  1731 ;; ---------------------------------------------------------------------------------
  1732 ;; (1) _memcmp                                               6     1      5     168
  1733 ;;                                              0 BANK0      6     1      5
  1734 ;; ---------------------------------------------------------------------------------
  1735 ;; (1) _eeprom_write                                         2     1      1      44
  1736 ;;                                             14 BANK0      2     1      1
  1737 ;;                            ___lwdiv (ARG)
  1738 ;;                            ___lwmod (ARG)
  1739 ;;                            ___awdiv (ARG)
  1740 ;;                            ___awmod (ARG)
  1741 ;; ---------------------------------------------------------------------------------
  1742 ;; (1) _strcmp                                               6     4      2     127
  1743 ;;                                              0 BANK0      6     4      2
  1744 ;; ---------------------------------------------------------------------------------
  1745 ;; (1) _uart_init                                            0     0      0       0
  1746 ;; ---------------------------------------------------------------------------------
  1747 ;; (2) _eeprom_read                                          3     3      0      31
  1748 ;;                                              0 BANK0      3     3      0
  1749 ;; ---------------------------------------------------------------------------------
  1750 ;; (2) _transmit                                             1     1      0      31
  1751 ;;                                              0 BANK0      1     1      0
  1752 ;; ---------------------------------------------------------------------------------
  1753 ;; (2) _receive                                              0     0      0       0
  1754 ;; ---------------------------------------------------------------------------------
  1755 ;; (4) _lcdport                                              1     1      0     124
  1756 ;;                                              0 BANK0      1     1      0
  1757 ;; ---------------------------------------------------------------------------------
  1758 ;; (3) _DelayMs                                              2     2      0      65
  1759 ;;                                              0 BANK0      2     2      0
  1760 ;; ---------------------------------------------------------------------------------
  1761 ;; Estimated maximum stack depth 4
  1762 ;; ---------------------------------------------------------------------------------
  1763 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1764 ;; ---------------------------------------------------------------------------------
  1765 ;; (5) _ISR                                                  3     3      0     138
  1766 ;;                                              3 COMMON     3     3      0
  1767 ;;                     _gsm_read_line2
  1768 ;; ---------------------------------------------------------------------------------
  1769 ;; (6) _gsm_read_line2                                       3     3      0     138
  1770 ;;                                              0 COMMON     3     3      0
  1771 ;;                          i1_receive
  1772 ;; ---------------------------------------------------------------------------------
  1773 ;; (7) i1_receive                                            0     0      0       0
  1774 ;; ---------------------------------------------------------------------------------
  1775 ;; Estimated maximum stack depth 7
  1776 ;; ---------------------------------------------------------------------------------
  1777 ;; Call Graph Graphs:
  1778 ;; _main (ROOT)
  1779 ;;   _uart_init
  1780 ;;   _lcd_init
  1781 ;;     _lcdport
  1782 ;;     _lcdcmd
  1783 ;;       _lcdport
  1784 ;;       _enable
  1785 ;;   _paramter
  1786 ;;     _eeprom_read
  1787 ;;     ___wmul
  1788 ;;       _eeprom_read (ARG)
  1789 ;;   _SoftWareUart_Init
  1790 ;;   _startup
  1791 ;;     _lcdcmd
  1792 ;;       _lcdport
  1793 ;;       _enable
  1794 ;;     _lcdstring
  1795 ;;       _lcddata
  1796 ;;         _lcdport
  1797 ;;         _enable
  1798 ;;   _gsm_init
  1799 ;;     _lcdcmd
  1800 ;;       _lcdport
  1801 ;;       _enable
  1802 ;;     _lcdstring
  1803 ;;       _lcddata
  1804 ;;         _lcdport
  1805 ;;         _enable
  1806 ;;     _DelayS
  1807 ;;       _DelayMs
  1808 ;;     _usartstring
  1809 ;;       _transmit
  1810 ;;     _transmit
  1811 ;;     _receive
  1812 ;;   _ReadStock
  1813 ;;     _eeprom_read
  1814 ;;     ___wmul
  1815 ;;       _eeprom_read (ARG)
  1816 ;;   _lcdstring
  1817 ;;     _lcddata
  1818 ;;       _lcdport
  1819 ;;       _enable
  1820 ;;   _lcdcmd
  1821 ;;     _lcdport
  1822 ;;     _enable
  1823 ;;   _RFID_read
  1824 ;;     _softreceive
  1825 ;;   _strcmp
  1826 ;;   _ReadAmnt
  1827 ;;     _eeprom_read
  1828 ;;     ___wmul
  1829 ;;       _eeprom_read (ARG)
  1830 ;;   _DisplayAmnt
  1831 ;;     _lcdcmd
  1832 ;;       _lcdport
  1833 ;;       _enable
  1834 ;;     ___awdiv
  1835 ;;       ___awmod (ARG)
  1836 ;;     _lcddata
  1837 ;;       _lcdport
  1838 ;;       _enable
  1839 ;;     ___awmod
  1840 ;;   _DisplayRise
  1841 ;;     _lcdcmd
  1842 ;;       _lcdport
  1843 ;;       _enable
  1844 ;;     ___lbdiv
  1845 ;;     _lcddata
  1846 ;;       _lcdport
  1847 ;;       _enable
  1848 ;;     ___lbmod
  1849 ;;   _DisplaySugar
  1850 ;;     _lcdcmd
  1851 ;;       _lcdport
  1852 ;;       _enable
  1853 ;;     ___lbdiv
  1854 ;;     _lcddata
  1855 ;;       _lcdport
  1856 ;;       _enable
  1857 ;;     ___lbmod
  1858 ;;   _DisplayKerosene
  1859 ;;     _lcdcmd
  1860 ;;       _lcdport
  1861 ;;       _enable
  1862 ;;     ___lbdiv
  1863 ;;     _lcddata
  1864 ;;       _lcdport
  1865 ;;       _enable
  1866 ;;     ___lbmod
  1867 ;;   ___lwdiv
  1868 ;;     ___lwmod (ARG)
  1869 ;;   _eeprom_write
  1870 ;;     ___lwdiv (ARG)
  1871 ;;       ___lwmod (ARG)
  1872 ;;     ___lwmod (ARG)
  1873 ;;     ___awdiv (ARG)
  1874 ;;       ___awmod (ARG)
  1875 ;;     ___awmod (ARG)
  1876 ;;   ___lwmod
  1877 ;;   ___awdiv
  1878 ;;     ___awmod (ARG)
  1879 ;;   ___awmod
  1880 ;;   _LoadStockToArray
  1881 ;;     ___lwdiv
  1882 ;;       ___lwmod (ARG)
  1883 ;;     ___lwmod
  1884 ;;   _DisplayStock
  1885 ;;     _lcdcmd
  1886 ;;       _lcdport
  1887 ;;       _enable
  1888 ;;     _lcdstring
  1889 ;;       _lcddata
  1890 ;;         _lcdport
  1891 ;;         _enable
  1892 ;;     _DisplayAmnt
  1893 ;;       _lcdcmd
  1894 ;;         _lcdport
  1895 ;;         _enable
  1896 ;;       ___awdiv
  1897 ;;         ___awmod (ARG)
  1898 ;;       _lcddata
  1899 ;;         _lcdport
  1900 ;;         _enable
  1901 ;;       ___awmod
  1902 ;;   _memcmp
  1903 ;;   _SendStock
  1904 ;;     _usartstring
  1905 ;;       _transmit
  1906 ;;     _transmit
  1907 ;;     _receive
  1908 ;;
  1909 ;; _ISR (ROOT)
  1910 ;;   _gsm_read_line2
  1911 ;;     i1_receive
  1912 ;;
  1913 ;; Address spaces:
  1914 ;;Name               Size   Autos  Total    Cost      Usage
  1915 ;;BANK3               60      0       0       9        0.0%
  1916 ;;BITBANK3            60      0       0       8        0.0%
  1917 ;;SFR3                 0      0       0       4        0.0%
  1918 ;;BITSFR3              0      0       0       4        0.0%
  1919 ;;BANK2               60      0       0      11        0.0%
  1920 ;;BITBANK2            60      0       0      10        0.0%
  1921 ;;SFR2                 0      0       0       5        0.0%
  1922 ;;BITSFR2              0      0       0       5        0.0%
  1923 ;;SFR1                 0      0       0       2        0.0%
  1924 ;;BITSFR1              0      0       0       2        0.0%
  1925 ;;BANK1               50      0      3B       7       73.8%
  1926 ;;BITBANK1            50      0       0       6        0.0%
  1927 ;;CODE                 0      0       0       0        0.0%
  1928 ;;DATA                 0      0      96      12        0.0%
  1929 ;;ABS                  0      0      8C       3        0.0%
  1930 ;;NULL                 0      0       0       0        0.0%
  1931 ;;STACK                0      0       A       2        0.0%
  1932 ;;BANK0               50     16      49       5       91.3%
  1933 ;;BITBANK0            50      0       0       4        0.0%
  1934 ;;SFR0                 0      0       0       1        0.0%
  1935 ;;BITSFR0              0      0       0       1        0.0%
  1936 ;;COMMON               E      6       8       1       57.1%
  1937 ;;BITCOMMON            E      0       1       0        7.1%
  1938 ;;EEDATA             100      0       0       0        0.0%
  1939                           
  1940                           
  1941 ;; *************** function _main *****************
  1942 ;; Defined at:
  1943 ;;		line 212 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 17F/0
  1954 ;;		On exit  : 60/20
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0
  1959 ;;      Temps:          0       3       0       0       0
  1960 ;;      Totals:         0       3       0       0       0
  1961 ;;Total ram usage:        3 bytes
  1962 ;; Hardware stack levels required when called:    7
  1963 ;; This function calls:
  1964 ;;		_uart_init
  1965 ;;		_lcd_init
  1966 ;;		_paramter
  1967 ;;		_SoftWareUart_Init
  1968 ;;		_startup
  1969 ;;		_gsm_init
  1970 ;;		_ReadStock
  1971 ;;		_lcdstring
  1972 ;;		_lcdcmd
  1973 ;;		_RFID_read
  1974 ;;		_strcmp
  1975 ;;		_ReadAmnt
  1976 ;;		_DisplayAmnt
  1977 ;;		_DisplayRise
  1978 ;;		_DisplaySugar
  1979 ;;		_DisplayKerosene
  1980 ;;		___lwdiv
  1981 ;;		_eeprom_write
  1982 ;;		___lwmod
  1983 ;;		___awdiv
  1984 ;;		___awmod
  1985 ;;		_LoadStockToArray
  1986 ;;		_DisplayStock
  1987 ;;		_memcmp
  1988 ;;		_SendStock
  1989 ;; This function is called by:
  1990 ;;		Startup code after reset
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993  03E8                     _main:	
  1994                           
  1995                           ;Main.c: 213: ANSEL=0x00;
  1996                           
  1997                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1998  03E8  1683               	bsf	3,5	;RP0=1, select bank3
  1999  03E9  1703               	bsf	3,6	;RP1=1, select bank3
  2000  03EA  0188               	clrf	8	;volatile
  2001                           
  2002                           ;Main.c: 214: ANSELH=0x00;
  2003  03EB  0189               	clrf	9	;volatile
  2004                           
  2005                           ;Main.c: 215: TRISD=0X01;
  2006  03EC  3001               	movlw	1
  2007  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2008  03EE  0088               	movwf	8	;volatile
  2009                           
  2010                           ;Main.c: 216: PORTD=0X00;
  2011  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2012  03F0  0188               	clrf	8	;volatile
  2013                           
  2014                           ;Main.c: 217: TRISC=0X8F;
  2015  03F1  308F               	movlw	143
  2016  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2017  03F3  0087               	movwf	7	;volatile
  2018                           
  2019                           ;Main.c: 218: PORTC=0X00;
  2020  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2021  03F5  0187               	clrf	7	;volatile
  2022                           
  2023                           ;Main.c: 219: INTCON=0xC0;
  2024  03F6  30C0               	movlw	192
  2025  03F7  008B               	movwf	11	;volatile
  2026                           
  2027                           ;Main.c: 220: uart_init();
  2028  03F8  120A  158A  242E   	fcall	_uart_init
      +       120A  118A         
  2029                           
  2030                           ;Main.c: 221: lcd_init();
  2031  03FD  120A  118A  21E7   	fcall	_lcd_init
      +       120A  118A         
  2032                           
  2033                           ;Main.c: 222: paramter();
  2034  0402  120A  158A  2544   	fcall	_paramter
      +       120A  118A         
  2035                           
  2036                           ;Main.c: 223: SoftWareUart_Init();
  2037  0407  120A  158A  2420   	fcall	_SoftWareUart_Init
      +       120A  118A         
  2038                           
  2039                           ;Main.c: 224: startup();
  2040  040C  120A  118A  2191   	fcall	_startup
      +       120A  118A         
  2041                           
  2042                           ;Main.c: 225: gsm_init();
  2043  0411  120A  118A  20FE   	fcall	_gsm_init
      +       120A  118A         
  2044                           
  2045                           ;Main.c: 226: PIE1=0x20;
  2046  0416  3020               	movlw	32
  2047  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0418  008C               	movwf	12	;volatile
  2049  0419                     l4670:	
  2050                           
  2051                           ;Main.c: 229: {
  2052                           ;Main.c: 230: ReadStock();
  2053  0419  120A  158A  255E   	fcall	_ReadStock
      +       120A  118A         
  2054                           
  2055                           ;Main.c: 231: if(!RC0)
  2056  041E  1807               	btfsc	7,0
  2057  041F  2C45               	goto	l4684
  2058                           
  2059                           ;Main.c: 232: {
  2060                           ;Main.c: 233: lcdstring("PLEASE TAP YOUR  ");
  2061  0420  30CC               	movlw	low (STR_25| (0+32768))
  2062  0421  00D8               	movwf	?_lcdstring
  2063  0422  3091               	movlw	high (STR_25| (0+32768))
  2064  0423  00D9               	movwf	?_lcdstring+1
  2065  0424  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2066                           
  2067                           ;Main.c: 234: lcdcmd(0xC0);
  2068  0429  30C0               	movlw	192
  2069  042A  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2070                           
  2071                           ;Main.c: 235: lcdstring("SMART CARD       ");
  2072  042F  30A8               	movlw	low (STR_26| (0+32768))
  2073  0430  00D8               	movwf	?_lcdstring
  2074  0431  3091               	movlw	high (STR_26| (0+32768))
  2075  0432  00D9               	movwf	?_lcdstring+1
  2076  0433  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2077                           
  2078                           ;Main.c: 236: _delay((unsigned long)((200)*(20000000/4000.0)));
  2079  0438  3006               	movlw	6
  2080  0439  00E8               	movwf	??_main+2
  2081  043A  300E               	movlw	14
  2082  043B  00E7               	movwf	??_main+1
  2083  043C  30B0               	movlw	176
  2084  043D  00E6               	movwf	??_main
  2085  043E                     u2107:	
  2086  043E  0BE6               	decfsz	??_main,f
  2087  043F  2C3E               	goto	u2107
  2088  0440  0BE7               	decfsz	??_main+1,f
  2089  0441  2C3E               	goto	u2107
  2090  0442  0BE8               	decfsz	??_main+2,f
  2091  0443  2C3E               	goto	u2107
  2092                           
  2093                           ;Main.c: 237: rfid_flag=0;
  2094  0444  1076               	bcf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  2095  0445                     l4684:	
  2096                           
  2097                           ;Main.c: 238: }
  2098                           ;Main.c: 239: RFID_read();
  2099  0445  120A  118A  27BC   	fcall	_RFID_read
      +       120A  118A         
  2100                           
  2101                           ;Main.c: 240: lcdcmd(0xD4);
  2102  044A  30D4               	movlw	212
  2103  044B  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2104                           
  2105                           ;Main.c: 241: lcdstring(sms);
  2106  0450  30C7               	movlw	_sms& (0+255)
  2107  0451  00D8               	movwf	?_lcdstring
  2108  0452  01D9               	clrf	?_lcdstring+1
  2109  0453  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2110                           
  2111                           ;Main.c: 244: if(strcmp(card_store,User1)==0)
  2112  0458  30A0               	movlw	_User1& (0+255)
  2113  0459  00D3               	movwf	?_strcmp
  2114  045A  3037               	movlw	_card_store& (0+255)
  2115  045B  120A  158A  244F   	fcall	_strcmp
      +       120A  118A         
  2116  0460  0854               	movf	?_strcmp+1,w
  2117  0461  0453               	iorwf	?_strcmp,w
  2118  0462  1D03               	skipz
  2119  0463  2C69               	goto	l4696
  2120                           
  2121                           ;Main.c: 245: {
  2122                           ;Main.c: 246: User=1;
  2123  0464  01A6               	clrf	_User
  2124  0465  0AA6               	incf	_User,f
  2125  0466                     L1:	
  2126  0466  01A7               	clrf	_User+1
  2127                           
  2128                           ;Main.c: 247: card_store[0]=0;
  2129  0467  01B7               	clrf	_card_store
  2130                           
  2131                           ;Main.c: 248: }
  2132  0468  2F74               	goto	l4848
  2133  0469                     l4696:	
  2134                           
  2135                           ;Main.c: 249: else if(strcmp(card_store,User2)==0)
  2136  0469  30AD               	movlw	_User2& (0+255)
  2137  046A  00D3               	movwf	?_strcmp
  2138  046B  3037               	movlw	_card_store& (0+255)
  2139  046C  120A  158A  244F   	fcall	_strcmp
      +       120A  118A         
  2140  0471  0854               	movf	?_strcmp+1,w
  2141  0472  0453               	iorwf	?_strcmp,w
  2142  0473  1D03               	skipz
  2143  0474  2C77               	goto	l4702
  2144                           
  2145                           ;Main.c: 250: {
  2146                           ;Main.c: 251: User=2;
  2147  0475  3002               	movlw	2
  2148  0476  2C84               	goto	L3
  2149  0477                     l4702:	
  2150                           
  2151                           ;Main.c: 254: else if(strcmp(card_store,User3)==0)
  2152  0477  30BA               	movlw	_User3& (0+255)
  2153  0478  00D3               	movwf	?_strcmp
  2154  0479  3037               	movlw	_card_store& (0+255)
  2155  047A  120A  158A  244F   	fcall	_strcmp
      +       120A  118A         
  2156  047F  0854               	movf	?_strcmp+1,w
  2157  0480  0453               	iorwf	?_strcmp,w
  2158  0481  1D03               	skipz
  2159  0482  2F74               	goto	l4848
  2160                           
  2161                           ;Main.c: 255: {
  2162                           ;Main.c: 256: User=3;
  2163  0483  3003               	movlw	3
  2164  0484                     L3:	
  2165  0484  00A6               	movwf	_User
  2166  0485  2C66               	goto	L1
  2167  0486                     l4708:	
  2168                           ;Main.c: 258: }
  2169                           ;Main.c: 260: switch(User)
  2170                           
  2171                           
  2172                           ;Main.c: 263: {
  2173                           ;Main.c: 264: ReadAmnt();
  2174  0486  120A  158A  2581   	fcall	_ReadAmnt
      +       120A  118A         
  2175                           
  2176                           ;Main.c: 265: lcdcmd(0x80);
  2177  048B  3080               	movlw	128
  2178  048C  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2179                           
  2180                           ;Main.c: 266: lcdstring("USER1 AMOUNT:       ");
  2181  0491  30DB               	movlw	low (STR_36| (0+32768))
  2182  0492  00D8               	movwf	?_lcdstring
  2183  0493  3090               	movlw	high (STR_36| (0+32768))
  2184  0494  00D9               	movwf	?_lcdstring+1
  2185  0495  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2186                           
  2187                           ;Main.c: 267: DisplayAmnt(0X8D,User1amt);
  2188  049A  0829               	movf	_User1amt+1,w
  2189  049B  00E2               	movwf	?_DisplayAmnt+1
  2190  049C  0828               	movf	_User1amt,w
  2191  049D  00E1               	movwf	?_DisplayAmnt
  2192  049E  308D               	movlw	141
  2193  049F  120A  118A  2275   	fcall	_DisplayAmnt
      +       120A  118A         
  2194                           
  2195                           ;Main.c: 268: lcdcmd(0xC0);
  2196  04A4  30C0               	movlw	192
  2197  04A5  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2198                           
  2199                           ;Main.c: 269: lcdstring("RISE:   Kg          ");
  2200  04AA  30B1               	movlw	low (STR_37| (0+32768))
  2201  04AB  00D8               	movwf	?_lcdstring
  2202  04AC  3090               	movlw	high (STR_37| (0+32768))
  2203  04AD  00D9               	movwf	?_lcdstring+1
  2204  04AE  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2205                           
  2206                           ;Main.c: 270: DisplayRise(0XC5,User1Rise);
  2207  04B3  082F               	movf	_User1Rise,w
  2208  04B4  00D8               	movwf	?_DisplayRise
  2209  04B5  30C5               	movlw	197
  2210  04B6  120A  158A  265E   	fcall	_DisplayRise
      +       120A  118A         
  2211                           
  2212                           ;Main.c: 271: lcdcmd(0x94);
  2213  04BB  3094               	movlw	148
  2214  04BC  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2215                           
  2216                           ;Main.c: 272: lcdstring("SUGAR:   Kg         ");
  2217  04C1  30C6               	movlw	low (STR_38| (0+32768))
  2218  04C2  00D8               	movwf	?_lcdstring
  2219  04C3  3090               	movlw	high (STR_38| (0+32768))
  2220  04C4  00D9               	movwf	?_lcdstring+1
  2221  04C5  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2222                           
  2223                           ;Main.c: 273: DisplaySugar(0x9A,User1Sugar);
  2224  04CA  0830               	movf	_User1Sugar,w
  2225  04CB  00D8               	movwf	?_DisplaySugar
  2226  04CC  309A               	movlw	154
  2227  04CD  120A  118A  2011   	fcall	_DisplaySugar
      +       120A  118A         
  2228                           
  2229                           ;Main.c: 274: lcdcmd(0xD4);
  2230  04D2  30D4               	movlw	212
  2231  04D3  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2232                           
  2233                           ;Main.c: 275: lcdstring("KEROSENE:   Lts     ");
  2234  04D8  302F               	movlw	low (STR_39| (0+32768))
  2235  04D9  00D8               	movwf	?_lcdstring
  2236  04DA  3091               	movlw	high (STR_39| (0+32768))
  2237  04DB  00D9               	movwf	?_lcdstring+1
  2238  04DC  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2239                           
  2240                           ;Main.c: 276: DisplayKerosene(0XDD,User1Kerosene);
  2241  04E1  082E               	movf	_User1Kerosene,w
  2242  04E2  00D8               	movwf	?_DisplayKerosene
  2243  04E3  30DD               	movlw	221
  2244  04E4  120A  158A  2636   	fcall	_DisplayKerosene
      +       120A  118A         
  2245                           
  2246                           ;Main.c: 277: RiseStock=RiseStock-User1Rise;
  2247  04E9  082F               	movf	_User1Rise,w
  2248  04EA  02A2               	subwf	_RiseStock,f
  2249  04EB  1C03               	skipc
  2250  04EC  03A3               	decf	_RiseStock+1,f
  2251                           
  2252                           ;Main.c: 278: SugarStock=SugarStock-User1Sugar;
  2253  04ED  0830               	movf	_User1Sugar,w
  2254  04EE  02A4               	subwf	_SugarStock,f
  2255  04EF  1C03               	skipc
  2256  04F0  03A5               	decf	_SugarStock+1,f
  2257                           
  2258                           ;Main.c: 279: KeroseneStock=KeroseneStock-User1Kerosene;
  2259  04F1  082E               	movf	_User1Kerosene,w
  2260  04F2  02A0               	subwf	_KeroseneStock,f
  2261  04F3  1C03               	skipc
  2262  04F4  03A1               	decf	_KeroseneStock+1,f
  2263                           
  2264                           ;Main.c: 280: eeprom_write(24,RiseStock/100);
  2265  04F5  3064               	movlw	100
  2266  04F6  00D8               	movwf	?___lwdiv
  2267  04F7  01D9               	clrf	?___lwdiv+1
  2268  04F8  0823               	movf	_RiseStock+1,w
  2269  04F9  00DB               	movwf	?___lwdiv+3
  2270  04FA  0822               	movf	_RiseStock,w
  2271  04FB  00DA               	movwf	?___lwdiv+2
  2272  04FC  120A  158A  27A2   	fcall	___lwdiv
      +       120A  118A         
  2273  0501  0858               	movf	?___lwdiv,w
  2274  0502  00E1               	movwf	?_eeprom_write
  2275  0503  3018               	movlw	24
  2276  0504  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2277                           
  2278                           ;Main.c: 281: eeprom_write(25,RiseStock%100);
  2279  0509  3064               	movlw	100
  2280  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2281  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2282  050C  00D3               	movwf	?___lwmod
  2283  050D  01D4               	clrf	?___lwmod+1
  2284  050E  0823               	movf	_RiseStock+1,w
  2285  050F  00D6               	movwf	?___lwmod+3
  2286  0510  0822               	movf	_RiseStock,w
  2287  0511  00D5               	movwf	?___lwmod+2
  2288  0512  120A  158A  277E   	fcall	___lwmod
      +       120A  118A         
  2289  0517  0853               	movf	?___lwmod,w
  2290  0518  00E1               	movwf	?_eeprom_write
  2291  0519  3019               	movlw	25
  2292  051A  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2293                           
  2294                           ;Main.c: 282: eeprom_write(26,SugarStock);
  2295  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0521  0824               	movf	_SugarStock,w
  2298  0522  00E1               	movwf	?_eeprom_write
  2299  0523  301A               	movlw	26
  2300  0524  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2301                           
  2302                           ;Main.c: 283: eeprom_write(27,KeroseneStock);
  2303  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2304  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2305  052B  0820               	movf	_KeroseneStock,w
  2306  052C  00E1               	movwf	?_eeprom_write
  2307  052D  301B               	movlw	27
  2308  052E  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2309                           
  2310                           ;Main.c: 284: User1amt = User1amt-50;
  2311  0533  30CE               	movlw	-50
  2312  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0536  07A8               	addwf	_User1amt,f
  2315  0537  1C03               	skipc
  2316  0538  03A9               	decf	_User1amt+1,f
  2317                           
  2318                           ;Main.c: 288: eeprom_write(0,User1amt/100);
  2319  0539  3064               	movlw	100
  2320  053A  00D9               	movwf	?___awdiv
  2321  053B  01DA               	clrf	?___awdiv+1
  2322  053C  0829               	movf	_User1amt+1,w
  2323  053D  00DC               	movwf	?___awdiv+3
  2324  053E  0828               	movf	_User1amt,w
  2325  053F  00DB               	movwf	?___awdiv+2
  2326  0540  120A  118A  2348   	fcall	___awdiv
      +       120A  118A         
  2327  0545  0859               	movf	?___awdiv,w
  2328  0546  00E1               	movwf	?_eeprom_write
  2329  0547  3000               	movlw	0
  2330  0548  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2331                           
  2332                           ;Main.c: 289: eeprom_write(1,User1amt%100);
  2333  054D  3064               	movlw	100
  2334  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2335  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0550  00D3               	movwf	?___awmod
  2337  0551  01D4               	clrf	?___awmod+1
  2338  0552  0829               	movf	_User1amt+1,w
  2339  0553  00D6               	movwf	?___awmod+3
  2340  0554  0828               	movf	_User1amt,w
  2341  0555  00D5               	movwf	?___awmod+2
  2342  0556  120A  118A  22F2   	fcall	___awmod
      +       120A  118A         
  2343  055B  0853               	movf	?___awmod,w
  2344  055C  00E1               	movwf	?_eeprom_write
  2345  055D  3001               	movlw	1
  2346  055E  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2347                           
  2348                           ;Main.c: 290: eeprom_write(2,User1Rise);
  2349  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0565  082F               	movf	_User1Rise,w
  2352  0566  00E1               	movwf	?_eeprom_write
  2353  0567  3002               	movlw	2
  2354  0568  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2355                           
  2356                           ;Main.c: 291: eeprom_write(3,User1Sugar);
  2357  056D  1283               	bcf	3,5	;RP0=0, select bank0
  2358  056E  1303               	bcf	3,6	;RP1=0, select bank0
  2359  056F  0830               	movf	_User1Sugar,w
  2360  0570  00E1               	movwf	?_eeprom_write
  2361  0571  3003               	movlw	3
  2362  0572  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2363                           
  2364                           ;Main.c: 292: eeprom_write(4,User1Kerosene);
  2365  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0579  082E               	movf	_User1Kerosene,w
  2368  057A  00E1               	movwf	?_eeprom_write
  2369  057B  3004               	movlw	4
  2370  057C                     L2:	
  2371  057C  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2372                           
  2373                           ;Main.c: 294: User=0;
  2374  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0583  01A6               	clrf	_User
  2377  0584  01A7               	clrf	_User+1
  2378                           
  2379                           ;Main.c: 295: break;
  2380  0585  2F82               	goto	l4850
  2381  0586                     l4754:	
  2382                           
  2383                           ;Main.c: 298: {
  2384                           ;Main.c: 299: ReadAmnt();
  2385  0586  120A  158A  2581   	fcall	_ReadAmnt
      +       120A  118A         
  2386                           
  2387                           ;Main.c: 300: lcdcmd(0x80);
  2388  058B  3080               	movlw	128
  2389  058C  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2390                           
  2391                           ;Main.c: 301: lcdstring("USER2 AMOUNT:       ");
  2392  0591  30F0               	movlw	low (STR_40| (0+32768))
  2393  0592  00D8               	movwf	?_lcdstring
  2394  0593  3090               	movlw	high (STR_40| (0+32768))
  2395  0594  00D9               	movwf	?_lcdstring+1
  2396  0595  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2397                           
  2398                           ;Main.c: 302: DisplayAmnt(0X8D,User2amt);
  2399  059A  082B               	movf	_User2amt+1,w
  2400  059B  00E2               	movwf	?_DisplayAmnt+1
  2401  059C  082A               	movf	_User2amt,w
  2402  059D  00E1               	movwf	?_DisplayAmnt
  2403  059E  308D               	movlw	141
  2404  059F  120A  118A  2275   	fcall	_DisplayAmnt
      +       120A  118A         
  2405                           
  2406                           ;Main.c: 303: lcdcmd(0xC0);
  2407  05A4  30C0               	movlw	192
  2408  05A5  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2409                           
  2410                           ;Main.c: 304: lcdstring("RISE:   Kg          ");
  2411  05AA  30B1               	movlw	low (STR_37| (0+32768))
  2412  05AB  00D8               	movwf	?_lcdstring
  2413  05AC  3090               	movlw	high (STR_37| (0+32768))
  2414  05AD  00D9               	movwf	?_lcdstring+1
  2415  05AE  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2416                           
  2417                           ;Main.c: 305: DisplayRise(0XC5,User2Rise);
  2418  05B3  0832               	movf	_User2Rise,w
  2419  05B4  00D8               	movwf	?_DisplayRise
  2420  05B5  30C5               	movlw	197
  2421  05B6  120A  158A  265E   	fcall	_DisplayRise
      +       120A  118A         
  2422                           
  2423                           ;Main.c: 306: lcdcmd(0x94);
  2424  05BB  3094               	movlw	148
  2425  05BC  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2426                           
  2427                           ;Main.c: 307: lcdstring("SUGAR:   Kg         ");
  2428  05C1  30C6               	movlw	low (STR_38| (0+32768))
  2429  05C2  00D8               	movwf	?_lcdstring
  2430  05C3  3090               	movlw	high (STR_38| (0+32768))
  2431  05C4  00D9               	movwf	?_lcdstring+1
  2432  05C5  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2433                           
  2434                           ;Main.c: 308: DisplaySugar(0x9A,User2Sugar);
  2435  05CA  0833               	movf	_User2Sugar,w
  2436  05CB  00D8               	movwf	?_DisplaySugar
  2437  05CC  309A               	movlw	154
  2438  05CD  120A  118A  2011   	fcall	_DisplaySugar
      +       120A  118A         
  2439                           
  2440                           ;Main.c: 309: lcdcmd(0xD4);
  2441  05D2  30D4               	movlw	212
  2442  05D3  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2443                           
  2444                           ;Main.c: 310: lcdstring("KEROSENE:   Lts     ");
  2445  05D8  302F               	movlw	low (STR_39| (0+32768))
  2446  05D9  00D8               	movwf	?_lcdstring
  2447  05DA  3091               	movlw	high (STR_39| (0+32768))
  2448  05DB  00D9               	movwf	?_lcdstring+1
  2449  05DC  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2450                           
  2451                           ;Main.c: 311: DisplayKerosene(0XDD,User2Kerosene);
  2452  05E1  0831               	movf	_User2Kerosene,w
  2453  05E2  00D8               	movwf	?_DisplayKerosene
  2454  05E3  30DD               	movlw	221
  2455  05E4  120A  158A  2636   	fcall	_DisplayKerosene
      +       120A  118A         
  2456                           
  2457                           ;Main.c: 312: RiseStock=RiseStock-User2Rise;
  2458  05E9  0832               	movf	_User2Rise,w
  2459  05EA  02A2               	subwf	_RiseStock,f
  2460  05EB  1C03               	skipc
  2461  05EC  03A3               	decf	_RiseStock+1,f
  2462                           
  2463                           ;Main.c: 313: SugarStock=SugarStock-User2Sugar;
  2464  05ED  0833               	movf	_User2Sugar,w
  2465  05EE  02A4               	subwf	_SugarStock,f
  2466  05EF  1C03               	skipc
  2467  05F0  03A5               	decf	_SugarStock+1,f
  2468                           
  2469                           ;Main.c: 314: KeroseneStock=KeroseneStock-User2Kerosene;
  2470  05F1  0831               	movf	_User2Kerosene,w
  2471  05F2  02A0               	subwf	_KeroseneStock,f
  2472  05F3  1C03               	skipc
  2473  05F4  03A1               	decf	_KeroseneStock+1,f
  2474                           
  2475                           ;Main.c: 315: eeprom_write(24,RiseStock/100);
  2476  05F5  3064               	movlw	100
  2477  05F6  00D8               	movwf	?___lwdiv
  2478  05F7  01D9               	clrf	?___lwdiv+1
  2479  05F8  0823               	movf	_RiseStock+1,w
  2480  05F9  00DB               	movwf	?___lwdiv+3
  2481  05FA  0822               	movf	_RiseStock,w
  2482  05FB  00DA               	movwf	?___lwdiv+2
  2483  05FC  120A  158A  27A2   	fcall	___lwdiv
      +       120A  118A         
  2484  0601  0858               	movf	?___lwdiv,w
  2485  0602  00E1               	movwf	?_eeprom_write
  2486  0603  3018               	movlw	24
  2487  0604  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2488                           
  2489                           ;Main.c: 316: eeprom_write(25,RiseStock%100);
  2490  0609  3064               	movlw	100
  2491  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2492  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2493  060C  00D3               	movwf	?___lwmod
  2494  060D  01D4               	clrf	?___lwmod+1
  2495  060E  0823               	movf	_RiseStock+1,w
  2496  060F  00D6               	movwf	?___lwmod+3
  2497  0610  0822               	movf	_RiseStock,w
  2498  0611  00D5               	movwf	?___lwmod+2
  2499  0612  120A  158A  277E   	fcall	___lwmod
      +       120A  118A         
  2500  0617  0853               	movf	?___lwmod,w
  2501  0618  00E1               	movwf	?_eeprom_write
  2502  0619  3019               	movlw	25
  2503  061A  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2504                           
  2505                           ;Main.c: 317: eeprom_write(26,SugarStock);
  2506  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0621  0824               	movf	_SugarStock,w
  2509  0622  00E1               	movwf	?_eeprom_write
  2510  0623  301A               	movlw	26
  2511  0624  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2512                           
  2513                           ;Main.c: 318: eeprom_write(27,KeroseneStock);
  2514  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2515  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2516  062B  0820               	movf	_KeroseneStock,w
  2517  062C  00E1               	movwf	?_eeprom_write
  2518  062D  301B               	movlw	27
  2519  062E  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2520                           
  2521                           ;Main.c: 319: User2amt = User2amt-30;
  2522  0633  30E2               	movlw	-30
  2523  0634  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0635  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0636  07AA               	addwf	_User2amt,f
  2526  0637  1C03               	skipc
  2527  0638  03AB               	decf	_User2amt+1,f
  2528                           
  2529                           ;Main.c: 323: eeprom_write(8,User2amt/100);
  2530  0639  3064               	movlw	100
  2531  063A  00D9               	movwf	?___awdiv
  2532  063B  01DA               	clrf	?___awdiv+1
  2533  063C  082B               	movf	_User2amt+1,w
  2534  063D  00DC               	movwf	?___awdiv+3
  2535  063E  082A               	movf	_User2amt,w
  2536  063F  00DB               	movwf	?___awdiv+2
  2537  0640  120A  118A  2348   	fcall	___awdiv
      +       120A  118A         
  2538  0645  0859               	movf	?___awdiv,w
  2539  0646  00E1               	movwf	?_eeprom_write
  2540  0647  3008               	movlw	8
  2541  0648  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2542                           
  2543                           ;Main.c: 324: eeprom_write(9,User2amt%100);
  2544  064D  3064               	movlw	100
  2545  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2546  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0650  00D3               	movwf	?___awmod
  2548  0651  01D4               	clrf	?___awmod+1
  2549  0652  082B               	movf	_User2amt+1,w
  2550  0653  00D6               	movwf	?___awmod+3
  2551  0654  082A               	movf	_User2amt,w
  2552  0655  00D5               	movwf	?___awmod+2
  2553  0656  120A  118A  22F2   	fcall	___awmod
      +       120A  118A         
  2554  065B  0853               	movf	?___awmod,w
  2555  065C  00E1               	movwf	?_eeprom_write
  2556  065D  3009               	movlw	9
  2557  065E  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2558                           
  2559                           ;Main.c: 325: eeprom_write(10,User2Rise);
  2560  0663  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0664  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0665  0832               	movf	_User2Rise,w
  2563  0666  00E1               	movwf	?_eeprom_write
  2564  0667  300A               	movlw	10
  2565  0668  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2566                           
  2567                           ;Main.c: 326: eeprom_write(11,User2Sugar);
  2568  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2569  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2570  066F  0833               	movf	_User2Sugar,w
  2571  0670  00E1               	movwf	?_eeprom_write
  2572  0671  300B               	movlw	11
  2573  0672  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2574                           
  2575                           ;Main.c: 327: eeprom_write(12,User2Kerosene);
  2576  0677  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0678  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0679  0831               	movf	_User2Kerosene,w
  2579  067A  00E1               	movwf	?_eeprom_write
  2580  067B  300C               	movlw	12
  2581  067C  2D7C               	goto	L2
  2582  067D                     l4800:	
  2583                           
  2584                           ;Main.c: 332: {
  2585                           ;Main.c: 333: ReadAmnt();
  2586  067D  120A  158A  2581   	fcall	_ReadAmnt
      +       120A  118A         
  2587                           
  2588                           ;Main.c: 334: lcdcmd(0x80);
  2589  0682  3080               	movlw	128
  2590  0683  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2591                           
  2592                           ;Main.c: 335: lcdstring("USER3 AMOUNT:       ");
  2593  0688  3005               	movlw	low (STR_44| (0+32768))
  2594  0689  00D8               	movwf	?_lcdstring
  2595  068A  3091               	movlw	high (STR_44| (0+32768))
  2596  068B  00D9               	movwf	?_lcdstring+1
  2597  068C  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2598                           
  2599                           ;Main.c: 336: DisplayAmnt(0X8D,User3amt);
  2600  0691  082D               	movf	_User3amt+1,w
  2601  0692  00E2               	movwf	?_DisplayAmnt+1
  2602  0693  082C               	movf	_User3amt,w
  2603  0694  00E1               	movwf	?_DisplayAmnt
  2604  0695  308D               	movlw	141
  2605  0696  120A  118A  2275   	fcall	_DisplayAmnt
      +       120A  118A         
  2606                           
  2607                           ;Main.c: 337: lcdcmd(0xC0);
  2608  069B  30C0               	movlw	192
  2609  069C  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2610                           
  2611                           ;Main.c: 338: lcdstring("RISE:   Kg          ");
  2612  06A1  30B1               	movlw	low (STR_37| (0+32768))
  2613  06A2  00D8               	movwf	?_lcdstring
  2614  06A3  3090               	movlw	high (STR_37| (0+32768))
  2615  06A4  00D9               	movwf	?_lcdstring+1
  2616  06A5  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2617                           
  2618                           ;Main.c: 339: DisplayRise(0XC5,User3Rise);
  2619  06AA  0835               	movf	_User3Rise,w
  2620  06AB  00D8               	movwf	?_DisplayRise
  2621  06AC  30C5               	movlw	197
  2622  06AD  120A  158A  265E   	fcall	_DisplayRise
      +       120A  118A         
  2623                           
  2624                           ;Main.c: 340: lcdcmd(0x94);
  2625  06B2  3094               	movlw	148
  2626  06B3  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2627                           
  2628                           ;Main.c: 341: lcdstring("SUGAR:   Kg         ");
  2629  06B8  30C6               	movlw	low (STR_38| (0+32768))
  2630  06B9  00D8               	movwf	?_lcdstring
  2631  06BA  3090               	movlw	high (STR_38| (0+32768))
  2632  06BB  00D9               	movwf	?_lcdstring+1
  2633  06BC  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2634                           
  2635                           ;Main.c: 342: DisplaySugar(0x9A,User3Sugar);
  2636  06C1  0836               	movf	_User3Sugar,w
  2637  06C2  00D8               	movwf	?_DisplaySugar
  2638  06C3  309A               	movlw	154
  2639  06C4  120A  118A  2011   	fcall	_DisplaySugar
      +       120A  118A         
  2640                           
  2641                           ;Main.c: 343: lcdcmd(0xD4);
  2642  06C9  30D4               	movlw	212
  2643  06CA  120A  118A  222C   	fcall	_lcdcmd
      +       120A  118A         
  2644                           
  2645                           ;Main.c: 344: lcdstring("KEROSENE:   Lts     ");
  2646  06CF  302F               	movlw	low (STR_39| (0+32768))
  2647  06D0  00D8               	movwf	?_lcdstring
  2648  06D1  3091               	movlw	high (STR_39| (0+32768))
  2649  06D2  00D9               	movwf	?_lcdstring+1
  2650  06D3  120A  118A  2243   	fcall	_lcdstring
      +       120A  118A         
  2651                           
  2652                           ;Main.c: 345: DisplayKerosene(0XDD,User3Kerosene);
  2653  06D8  0834               	movf	_User3Kerosene,w
  2654  06D9  00D8               	movwf	?_DisplayKerosene
  2655  06DA  30DD               	movlw	221
  2656  06DB  120A  158A  2636   	fcall	_DisplayKerosene
      +       120A  118A         
  2657                           
  2658                           ;Main.c: 346: RiseStock=RiseStock-User3Rise;
  2659  06E0  0835               	movf	_User3Rise,w
  2660  06E1  02A2               	subwf	_RiseStock,f
  2661  06E2  1C03               	skipc
  2662  06E3  03A3               	decf	_RiseStock+1,f
  2663                           
  2664                           ;Main.c: 347: SugarStock=SugarStock-User3Sugar;
  2665  06E4  0836               	movf	_User3Sugar,w
  2666  06E5  02A4               	subwf	_SugarStock,f
  2667  06E6  1C03               	skipc
  2668  06E7  03A5               	decf	_SugarStock+1,f
  2669                           
  2670                           ;Main.c: 348: KeroseneStock=KeroseneStock-User3Kerosene;
  2671  06E8  0834               	movf	_User3Kerosene,w
  2672  06E9  02A0               	subwf	_KeroseneStock,f
  2673  06EA  1C03               	skipc
  2674  06EB  03A1               	decf	_KeroseneStock+1,f
  2675                           
  2676                           ;Main.c: 349: eeprom_write(24,RiseStock/100);
  2677  06EC  3064               	movlw	100
  2678  06ED  00D8               	movwf	?___lwdiv
  2679  06EE  01D9               	clrf	?___lwdiv+1
  2680  06EF  0823               	movf	_RiseStock+1,w
  2681  06F0  00DB               	movwf	?___lwdiv+3
  2682  06F1  0822               	movf	_RiseStock,w
  2683  06F2  00DA               	movwf	?___lwdiv+2
  2684  06F3  120A  158A  27A2   	fcall	___lwdiv
      +       120A  118A         
  2685  06F8  0858               	movf	?___lwdiv,w
  2686  06F9  00E1               	movwf	?_eeprom_write
  2687  06FA  3018               	movlw	24
  2688  06FB  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2689                           
  2690                           ;Main.c: 350: eeprom_write(25,RiseStock%100);
  2691  0700  3064               	movlw	100
  2692  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0703  00D3               	movwf	?___lwmod
  2695  0704  01D4               	clrf	?___lwmod+1
  2696  0705  0823               	movf	_RiseStock+1,w
  2697  0706  00D6               	movwf	?___lwmod+3
  2698  0707  0822               	movf	_RiseStock,w
  2699  0708  00D5               	movwf	?___lwmod+2
  2700  0709  120A  158A  277E   	fcall	___lwmod
      +       120A  118A         
  2701  070E  0853               	movf	?___lwmod,w
  2702  070F  00E1               	movwf	?_eeprom_write
  2703  0710  3019               	movlw	25
  2704  0711  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2705                           
  2706                           ;Main.c: 351: eeprom_write(26,SugarStock);
  2707  0716  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0717  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0718  0824               	movf	_SugarStock,w
  2710  0719  00E1               	movwf	?_eeprom_write
  2711  071A  301A               	movlw	26
  2712  071B  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2713                           
  2714                           ;Main.c: 352: eeprom_write(27,KeroseneStock);
  2715  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0722  0820               	movf	_KeroseneStock,w
  2718  0723  00E1               	movwf	?_eeprom_write
  2719  0724  301B               	movlw	27
  2720  0725  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2721                           
  2722                           ;Main.c: 353: User3amt = User3amt-20;
  2723  072A  30EC               	movlw	-20
  2724  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2725  072C  1303               	bcf	3,6	;RP1=0, select bank0
  2726  072D  07AC               	addwf	_User3amt,f
  2727  072E  1C03               	skipc
  2728  072F  03AD               	decf	_User3amt+1,f
  2729                           
  2730                           ;Main.c: 357: eeprom_write(16,User3amt/100);
  2731  0730  3064               	movlw	100
  2732  0731  00D9               	movwf	?___awdiv
  2733  0732  01DA               	clrf	?___awdiv+1
  2734  0733  082D               	movf	_User3amt+1,w
  2735  0734  00DC               	movwf	?___awdiv+3
  2736  0735  082C               	movf	_User3amt,w
  2737  0736  00DB               	movwf	?___awdiv+2
  2738  0737  120A  118A  2348   	fcall	___awdiv
      +       120A  118A         
  2739  073C  0859               	movf	?___awdiv,w
  2740  073D  00E1               	movwf	?_eeprom_write
  2741  073E  3010               	movlw	16
  2742  073F  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2743                           
  2744                           ;Main.c: 358: eeprom_write(17,User3amt%100);
  2745  0744  3064               	movlw	100
  2746  0745  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0746  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0747  00D3               	movwf	?___awmod
  2749  0748  01D4               	clrf	?___awmod+1
  2750  0749  082D               	movf	_User3amt+1,w
  2751  074A  00D6               	movwf	?___awmod+3
  2752  074B  082C               	movf	_User3amt,w
  2753  074C  00D5               	movwf	?___awmod+2
  2754  074D  120A  118A  22F2   	fcall	___awmod
      +       120A  118A         
  2755  0752  0853               	movf	?___awmod,w
  2756  0753  00E1               	movwf	?_eeprom_write
  2757  0754  3011               	movlw	17
  2758  0755  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2759                           
  2760                           ;Main.c: 359: eeprom_write(18,User3Rise);
  2761  075A  1283               	bcf	3,5	;RP0=0, select bank0
  2762  075B  1303               	bcf	3,6	;RP1=0, select bank0
  2763  075C  0835               	movf	_User3Rise,w
  2764  075D  00E1               	movwf	?_eeprom_write
  2765  075E  3012               	movlw	18
  2766  075F  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2767                           
  2768                           ;Main.c: 360: eeprom_write(19,User3Sugar);
  2769  0764  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0765  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0766  0836               	movf	_User3Sugar,w
  2772  0767  00E1               	movwf	?_eeprom_write
  2773  0768  3013               	movlw	19
  2774  0769  120A  158A  246D   	fcall	_eeprom_write
      +       120A  118A         
  2775                           
  2776                           ;Main.c: 361: eeprom_write(20,User3Kerosene);
  2777  076E  1283               	bcf	3,5	;RP0=0, select bank0
  2778  076F  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0770  0834               	movf	_User3Kerosene,w
  2780  0771  00E1               	movwf	?_eeprom_write
  2781  0772  3014               	movlw	20
  2782  0773  2D7C               	goto	L2
  2783  0774                     l4848:	
  2784                           
  2785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2786                           ; Switch size 1, requested type "space"
  2787                           ; Number of cases is 1, Range of values is 0 to 0
  2788                           ; switch strategies available:
  2789                           ; Name         Bytes Cycles
  2790                           ; simple_byte     4     3 (average)
  2791                           ; direct_byte    22    19 (fixed)
  2792                           ;	Chosen strategy is simple_byte
  2793  0774  0827               	movf	_User+1,w
  2794  0775  3A00               	xorlw	0	; case 0
  2795  0776  1D03               	btfss	3,2
  2796  0777  2F82               	goto	l4850
  2797                           
  2798                           ; Switch size 1, requested type "space"
  2799                           ; Number of cases is 3, Range of values is 1 to 3
  2800                           ; switch strategies available:
  2801                           ; Name         Bytes Cycles
  2802                           ; simple_byte    10     6 (average)
  2803                           ; direct_byte    31    22 (fixed)
  2804                           ;	Chosen strategy is simple_byte
  2805  0778  0826               	movf	_User,w
  2806  0779  3A01               	xorlw	1	; case 1
  2807  077A  1903               	skipnz
  2808  077B  2C86               	goto	l4708
  2809  077C  3A03               	xorlw	3	; case 2
  2810  077D  1903               	skipnz
  2811  077E  2D86               	goto	l4754
  2812  077F  3A01               	xorlw	1	; case 3
  2813  0780  1903               	skipnz
  2814  0781  2E7D               	goto	l4800
  2815  0782                     l4850:	
  2816                           
  2817                           ;Main.c: 366: ReadStock();
  2818  0782  120A  158A  255E   	fcall	_ReadStock
      +       120A  118A         
  2819                           
  2820                           ;Main.c: 367: LoadStockToArray();
  2821  0787  120A  158A  26A0   	fcall	_LoadStockToArray
      +       120A  118A         
  2822                           
  2823                           ;Main.c: 368: if(RC1)
  2824  078C  1C87               	btfss	7,1
  2825  078D  2F93               	goto	l4858
  2826                           
  2827                           ;Main.c: 369: DisplayStock();
  2828  078E  120A  118A  2037   	fcall	_DisplayStock
      +       120A  118A         
  2829  0793                     l4858:	
  2830                           
  2831                           ;Main.c: 370: _delay((unsigned long)((500)*(20000000/4000.0)));
  2832  0793  300D               	movlw	13
  2833  0794  00E8               	movwf	??_main+2
  2834  0795  30A3               	movlw	163
  2835  0796  00E7               	movwf	??_main+1
  2836  0797  30BD               	movlw	189
  2837  0798  00E6               	movwf	??_main
  2838  0799                     u2117:	
  2839  0799  0BE6               	decfsz	??_main,f
  2840  079A  2F99               	goto	u2117
  2841  079B  0BE7               	decfsz	??_main+1,f
  2842  079C  2F99               	goto	u2117
  2843  079D  0BE8               	decfsz	??_main+2,f
  2844  079E  2F99               	goto	u2117
  2845  079F  0064               	clrwdt
  2846                           
  2847                           ;Main.c: 372: if((memcmp("STOCK",&sms,5)==0))
  2848  07A0  3065               	movlw	low (STR_48| (0+32768))
  2849  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  2850  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  2851  07A3  00D3               	movwf	?_memcmp
  2852  07A4  3092               	movlw	high (STR_48| (0+32768))
  2853  07A5  00D4               	movwf	?_memcmp+1
  2854  07A6  30C7               	movlw	_sms& (0+255)
  2855  07A7  00D5               	movwf	?_memcmp+2
  2856  07A8  3005               	movlw	5
  2857  07A9  00D6               	movwf	?_memcmp+3
  2858  07AA  01D7               	clrf	?_memcmp+4
  2859  07AB  120A  158A  24D5   	fcall	_memcmp
      +       120A  118A         
  2860  07B0  0854               	movf	?_memcmp+1,w
  2861  07B1  0453               	iorwf	?_memcmp,w
  2862  07B2  1903               	btfsc	3,2
  2863                           
  2864                           ;Main.c: 373: {
  2865                           ;Main.c: 374: if(!sms_indication)
  2866  07B3  18F6               	btfsc	_sms_indication/(0+8),_sms_indication& (0+7)
  2867  07B4  2C19               	goto	l4670
  2868                           
  2869                           ;Main.c: 375: {
  2870                           ;Main.c: 376: SendStock();
  2871  07B5  120A  118A  2079   	fcall	_SendStock
      +       120A  118A         
  2872                           
  2873                           ;Main.c: 377: sms_indication=1;
  2874  07BA  14F6               	bsf	_sms_indication/(0+8),_sms_indication& (0+7)
  2875  07BB  2C19               	goto	l4670
  2876  07BC                     __end_of_main:	
  2877                           
  2878                           	psect	text1180
  2879  0E36                     __ptext1180:	
  2880 ;; =============== function _gsm_init ends ============
  2881                           
  2882                           
  2883 ;; *************** function _DisplayKerosene *****************
  2884 ;; Defined at:
  2885 ;;		line 138 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  Location        1    wreg     unsigned char 
  2888 ;;  Kerosene        1    5[BANK0 ] unsigned char 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  Location        1    6[BANK0 ] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;		None               void
  2893 ;; Registers used:
  2894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 60/0
  2897 ;;		On exit  : 60/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       1       0       0       0
  2901 ;;      Locals:         0       1       0       0       0
  2902 ;;      Temps:          0       0       0       0       0
  2903 ;;      Totals:         0       2       0       0       0
  2904 ;;Total ram usage:        2 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    5
  2907 ;; This function calls:
  2908 ;;		_lcdcmd
  2909 ;;		___lbdiv
  2910 ;;		_lcddata
  2911 ;;		___lbmod
  2912 ;; This function is called by:
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916  0E36                     _DisplayKerosene:	
  2917                           
  2918                           ; Regs used in _DisplayKerosene: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2919                           ;DisplayKerosene@Location stored from wreg
  2920  0E36  00D9               	movwf	DisplayKerosene@Location
  2921                           
  2922                           ;Main.c: 139: lcdcmd(Location);
  2923  0E37  120A  118A  222C   	fcall	_lcdcmd
      +       120A  158A         
  2924                           
  2925                           ;Main.c: 140: lcddata(digit[Kerosene/10]);
  2926  0E3C  300A               	movlw	10
  2927  0E3D  00D3               	movwf	?___lbdiv
  2928  0E3E  0858               	movf	DisplayKerosene@Kerosene,w
  2929  0E3F  120A  118A  23B9   	fcall	___lbdiv
      +       120A  158A         
  2930  0E44  27CC               	fcall	PL2	;call to abstracted procedure
  2931  0E45  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  2932  0E4A  120A  118A  232F   	fcall	_lcddata
      +       120A  158A         
  2933                           
  2934                           ;Main.c: 141: lcddata(digit[Kerosene%10]);
  2935  0E4F  300A               	movlw	10
  2936  0E50  00D3               	movwf	?___lbmod
  2937  0E51  0858               	movf	DisplayKerosene@Kerosene,w
  2938  0E52  2684  120A  158A   	fcall	___lbmod
  2939  0E55  27CC               	fcall	PL2	;call to abstracted procedure
  2940  0E56  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  2941  0E5B  120A  118A  2B2F   	ljmp	_lcddata
  2942  0E5E                     __end_of_DisplayKerosene:	
  2943  0E5E                     __ptext1181:	
  2944 ;; =============== function _DisplayKerosene ends ============
  2945                           
  2946                           
  2947 ;; *************** function _DisplayRise *****************
  2948 ;; Defined at:
  2949 ;;		line 132 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  Location        1    wreg     unsigned char 
  2952 ;;  Rise            1    5[BANK0 ] unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  Location        1    6[BANK0 ] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;		None               void
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 60/0
  2961 ;;		On exit  : 60/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       1       0       0       0
  2965 ;;      Locals:         0       1       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         0       2       0       0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    5
  2971 ;; This function calls:
  2972 ;;		_lcdcmd
  2973 ;;		___lbdiv
  2974 ;;		_lcddata
  2975 ;;		___lbmod
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980  0E5E                     _DisplayRise:	
  2981                           
  2982                           ; Regs used in _DisplayRise: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2983                           ;DisplayRise@Location stored from wreg
  2984  0E5E  00D9               	movwf	DisplayRise@Location
  2985                           
  2986                           ;Main.c: 133: lcdcmd(Location);
  2987  0E5F  120A  118A  222C   	fcall	_lcdcmd
      +       120A  158A         
  2988                           
  2989                           ;Main.c: 134: lcddata(digit[Rise/10]);
  2990  0E64  300A               	movlw	10
  2991  0E65  00D3               	movwf	?___lbdiv
  2992  0E66  0858               	movf	DisplayRise@Rise,w
  2993  0E67  120A  118A  23B9   	fcall	___lbdiv
      +       120A  158A         
  2994  0E6C  27CC               	fcall	PL2	;call to abstracted procedure
  2995  0E6D  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  2996  0E72  120A  118A  232F   	fcall	_lcddata
      +       120A  158A         
  2997                           
  2998                           ;Main.c: 135: lcddata(digit[Rise%10]);
  2999  0E77  300A               	movlw	10
  3000  0E78  00D3               	movwf	?___lbmod
  3001  0E79  0858               	movf	DisplayRise@Rise,w
  3002  0E7A  2684  120A  158A   	fcall	___lbmod
  3003  0E7D  27CC               	fcall	PL2	;call to abstracted procedure
  3004  0E7E  160A  118A  2000   	fcall	stringtab
  3005  0E81  120A  118A  2B2F   	ljmp	_lcddata
  3006  0E84                     __end_of_DisplayRise:	
  3007  0E84                     __ptext1201:	
  3008 ;; =============== function ___awdiv ends ============
  3009                           
  3010                           
  3011 ;; *************** function ___lbmod *****************
  3012 ;; Defined at:
  3013 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbmod.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  dividend        1    wreg     unsigned char 
  3016 ;;  divisor         1    0[BANK0 ] unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  dividend        1    2[BANK0 ] unsigned char 
  3019 ;;  rem             1    4[BANK0 ] unsigned char 
  3020 ;;  counter         1    3[BANK0 ] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 60/0
  3027 ;;		On exit  : 60/0
  3028 ;;		Unchanged: FFF9F/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       1       0       0       0
  3031 ;;      Locals:         0       3       0       0       0
  3032 ;;      Temps:          0       1       0       0       0
  3033 ;;      Totals:         0       5       0       0       0
  3034 ;;Total ram usage:        5 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    3
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_DisplaySugar
  3041 ;;		_DisplayRise
  3042 ;;		_DisplayKerosene
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045  0E84                     ___lbmod:	
  3046                           
  3047                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3048                           ;___lbmod@dividend stored from wreg
  3049  0E84  00D5               	movwf	___lbmod@dividend
  3050  0E85  3008               	movlw	8
  3051  0E86  00D6               	movwf	___lbmod@counter
  3052  0E87  01D7               	clrf	___lbmod@rem
  3053  0E88                     l4320:	
  3054  0E88  0855               	movf	___lbmod@dividend,w
  3055  0E89  00D4               	movwf	??___lbmod
  3056  0E8A  3007               	movlw	7
  3057  0E8B  1003               	clrc
  3058  0E8C                     L8:	
  3059  0E8C  0CD4               	rrf	??___lbmod,f
  3060  0E8D  3EFF               	addlw	-1
  3061  0E8E  1003               	clrc
  3062  0E8F  1D03               	skipz
  3063  0E90  2E8C               	goto	L8
  3064  0E91  0D57               	rlf	___lbmod@rem,w
  3065  0E92  0454               	iorwf	??___lbmod,w
  3066  0E93  00D7               	movwf	___lbmod@rem
  3067  0E94  1003               	clrc
  3068  0E95  0DD5               	rlf	___lbmod@dividend,f
  3069  0E96  0853               	movf	___lbmod@divisor,w
  3070  0E97  0257               	subwf	___lbmod@rem,w
  3071  0E98  1C03               	skipc
  3072  0E99  2E9C               	goto	l4328
  3073  0E9A  0853               	movf	___lbmod@divisor,w
  3074  0E9B  02D7               	subwf	___lbmod@rem,f
  3075  0E9C                     l4328:	
  3076  0E9C  0BD6               	decfsz	___lbmod@counter,f
  3077  0E9D  2E88               	goto	l4320
  3078  0E9E  0857               	movf	___lbmod@rem,w
  3079  0E9F  0008               	return
  3080  0EA0                     __end_of___lbmod:	
  3081  0EA0                     __ptext1190:	
  3082 ;; =============== function _lcdcmd ends ============
  3083                           
  3084                           
  3085 ;; *************** function _LoadStockToArray *****************
  3086 ;; Defined at:
  3087 ;;		line 175 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 60/0
  3098 ;;		On exit  : 60/0
  3099 ;;		Unchanged: FFE9F/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         0       0       0       0       0
  3102 ;;      Locals:         0       2       0       0       0
  3103 ;;      Temps:          0       0       0       0       0
  3104 ;;      Totals:         0       2       0       0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    4
  3108 ;; This function calls:
  3109 ;;		___lwdiv
  3110 ;;		___lwmod
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115  0EA0                     _LoadStockToArray:	
  3116                           
  3117                           ;Main.c: 176: RiseArray[0] = digit[RiseStock/1000];
  3118                           
  3119                           ; Regs used in _LoadStockToArray: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3120  0EA0  30E8               	movlw	232
  3121  0EA1  00D8               	movwf	?___lwdiv
  3122  0EA2  3003               	movlw	3
  3123  0EA3  00D9               	movwf	?___lwdiv+1
  3124  0EA4  0823               	movf	_RiseStock+1,w
  3125  0EA5  00DB               	movwf	?___lwdiv+3
  3126  0EA6  0822               	movf	_RiseStock,w
  3127  0EA7  00DA               	movwf	?___lwdiv+2
  3128  0EA8  27A2  120A  158A   	fcall	___lwdiv
  3129  0EAB  0858               	movf	?___lwdiv,w
  3130  0EAC  27CC               	fcall	PL2	;call to abstracted procedure
  3131  0EAD  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3132  0EB2  00C6               	movwf	_RiseArray
  3133                           
  3134                           ;Main.c: 177: RiseArray[1] = digit[RiseStock%1000/100];
  3135  0EB3  3064               	movlw	100
  3136  0EB4  00D8               	movwf	?___lwdiv
  3137  0EB5  01D9               	clrf	?___lwdiv+1
  3138  0EB6  27DF  120A  158A   	fcall	PL5	;call to abstracted procedure
  3139  0EB9  277E  120A  158A   	fcall	___lwmod
  3140  0EBC  0854               	movf	?___lwmod+1,w
  3141  0EBD  00DB               	movwf	?___lwdiv+3
  3142  0EBE  0853               	movf	?___lwmod,w
  3143  0EBF  00DA               	movwf	?___lwdiv+2
  3144  0EC0  27A2  120A  158A   	fcall	___lwdiv
  3145  0EC3  0858               	movf	?___lwdiv,w
  3146  0EC4  27CC               	fcall	PL2	;call to abstracted procedure
  3147  0EC5  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3148  0ECA  00C7               	movwf	_RiseArray+1
  3149                           
  3150                           ;Main.c: 178: RiseArray[2] = digit[RiseStock%1000%100/10];
  3151  0ECB  300A               	movlw	10
  3152  0ECC  00D8               	movwf	?___lwdiv
  3153  0ECD  01D9               	clrf	?___lwdiv+1
  3154  0ECE  27DF  120A  158A   	fcall	PL5	;call to abstracted procedure
  3155  0ED1  277E  120A  158A   	fcall	___lwmod
  3156  0ED4  27F0  120A  158A   	fcall	PL8	;call to abstracted procedure
  3157  0ED7  277E  120A  158A   	fcall	___lwmod
  3158  0EDA  0854               	movf	?___lwmod+1,w
  3159  0EDB  00DB               	movwf	?___lwdiv+3
  3160  0EDC  0853               	movf	?___lwmod,w
  3161  0EDD  00DA               	movwf	?___lwdiv+2
  3162  0EDE  27A2  120A  158A   	fcall	___lwdiv
  3163  0EE1  0858               	movf	?___lwdiv,w
  3164  0EE2  27CC               	fcall	PL2	;call to abstracted procedure
  3165  0EE3  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3166  0EE8  00C8               	movwf	_RiseArray+2
  3167                           
  3168                           ;Main.c: 179: RiseArray[3] = digit[RiseStock%1000%100%10];
  3169  0EE9  27DF  120A  158A   	fcall	PL5	;call to abstracted procedure
  3170  0EEC  277E  120A  158A   	fcall	___lwmod
  3171  0EEF  27F0  120A  158A   	fcall	PL8	;call to abstracted procedure
  3172  0EF2  277E  120A  158A   	fcall	___lwmod
  3173                           
  3174                           ;Main.c: 179: RiseArray[3] = digit[RiseStock%1000%100%10];
  3175  0EF5  27D3  120A  158A   	fcall	PL3	;call to abstracted procedure
  3176  0EF8  277E  120A  158A   	fcall	___lwmod
  3177  0EFB  0853               	movf	?___lwmod,w
  3178  0EFC  27CC               	fcall	PL2	;call to abstracted procedure
  3179  0EFD  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3180  0F02  00C9               	movwf	_RiseArray+3
  3181                           
  3182                           ;Main.c: 180: SugarArray[0] = digit[SugarStock/100];
  3183  0F03  3064               	movlw	100
  3184  0F04  00D8               	movwf	?___lwdiv
  3185  0F05  01D9               	clrf	?___lwdiv+1
  3186  0F06  0825               	movf	_SugarStock+1,w
  3187  0F07  00DB               	movwf	?___lwdiv+3
  3188  0F08  0824               	movf	_SugarStock,w
  3189  0F09  00DA               	movwf	?___lwdiv+2
  3190  0F0A  27A2  120A  158A   	fcall	___lwdiv
  3191  0F0D  0858               	movf	?___lwdiv,w
  3192  0F0E  27CC               	fcall	PL2	;call to abstracted procedure
  3193  0F0F  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3194  0F14  00CF               	movwf	_SugarArray
  3195                           
  3196                           ;Main.c: 181: SugarArray[1] = digit[SugarStock%100/10];
  3197  0F15  300A               	movlw	10
  3198  0F16  00D8               	movwf	?___lwdiv
  3199  0F17  01D9               	clrf	?___lwdiv+1
  3200  0F18  27E8  120A  158A   	fcall	PL7	;call to abstracted procedure
  3201  0F1B  277E  120A  158A   	fcall	___lwmod
  3202  0F1E  0854               	movf	?___lwmod+1,w
  3203  0F1F  00DB               	movwf	?___lwdiv+3
  3204  0F20  0853               	movf	?___lwmod,w
  3205  0F21  00DA               	movwf	?___lwdiv+2
  3206  0F22  27A2  120A  158A   	fcall	___lwdiv
  3207  0F25  0858               	movf	?___lwdiv,w
  3208  0F26  27CC               	fcall	PL2	;call to abstracted procedure
  3209  0F27  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3210  0F2C  00D0               	movwf	_SugarArray+1
  3211                           
  3212                           ;Main.c: 182: SugarArray[2] = digit[SugarStock%100%10];
  3213  0F2D  27E8  120A  158A   	fcall	PL7	;call to abstracted procedure
  3214  0F30  277E  120A  158A   	fcall	___lwmod
  3215                           
  3216                           ;Main.c: 182: SugarArray[2] = digit[SugarStock%100%10];
  3217  0F33  27D3  120A  158A   	fcall	PL3	;call to abstracted procedure
  3218  0F36  277E  120A  158A   	fcall	___lwmod
  3219  0F39  0853               	movf	?___lwmod,w
  3220  0F3A  27CC               	fcall	PL2	;call to abstracted procedure
  3221  0F3B  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3222  0F40  00D1               	movwf	_SugarArray+2
  3223                           
  3224                           ;Main.c: 183: KeroseneArray[0] = digit[KeroseneStock/100];
  3225  0F41  3064               	movlw	100
  3226  0F42  00D8               	movwf	?___lwdiv
  3227  0F43  01D9               	clrf	?___lwdiv+1
  3228  0F44  0821               	movf	_KeroseneStock+1,w
  3229  0F45  00DB               	movwf	?___lwdiv+3
  3230  0F46  0820               	movf	_KeroseneStock,w
  3231  0F47  00DA               	movwf	?___lwdiv+2
  3232  0F48  27A2  120A  158A   	fcall	___lwdiv
  3233  0F4B  0858               	movf	?___lwdiv,w
  3234  0F4C  27CC               	fcall	PL2	;call to abstracted procedure
  3235  0F4D  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3236  0F52  00CB               	movwf	_KeroseneArray
  3237                           
  3238                           ;Main.c: 184: KeroseneArray[1] = digit[KeroseneStock%100/10];
  3239  0F53  300A               	movlw	10
  3240  0F54  00D8               	movwf	?___lwdiv
  3241  0F55  01D9               	clrf	?___lwdiv+1
  3242  0F56  27F8  120A  158A   	fcall	PL9	;call to abstracted procedure
  3243  0F59  277E  120A  158A   	fcall	___lwmod
  3244  0F5C  0854               	movf	?___lwmod+1,w
  3245  0F5D  00DB               	movwf	?___lwdiv+3
  3246  0F5E  0853               	movf	?___lwmod,w
  3247  0F5F  00DA               	movwf	?___lwdiv+2
  3248  0F60  27A2  120A  158A   	fcall	___lwdiv
  3249  0F63  0858               	movf	?___lwdiv,w
  3250  0F64  27CC               	fcall	PL2	;call to abstracted procedure
  3251  0F65  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  3252  0F6A  00CC               	movwf	_KeroseneArray+1
  3253                           
  3254                           ;Main.c: 185: KeroseneArray[2] = digit[KeroseneStock%100%10];
  3255  0F6B  27F8  120A  158A   	fcall	PL9	;call to abstracted procedure
  3256  0F6E  277E  120A  158A   	fcall	___lwmod
  3257                           
  3258                           ;Main.c: 185: KeroseneArray[2] = digit[KeroseneStock%100%10];
  3259  0F71  27D3  120A  158A   	fcall	PL3	;call to abstracted procedure
  3260  0F74  277E  120A  158A   	fcall	___lwmod
  3261  0F77  0853               	movf	?___lwmod,w
  3262  0F78  27CC               	fcall	PL2	;call to abstracted procedure
  3263  0F79  160A  118A  2000   	fcall	stringtab
  3264  0F7C  00CD               	movwf	_KeroseneArray+2
  3265  0F7D  0008               	return
  3266  0F7E                     __end_of_LoadStockToArray:	
  3267  0F7E                     __ptext1203:	
  3268 ;; =============== function ___lbdiv ends ============
  3269                           
  3270                           
  3271 ;; *************** function ___lwmod *****************
  3272 ;; Defined at:
  3273 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwmod.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  divisor         2    0[BANK0 ] unsigned int 
  3276 ;;  dividend        2    2[BANK0 ] unsigned int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  counter         1    4[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    0[BANK0 ] unsigned int 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 60/0
  3285 ;;		On exit  : 60/0
  3286 ;;		Unchanged: FFF9F/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       4       0       0       0
  3289 ;;      Locals:         0       1       0       0       0
  3290 ;;      Temps:          0       0       0       0       0
  3291 ;;      Totals:         0       5       0       0       0
  3292 ;;Total ram usage:        5 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    3
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_LoadStockToArray
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302  0F7E                     ___lwmod:	
  3303                           
  3304                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3305  0F7E  0854               	movf	___lwmod@divisor+1,w
  3306  0F7F  0453               	iorwf	___lwmod@divisor,w
  3307  0F80  1903               	skipnz
  3308  0F81  2F9D               	goto	l4288
  3309  0F82  01D7               	clrf	___lwmod@counter
  3310  0F83                     L10:	
  3311  0F83  0AD7               	incf	___lwmod@counter,f
  3312  0F84  1BD4               	btfsc	___lwmod@divisor+1,7
  3313  0F85  2F8A               	goto	l4280
  3314  0F86  1003               	clrc
  3315  0F87  0DD3               	rlf	___lwmod@divisor,f
  3316  0F88  0DD4               	rlf	___lwmod@divisor+1,f
  3317  0F89  2F83               	goto	L10
  3318  0F8A                     l4280:	
  3319  0F8A  0854               	movf	___lwmod@divisor+1,w
  3320  0F8B  0256               	subwf	___lwmod@dividend+1,w
  3321  0F8C  1D03               	skipz
  3322  0F8D  2F90               	goto	u1715
  3323  0F8E  0853               	movf	___lwmod@divisor,w
  3324  0F8F  0255               	subwf	___lwmod@dividend,w
  3325  0F90                     u1715:	
  3326  0F90  1C03               	skipc
  3327  0F91  2F99               	goto	L11
  3328  0F92  0853               	movf	___lwmod@divisor,w
  3329  0F93  02D5               	subwf	___lwmod@dividend,f
  3330  0F94  0854               	movf	___lwmod@divisor+1,w
  3331  0F95  1C03               	skipc
  3332  0F96  03D6               	decf	___lwmod@dividend+1,f
  3333  0F97  02D6               	subwf	___lwmod@dividend+1,f
  3334  0F98  1003               	clrc
  3335  0F99                     L11:	
  3336  0F99  0CD4               	rrf	___lwmod@divisor+1,f
  3337  0F9A  0CD3               	rrf	___lwmod@divisor,f
  3338  0F9B  0BD7               	decfsz	___lwmod@counter,f
  3339  0F9C  2F8A               	goto	l4280
  3340  0F9D                     l4288:	
  3341  0F9D  0856               	movf	___lwmod@dividend+1,w
  3342  0F9E  00D4               	movwf	?___lwmod+1
  3343  0F9F  0855               	movf	___lwmod@dividend,w
  3344  0FA0  00D3               	movwf	?___lwmod
  3345  0FA1  0008               	return
  3346  0FA2                     __end_of___lwmod:	
  3347  0FA2                     __ptext1204:	
  3348 ;; =============== function ___lwmod ends ============
  3349                           
  3350                           
  3351 ;; *************** function ___lwdiv *****************
  3352 ;; Defined at:
  3353 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  divisor         2    5[BANK0 ] unsigned int 
  3356 ;;  dividend        2    7[BANK0 ] unsigned int 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  quotient        2    9[BANK0 ] unsigned int 
  3359 ;;  counter         1   11[BANK0 ] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2    5[BANK0 ] unsigned int 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 60/0
  3366 ;;		On exit  : 60/0
  3367 ;;		Unchanged: FFF9F/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       4       0       0       0
  3370 ;;      Locals:         0       3       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         0       7       0       0       0
  3373 ;;Total ram usage:        7 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    3
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_LoadStockToArray
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383  0FA2                     ___lwdiv:	
  3384                           
  3385                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3386  0FA2  01DC               	clrf	___lwdiv@quotient
  3387  0FA3  01DD               	clrf	___lwdiv@quotient+1
  3388  0FA4  0859               	movf	___lwdiv@divisor+1,w
  3389  0FA5  0458               	iorwf	___lwdiv@divisor,w
  3390  0FA6  1903               	skipnz
  3391  0FA7  2FC7               	goto	l3436
  3392  0FA8  01DE               	clrf	___lwdiv@counter
  3393  0FA9                     L12:	
  3394  0FA9  0ADE               	incf	___lwdiv@counter,f
  3395  0FAA  1BD9               	btfsc	___lwdiv@divisor+1,7
  3396  0FAB  2FB0               	goto	l3424
  3397  0FAC  1003               	clrc
  3398  0FAD  0DD8               	rlf	___lwdiv@divisor,f
  3399  0FAE  0DD9               	rlf	___lwdiv@divisor+1,f
  3400  0FAF  2FA9               	goto	L12
  3401  0FB0                     l3424:	
  3402  0FB0  1003               	clrc
  3403  0FB1  0DDC               	rlf	___lwdiv@quotient,f
  3404  0FB2  0DDD               	rlf	___lwdiv@quotient+1,f
  3405  0FB3  0859               	movf	___lwdiv@divisor+1,w
  3406  0FB4  025B               	subwf	___lwdiv@dividend+1,w
  3407  0FB5  1D03               	skipz
  3408  0FB6  2FB9               	goto	u1055
  3409  0FB7  0858               	movf	___lwdiv@divisor,w
  3410  0FB8  025A               	subwf	___lwdiv@dividend,w
  3411  0FB9                     u1055:	
  3412  0FB9  1C03               	skipc
  3413  0FBA  2FC3               	goto	L13
  3414  0FBB  0858               	movf	___lwdiv@divisor,w
  3415  0FBC  02DA               	subwf	___lwdiv@dividend,f
  3416  0FBD  0859               	movf	___lwdiv@divisor+1,w
  3417  0FBE  1C03               	skipc
  3418  0FBF  03DB               	decf	___lwdiv@dividend+1,f
  3419  0FC0  02DB               	subwf	___lwdiv@dividend+1,f
  3420  0FC1  145C               	bsf	___lwdiv@quotient,0
  3421  0FC2  1003               	clrc
  3422  0FC3                     L13:	
  3423  0FC3  0CD9               	rrf	___lwdiv@divisor+1,f
  3424  0FC4  0CD8               	rrf	___lwdiv@divisor,f
  3425  0FC5  0BDE               	decfsz	___lwdiv@counter,f
  3426  0FC6  2FB0               	goto	l3424
  3427  0FC7                     l3436:	
  3428  0FC7  085D               	movf	___lwdiv@quotient+1,w
  3429  0FC8  00D9               	movwf	?___lwdiv+1
  3430  0FC9  085C               	movf	___lwdiv@quotient,w
  3431  0FCA  00D8               	movwf	?___lwdiv
  3432  0FCB  0008               	return
  3433  0FCC                     __end_of___lwdiv:	
  3434  0FCC                     PL2:	
  3435  0FCC  3E12               	addlw	low (_digit| (0+32768))
  3436  0FCD  0084               	movwf	4
  3437  0FCE  3090               	movlw	high (_digit| (0+32768))
  3438  0FCF  1803               	skipnc
  3439  0FD0  3E01               	addlw	1
  3440  0FD1  00FF               	movwf	127
  3441  0FD2  0008               	return
  3442  0FD3                     PL3:	
  3443  0FD3  0854               	movf	?___lwmod+1,w
  3444  0FD4  00E0               	movwf	_LoadStockToArray$1128+1
  3445  0FD5  0853               	movf	?___lwmod,w
  3446  0FD6  00DF               	movwf	_LoadStockToArray$1128
  3447  0FD7  300A               	movlw	10
  3448  0FD8  00D3               	movwf	?___lwmod
  3449  0FD9  01D4               	clrf	?___lwmod+1
  3450  0FDA  0860               	movf	_LoadStockToArray$1128+1,w
  3451  0FDB  00D6               	movwf	?___lwmod+3
  3452  0FDC  085F               	movf	_LoadStockToArray$1128,w
  3453  0FDD  00D5               	movwf	?___lwmod+2
  3454  0FDE  0008               	return
  3455  0FDF                     PL5:	
  3456  0FDF  0823               	movf	_RiseStock+1,w
  3457  0FE0  00D6               	movwf	?___lwmod+3
  3458  0FE1  0822               	movf	_RiseStock,w
  3459  0FE2  00D5               	movwf	?___lwmod+2
  3460  0FE3  30E8               	movlw	232
  3461  0FE4  00D3               	movwf	?___lwmod
  3462  0FE5  3003               	movlw	3
  3463  0FE6  00D4               	movwf	?___lwmod+1
  3464  0FE7  0008               	return
  3465  0FE8                     PL7:	
  3466  0FE8  0825               	movf	_SugarStock+1,w
  3467  0FE9  00D6               	movwf	?___lwmod+3
  3468  0FEA  0824               	movf	_SugarStock,w
  3469  0FEB  00D5               	movwf	?___lwmod+2
  3470  0FEC  3064               	movlw	100
  3471  0FED  00D3               	movwf	?___lwmod
  3472  0FEE  01D4               	clrf	?___lwmod+1
  3473  0FEF  0008               	return
  3474  0FF0                     PL8:	
  3475  0FF0  0854               	movf	?___lwmod+1,w
  3476  0FF1  00D6               	movwf	?___lwmod+3
  3477  0FF2  0853               	movf	?___lwmod,w
  3478  0FF3  00D5               	movwf	?___lwmod+2
  3479  0FF4  3064               	movlw	100
  3480  0FF5  00D3               	movwf	?___lwmod
  3481  0FF6  01D4               	clrf	?___lwmod+1
  3482  0FF7  0008               	return
  3483  0FF8                     PL9:	
  3484  0FF8  0821               	movf	_KeroseneStock+1,w
  3485  0FF9  00D6               	movwf	?___lwmod+3
  3486  0FFA  0820               	movf	_KeroseneStock,w
  3487  0FFB  00D5               	movwf	?___lwmod+2
  3488  0FFC  3064               	movlw	100
  3489  0FFD  00D3               	movwf	?___lwmod
  3490  0FFE  01D4               	clrf	?___lwmod+1
  3491  0FFF  0008               	return
  3492                           
  3493                           	psect	text1182
  3494  0011                     __ptext1182:	
  3495 ;; =============== function _DisplayRise ends ============
  3496                           
  3497                           
  3498 ;; *************** function _DisplaySugar *****************
  3499 ;; Defined at:
  3500 ;;		line 126 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  Location        1    wreg     unsigned char 
  3503 ;;  Sugar           1    5[BANK0 ] unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  Location        1    6[BANK0 ] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;		None               void
  3508 ;; Registers used:
  3509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 60/0
  3512 ;;		On exit  : 60/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       1       0       0       0
  3516 ;;      Locals:         0       1       0       0       0
  3517 ;;      Temps:          0       0       0       0       0
  3518 ;;      Totals:         0       2       0       0       0
  3519 ;;Total ram usage:        2 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    5
  3522 ;; This function calls:
  3523 ;;		_lcdcmd
  3524 ;;		___lbdiv
  3525 ;;		_lcddata
  3526 ;;		___lbmod
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531  0011                     _DisplaySugar:	
  3532                           
  3533                           ; Regs used in _DisplaySugar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3534                           ;DisplaySugar@Location stored from wreg
  3535  0011  00D9               	movwf	DisplaySugar@Location
  3536                           
  3537                           ;Main.c: 127: lcdcmd(Location);
  3538  0012  222C  120A  118A   	fcall	_lcdcmd
  3539                           
  3540                           ;Main.c: 128: lcddata(digit[Sugar/10]);
  3541  0015  300A               	movlw	10
  3542  0016  00D3               	movwf	?___lbdiv
  3543  0017  0858               	movf	DisplaySugar@Sugar,w
  3544  0018  23B9               	fcall	___lbdiv
  3545  0019  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3546  001E  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3547  0023  232F               	fcall	_lcddata
  3548                           
  3549                           ;Main.c: 129: lcddata(digit[Sugar%10]);
  3550  0024  300A               	movlw	10
  3551  0025  00D3               	movwf	?___lbmod
  3552  0026  0858               	movf	DisplaySugar@Sugar,w
  3553  0027  120A  158A  2684   	fcall	___lbmod
      +       120A  118A         
  3554  002C  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3555  0031  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3556  0036  2B2F               	ljmp	_lcddata
  3557  0037                     __end_of_DisplaySugar:	
  3558  0037                     __ptext1178:	
  3559 ;; =============== function _startup ends ============
  3560                           
  3561                           
  3562 ;; *************** function _DisplayStock *****************
  3563 ;; Defined at:
  3564 ;;		line 112 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 60/0
  3575 ;;		On exit  : 60/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    6
  3585 ;; This function calls:
  3586 ;;		_lcdcmd
  3587 ;;		_lcdstring
  3588 ;;		_DisplayAmnt
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593  0037                     _DisplayStock:	
  3594                           
  3595                           ;Main.c: 113: lcdcmd(0x80);
  3596                           
  3597                           ; Regs used in _DisplayStock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3598  0037  3080               	movlw	128
  3599  0038  222C  120A  118A   	fcall	_lcdcmd
  3600                           
  3601                           ;Main.c: 114: lcdstring("    STOCK DETAILS   ");
  3602  003B  3044               	movlw	low (STR_19| (0+32768))
  3603  003C  00D8               	movwf	?_lcdstring
  3604  003D  3091               	movlw	high (STR_19| (0+32768))
  3605  003E  00D9               	movwf	?_lcdstring+1
  3606  003F  2243  120A  118A   	fcall	_lcdstring
  3607                           
  3608                           ;Main.c: 115: lcdcmd(0xC0);
  3609  0042  30C0               	movlw	192
  3610  0043  222C  120A  118A   	fcall	_lcdcmd
  3611                           
  3612                           ;Main.c: 116: lcdstring("RISE:      Kg       ");
  3613  0046  301A               	movlw	low (STR_20| (0+32768))
  3614  0047  00D8               	movwf	?_lcdstring
  3615  0048  3091               	movlw	high (STR_20| (0+32768))
  3616  0049  00D9               	movwf	?_lcdstring+1
  3617  004A  2243  120A  118A   	fcall	_lcdstring
  3618                           
  3619                           ;Main.c: 117: DisplayAmnt(0XC5,RiseStock);
  3620  004D  0823               	movf	_RiseStock+1,w
  3621  004E  00E2               	movwf	?_DisplayAmnt+1
  3622  004F  0822               	movf	_RiseStock,w
  3623  0050  00E1               	movwf	?_DisplayAmnt
  3624  0051  30C5               	movlw	197
  3625  0052  2275  120A  118A   	fcall	_DisplayAmnt
  3626                           
  3627                           ;Main.c: 118: lcdcmd(0x94);
  3628  0055  3094               	movlw	148
  3629  0056  222C  120A  118A   	fcall	_lcdcmd
  3630                           
  3631                           ;Main.c: 119: lcdstring("SUGAR:    Kg         ");
  3632  0059  3085               	movlw	low (STR_21| (0+32768))
  3633  005A  00D8               	movwf	?_lcdstring
  3634  005B  3090               	movlw	high (STR_21| (0+32768))
  3635  005C  00D9               	movwf	?_lcdstring+1
  3636  005D  2243  120A  118A   	fcall	_lcdstring
  3637                           
  3638                           ;Main.c: 120: DisplayAmnt(0x9A,SugarStock);
  3639  0060  0825               	movf	_SugarStock+1,w
  3640  0061  00E2               	movwf	?_DisplayAmnt+1
  3641  0062  0824               	movf	_SugarStock,w
  3642  0063  00E1               	movwf	?_DisplayAmnt
  3643  0064  309A               	movlw	154
  3644  0065  2275  120A  118A   	fcall	_DisplayAmnt
  3645                           
  3646                           ;Main.c: 121: lcdcmd(0xD4);
  3647  0068  30D4               	movlw	212
  3648  0069  222C  120A  118A   	fcall	_lcdcmd
  3649                           
  3650                           ;Main.c: 122: lcdstring("KEROSENE:     Lts    ");
  3651  006C  309B               	movlw	low (STR_22| (0+32768))
  3652  006D  00D8               	movwf	?_lcdstring
  3653  006E  3090               	movlw	high (STR_22| (0+32768))
  3654  006F  00D9               	movwf	?_lcdstring+1
  3655  0070  2243  120A  118A   	fcall	_lcdstring
  3656                           
  3657                           ;Main.c: 123: DisplayAmnt(0XDD,KeroseneStock);
  3658  0073  0821               	movf	_KeroseneStock+1,w
  3659  0074  00E2               	movwf	?_DisplayAmnt+1
  3660  0075  0820               	movf	_KeroseneStock,w
  3661  0076  00E1               	movwf	?_DisplayAmnt
  3662  0077  30DD               	movlw	221
  3663  0078  2A75               	ljmp	_DisplayAmnt
  3664  0079                     __end_of_DisplayStock:	
  3665  0079                     __ptext1186:	
  3666 ;; =============== function _lcd_init ends ============
  3667                           
  3668                           
  3669 ;; *************** function _SendStock *****************
  3670 ;; Defined at:
  3671 ;;		line 189 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  d               1    0        unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 60/0
  3682 ;;		On exit  : 60/20
  3683 ;;		Unchanged: FFE9F/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    5
  3692 ;; This function calls:
  3693 ;;		_usartstring
  3694 ;;		_transmit
  3695 ;;		_receive
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700  0079                     _SendStock:	
  3701                           
  3702                           ;Main.c: 190: unsigned char d;
  3703                           ;Main.c: 191: PIE1=0X00;
  3704                           
  3705                           ; Regs used in _SendStock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3706  0079  1683               	bsf	3,5	;RP0=1, select bank1
  3707  007A  018C               	clrf	12	;volatile
  3708                           
  3709                           ;Main.c: 192: usartstring("AT+CMGS=\"+919894748200\"");
  3710  007B  3055               	movlw	low (STR_27| (0+32768))
  3711  007C  1283               	bcf	3,5	;RP0=0, select bank0
  3712  007D  00D4               	movwf	?_usartstring
  3713  007E  3090               	movlw	high (STR_27| (0+32768))
  3714  007F  00D5               	movwf	?_usartstring+1
  3715  0080  20E2  120A  118A   	fcall	_usartstring
  3716                           
  3717                           ;Main.c: 193: transmit(0x0D);
  3718  0083  300D               	movlw	13
  3719  0084  218B  120A  118A   	fcall	_transmit
  3720  0087                     l4496:	
  3721                           ;Main.c: 194: while((d=receive())!='>');
  3722                           
  3723  0087  2182  120A  118A   	fcall	_receive
  3724  008A  3A3E               	xorlw	62
  3725  008B  1D03               	skipz
  3726  008C  2887               	goto	l4496
  3727                           
  3728                           ;Main.c: 195: usartstring("Rise Stock:");
  3729  008D  302F               	movlw	low (STR_28| (0+32768))
  3730  008E  00D4               	movwf	?_usartstring
  3731  008F  3092               	movlw	high (STR_28| (0+32768))
  3732  0090  00D5               	movwf	?_usartstring+1
  3733  0091  20E2  120A  118A   	fcall	_usartstring
  3734                           
  3735                           ;Main.c: 196: usartstring(RiseArray);
  3736  0094  3046               	movlw	_RiseArray& (0+255)
  3737  0095  00D4               	movwf	?_usartstring
  3738  0096  3000               	movlw	0
  3739  0097  00D5               	movwf	?_usartstring+1
  3740  0098  20E2  120A  118A   	fcall	_usartstring
  3741                           
  3742                           ;Main.c: 197: usartstring(" Kgs");
  3743  009B  306B               	movlw	low (STR_29| (0+32768))
  3744  009C  00D4               	movwf	?_usartstring
  3745  009D  3092               	movlw	high (STR_29| (0+32768))
  3746  009E  00D5               	movwf	?_usartstring+1
  3747  009F  20E2  120A  118A   	fcall	_usartstring
  3748                           
  3749                           ;Main.c: 198: transmit('\r');
  3750  00A2  300D               	movlw	13
  3751  00A3  218B  120A  118A   	fcall	_transmit
  3752                           
  3753                           ;Main.c: 199: usartstring("Sugar Stock:");
  3754  00A6  3022               	movlw	low (STR_30| (0+32768))
  3755  00A7  00D4               	movwf	?_usartstring
  3756  00A8  3092               	movlw	high (STR_30| (0+32768))
  3757  00A9  00D5               	movwf	?_usartstring+1
  3758  00AA  20E2  120A  118A   	fcall	_usartstring
  3759                           
  3760                           ;Main.c: 200: usartstring(SugarArray);
  3761  00AD  304F               	movlw	_SugarArray& (0+255)
  3762  00AE  00D4               	movwf	?_usartstring
  3763  00AF  3000               	movlw	0
  3764  00B0  00D5               	movwf	?_usartstring+1
  3765  00B1  20E2  120A  118A   	fcall	_usartstring
  3766                           
  3767                           ;Main.c: 201: usartstring(" Kgs");
  3768  00B4  306B               	movlw	low (STR_29| (0+32768))
  3769  00B5  00D4               	movwf	?_usartstring
  3770  00B6  3092               	movlw	high (STR_29| (0+32768))
  3771  00B7  00D5               	movwf	?_usartstring+1
  3772  00B8  20E2  120A  118A   	fcall	_usartstring
  3773                           
  3774                           ;Main.c: 202: transmit('\r');
  3775  00BB  300D               	movlw	13
  3776  00BC  218B  120A  118A   	fcall	_transmit
  3777                           
  3778                           ;Main.c: 203: usartstring("Kerosene Stock:");
  3779  00BF  3012               	movlw	low (STR_32| (0+32768))
  3780  00C0  00D4               	movwf	?_usartstring
  3781  00C1  3092               	movlw	high (STR_32| (0+32768))
  3782  00C2  00D5               	movwf	?_usartstring+1
  3783  00C3  20E2  120A  118A   	fcall	_usartstring
  3784                           
  3785                           ;Main.c: 204: usartstring(KeroseneArray);
  3786  00C6  304B               	movlw	_KeroseneArray& (0+255)
  3787  00C7  00D4               	movwf	?_usartstring
  3788  00C8  3000               	movlw	0
  3789  00C9  00D5               	movwf	?_usartstring+1
  3790  00CA  20E2  120A  118A   	fcall	_usartstring
  3791                           
  3792                           ;Main.c: 205: usartstring(" Lts");
  3793  00CD  3070               	movlw	low (STR_33| (0+32768))
  3794  00CE  00D4               	movwf	?_usartstring
  3795  00CF  3092               	movlw	high (STR_33| (0+32768))
  3796  00D0  00D5               	movwf	?_usartstring+1
  3797  00D1  20E2  120A  118A   	fcall	_usartstring
  3798                           
  3799                           ;Main.c: 206: transmit(0x1A);
  3800  00D4  301A               	movlw	26
  3801  00D5  218B  120A  118A   	fcall	_transmit
  3802  00D8                     l4516:	
  3803                           ;Main.c: 207: while((d=receive())!='K');
  3804                           
  3805  00D8  2182  120A  118A   	fcall	_receive
  3806  00DB  3A4B               	xorlw	75
  3807  00DC  1D03               	skipz
  3808  00DD  28D8               	goto	l4516
  3809                           
  3810                           ;Main.c: 208: PIE1=0X20;
  3811  00DE  3020               	movlw	32
  3812  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  3813  00E0  008C               	movwf	12	;volatile
  3814  00E1  0008               	return
  3815  00E2                     __end_of_SendStock:	
  3816  00E2                     __ptext1194:	
  3817 ;; =============== function _ReadAmnt ends ============
  3818                           
  3819                           
  3820 ;; *************** function _usartstring *****************
  3821 ;; Defined at:
  3822 ;;		line 22 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  st              2    1[BANK0 ] PTR const unsigned char 
  3825 ;;		 -> STR_33(5), STR_32(16), STR_31(5), STR_30(13), 
  3826 ;;		 -> STR_29(5), STR_28(12), STR_27(24), KeroseneArray(4), 
  3827 ;;		 -> SugarArray(4), RiseArray(5), STR_18(20), STR_17(24), 
  3828 ;;		 -> STR_16(20), STR_15(24), STR_14(20), STR_13(24), 
  3829 ;;		 -> STR_12(29), STR_11(24), STR_10(27), STR_9(24), 
  3830 ;;		 -> STR_7(19), STR_6(11), STR_5(11), STR_4(10), 
  3831 ;;		 -> STR_3(4), 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;		None               void
  3836 ;; Registers used:
  3837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 60/0
  3840 ;;		On exit  : 60/0
  3841 ;;		Unchanged: FFE9F/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       2       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       2       0       0       0
  3847 ;;Total ram usage:        2 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    4
  3850 ;; This function calls:
  3851 ;;		_transmit
  3852 ;; This function is called by:
  3853 ;;		_gsm_init
  3854 ;;		_SendStock
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857  00E2                     _usartstring:	
  3858  00E2                     l4418:	
  3859                           ;UART.C: 23: while(*st)
  3860                           
  3861                           ; Regs used in _usartstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3862                           
  3863  00E2  0855               	movf	usartstring@st+1,w
  3864  00E3  00FF               	movwf	127
  3865  00E4  0854               	movf	usartstring@st,w
  3866  00E5  0084               	movwf	4
  3867  00E6  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3868  00EB  3800               	iorlw	0
  3869  00EC  1903               	btfsc	3,2
  3870  00ED  0008               	return
  3871                           
  3872                           ;UART.C: 24: transmit(*st++);
  3873  00EE  0855               	movf	usartstring@st+1,w
  3874  00EF  00FF               	movwf	127
  3875  00F0  0854               	movf	usartstring@st,w
  3876  00F1  0084               	movwf	4
  3877  00F2  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3878  00F7  218B  120A  118A   	fcall	_transmit
  3879  00FA  0AD4               	incf	usartstring@st,f
  3880  00FB  1903               	skipnz
  3881  00FC  0AD5               	incf	usartstring@st+1,f
  3882  00FD  28E2               	goto	l4418
  3883  00FE                     __end_of_usartstring:	
  3884  00FE                     __ptext1179:	
  3885 ;; =============== function _DisplayStock ends ============
  3886                           
  3887                           
  3888 ;; *************** function _gsm_init *****************
  3889 ;; Defined at:
  3890 ;;		line 29 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  d               1    0        unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/40
  3901 ;;		On exit  : 60/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    6
  3911 ;; This function calls:
  3912 ;;		_lcdcmd
  3913 ;;		_lcdstring
  3914 ;;		_DelayS
  3915 ;;		_usartstring
  3916 ;;		_transmit
  3917 ;;		_receive
  3918 ;; This function is called by:
  3919 ;;		_main
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922  00FE                     _gsm_init:	
  3923                           
  3924                           ;UART.C: 30: unsigned char d;
  3925                           ;UART.C: 31: lcdcmd(0X80);
  3926                           
  3927                           ; Regs used in _gsm_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3928  00FE  3080               	movlw	128
  3929  00FF  222C  120A  118A   	fcall	_lcdcmd
  3930                           
  3931                           ;UART.C: 32: lcdstring("GSM INITIALIZING");
  3932  0102  3001               	movlw	low (STR_1| (0+32768))
  3933  0103  00D8               	movwf	?_lcdstring
  3934  0104  3092               	movlw	high (STR_1| (0+32768))
  3935  0105  00D9               	movwf	?_lcdstring+1
  3936  0106  2243  120A  118A   	fcall	_lcdstring
  3937                           
  3938                           ;UART.C: 33: lcdcmd(0XC0);
  3939  0109  30C0               	movlw	192
  3940  010A  222C  120A  118A   	fcall	_lcdcmd
  3941                           
  3942                           ;UART.C: 34: lcdstring("PLS WAIT........");
  3943  010D  30F0               	movlw	low (STR_2| (0+32768))
  3944  010E  00D8               	movwf	?_lcdstring
  3945  010F  3091               	movlw	high (STR_2| (0+32768))
  3946  0110  00D9               	movwf	?_lcdstring+1
  3947  0111  2243  120A  118A   	fcall	_lcdstring
  3948                           
  3949                           ;UART.C: 35: DelayS(5);
  3950  0114  3005               	movlw	5
  3951  0115  239A  120A  118A   	fcall	_DelayS
  3952                           
  3953                           ;UART.C: 36: lcdcmd(0x01);
  3954  0118  3001               	movlw	1
  3955  0119  222C  120A  118A   	fcall	_lcdcmd
  3956                           
  3957                           ;UART.C: 38: usartstring("AT\r");
  3958  011C  3075               	movlw	low (STR_3| (0+32768))
  3959  011D  00D4               	movwf	?_usartstring
  3960  011E  3092               	movlw	high (STR_3| (0+32768))
  3961  011F  00D5               	movwf	?_usartstring+1
  3962  0120  20E2  120A  118A   	fcall	_usartstring
  3963                           
  3964                           ;UART.C: 39: transmit(0x0D);
  3965  0123  300D               	movlw	13
  3966  0124  218B  120A  118A   	fcall	_transmit
  3967  0127                     l4578:	
  3968                           ;UART.C: 40: while((d=receive())!='K');
  3969                           
  3970  0127  2182  120A  118A   	fcall	_receive
  3971  012A  3A4B               	xorlw	75
  3972  012B  1D03               	skipz
  3973  012C  2927               	goto	l4578
  3974                           
  3975                           ;UART.C: 42: usartstring("AT+CPIN?\r");
  3976  012D  3051               	movlw	low (STR_4| (0+32768))
  3977  012E  00D4               	movwf	?_usartstring
  3978  012F  3092               	movlw	high (STR_4| (0+32768))
  3979  0130  00D5               	movwf	?_usartstring+1
  3980  0131  20E2  120A  118A   	fcall	_usartstring
  3981                           
  3982                           ;UART.C: 43: transmit(0x0D);
  3983  0134  300D               	movlw	13
  3984  0135  218B  120A  118A   	fcall	_transmit
  3985  0138                     l4584:	
  3986                           ;UART.C: 44: while((d=receive())!='K');
  3987                           
  3988  0138  2182  120A  118A   	fcall	_receive
  3989  013B  3A4B               	xorlw	75
  3990  013C  1D03               	skipz
  3991  013D  2938               	goto	l4584
  3992                           
  3993                           ;UART.C: 46: usartstring("AT+CSDH=1\r");
  3994  013E  3046               	movlw	low (STR_5| (0+32768))
  3995  013F  00D4               	movwf	?_usartstring
  3996  0140  3092               	movlw	high (STR_5| (0+32768))
  3997  0141  00D5               	movwf	?_usartstring+1
  3998  0142  20E2  120A  118A   	fcall	_usartstring
  3999                           
  4000                           ;UART.C: 47: transmit(0x0D);
  4001  0145  300D               	movlw	13
  4002  0146  218B  120A  118A   	fcall	_transmit
  4003  0149                     l4590:	
  4004                           ;UART.C: 48: while((d=receive())!='K');
  4005                           
  4006  0149  2182  120A  118A   	fcall	_receive
  4007  014C  3A4B               	xorlw	75
  4008  014D  1D03               	skipz
  4009  014E  2949               	goto	l4590
  4010                           
  4011                           ;UART.C: 50: usartstring("AT+CMGF=1\r");
  4012  014F  303B               	movlw	low (STR_6| (0+32768))
  4013  0150  00D4               	movwf	?_usartstring
  4014  0151  3092               	movlw	high (STR_6| (0+32768))
  4015  0152  00D5               	movwf	?_usartstring+1
  4016  0153  20E2  120A  118A   	fcall	_usartstring
  4017                           
  4018                           ;UART.C: 51: transmit(0x0D);
  4019  0156  300D               	movlw	13
  4020  0157  218B  120A  118A   	fcall	_transmit
  4021  015A                     l4596:	
  4022                           ;UART.C: 52: while((d=receive())!='K');
  4023                           
  4024  015A  2182  120A  118A   	fcall	_receive
  4025  015D  3A4B               	xorlw	75
  4026  015E  1D03               	skipz
  4027  015F  295A               	goto	l4596
  4028                           
  4029                           ;UART.C: 54: usartstring("AT+CNMI=2,2,0,0,0\r");
  4030  0160  3095               	movlw	low (STR_7| (0+32768))
  4031  0161  00D4               	movwf	?_usartstring
  4032  0162  3091               	movlw	high (STR_7| (0+32768))
  4033  0163  00D5               	movwf	?_usartstring+1
  4034  0164  20E2  120A  118A   	fcall	_usartstring
  4035                           
  4036                           ;UART.C: 55: transmit(0x0D);
  4037  0167  300D               	movlw	13
  4038  0168  218B  120A  118A   	fcall	_transmit
  4039  016B                     l4602:	
  4040                           ;UART.C: 56: while((d=receive())!='K');
  4041                           
  4042  016B  2182  120A  118A   	fcall	_receive
  4043  016E  3A4B               	xorlw	75
  4044  016F  1D03               	skipz
  4045  0170  296B               	goto	l4602
  4046                           
  4047                           ;UART.C: 57: lcdcmd(0x80);
  4048  0171  3080               	movlw	128
  4049  0172  222C  120A  118A   	fcall	_lcdcmd
  4050                           
  4051                           ;UART.C: 58: lcdstring("GSM READY");
  4052  0175  305B               	movlw	low (STR_8| (0+32768))
  4053  0176  00D8               	movwf	?_lcdstring
  4054  0177  3092               	movlw	high (STR_8| (0+32768))
  4055  0178  00D9               	movwf	?_lcdstring+1
  4056  0179  2243  120A  118A   	fcall	_lcdstring
  4057                           
  4058                           ;UART.C: 59: DelayS(10);
  4059  017C  300A               	movlw	10
  4060  017D  239A  120A  118A   	fcall	_DelayS
  4061                           
  4062                           ;UART.C: 60: lcdcmd(0x01);
  4063  0180  3001               	movlw	1
  4064  0181  2A2C               	ljmp	_lcdcmd
  4065  0182                     __end_of_gsm_init:	
  4066  0182                     __ptext1212:	
  4067 ;; =============== function _transmit ends ============
  4068                           
  4069                           
  4070 ;; *************** function _receive *****************
  4071 ;; Defined at:
  4072 ;;		line 2 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      unsigned char 
  4079 ;; Registers used:
  4080 ;;		wreg
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 60/0
  4084 ;;		Unchanged: FFF9F/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4086 ;;      Params:         0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    3
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_gsm_init
  4097 ;;		_SendStock
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100  0182                     _receive:	
  4101  0182  23E5               	call	PL11	;select bank 0
  4102                           
  4103                           ;UART.C: 3: if(OERR){CREN=0;CREN=1;}
  4104                           
  4105                           ; Regs used in _receive: [wreg]
  4106  0183  1C98               	btfss	24,1
  4107  0184  2987               	goto	l1015
  4108  0185  1218               	bcf	24,4
  4109  0186  1618               	bsf	24,4
  4110  0187                     l1015:	
  4111  0187  1E8C               	btfss	12,5
  4112  0188  2987               	goto	l1015
  4113                           
  4114                           ;UART.C: 5: return(RCREG);
  4115  0189  081A               	movf	26,w	;volatile
  4116  018A  0008               	return
  4117  018B                     __end_of_receive:	
  4118  018B                     __ptext1211:	
  4119 ;; =============== function _eeprom_read ends ============
  4120                           
  4121                           
  4122 ;; *************** function _transmit *****************
  4123 ;; Defined at:
  4124 ;;		line 8 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  data            1    wreg     unsigned char 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  data            1    0[BANK0 ] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;		None               void
  4131 ;; Registers used:
  4132 ;;		wreg
  4133 ;; Tracked objects:
  4134 ;;		On entry : 60/0
  4135 ;;		On exit  : 60/0
  4136 ;;		Unchanged: FFF9F/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       0       0       0       0
  4139 ;;      Locals:         0       1       0       0       0
  4140 ;;      Temps:          0       0       0       0       0
  4141 ;;      Totals:         0       1       0       0       0
  4142 ;;Total ram usage:        1 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    3
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_usartstring
  4149 ;;		_gsm_init
  4150 ;;		_SendStock
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153  018B                     _transmit:	
  4154                           
  4155                           ; Regs used in _transmit: [wreg]
  4156                           ;transmit@data stored from wreg
  4157  018B  00D3               	movwf	transmit@data
  4158  018C                     l1021:	
  4159                           ;UART.C: 9: while(!TXIF);
  4160                           
  4161  018C  1E0C               	btfss	12,4
  4162  018D  298C               	goto	l1021
  4163                           
  4164                           ;UART.C: 10: TXREG =data;
  4165  018E  0853               	movf	transmit@data,w
  4166  018F  0099               	movwf	25	;volatile
  4167  0190  0008               	return
  4168  0191                     __end_of_transmit:	
  4169  0191                     __ptext1177:	
  4170 ;; =============== function _main ends ============
  4171                           
  4172                           
  4173 ;; *************** function _startup *****************
  4174 ;; Defined at:
  4175 ;;		line 159 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;		None               void
  4182 ;; Registers used:
  4183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/40
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4189 ;;      Params:         0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0
  4191 ;;      Temps:          0       3       0       0       0
  4192 ;;      Totals:         0       3       0       0       0
  4193 ;;Total ram usage:        3 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    6
  4196 ;; This function calls:
  4197 ;;		_lcdcmd
  4198 ;;		_lcdstring
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203  0191                     _startup:	
  4204                           
  4205                           ;Main.c: 160: lcdcmd(0x80);
  4206                           
  4207                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4208  0191  3080               	movlw	128
  4209  0192  222C  120A  118A   	fcall	_lcdcmd
  4210                           
  4211                           ;Main.c: 161: lcdstring("AUTOMATIC RATION ");
  4212  0195  30DE               	movlw	low (STR_23| (0+32768))
  4213  0196  00D8               	movwf	?_lcdstring
  4214  0197  3091               	movlw	high (STR_23| (0+32768))
  4215  0198  00D9               	movwf	?_lcdstring+1
  4216  0199  2243  120A  118A   	fcall	_lcdstring
  4217                           
  4218                           ;Main.c: 162: lcdcmd(0xC0);
  4219  019C  30C0               	movlw	192
  4220  019D  222C  120A  118A   	fcall	_lcdcmd
  4221                           
  4222                           ;Main.c: 163: lcdstring("   CARD SYSTEM   ");
  4223  01A0  30BA               	movlw	low (STR_24| (0+32768))
  4224  01A1  00D8               	movwf	?_lcdstring
  4225  01A2  3091               	movlw	high (STR_24| (0+32768))
  4226  01A3  00D9               	movwf	?_lcdstring+1
  4227  01A4  2243  120A  118A   	fcall	_lcdstring
  4228                           
  4229                           ;Main.c: 164: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4230  01A7  301A               	movlw	26
  4231  01A8  00DC               	movwf	??_startup+2
  4232  01A9  3045               	movlw	69
  4233  01AA  00DB               	movwf	??_startup+1
  4234  01AB  307E               	movlw	126
  4235  01AC  00DA               	movwf	??_startup
  4236  01AD                     u2127:	
  4237  01AD  0BDA               	decfsz	??_startup,f
  4238  01AE  29AD               	goto	u2127
  4239  01AF  0BDB               	decfsz	??_startup+1,f
  4240  01B0  29AD               	goto	u2127
  4241  01B1  0BDC               	decfsz	??_startup+2,f
  4242  01B2  29AD               	goto	u2127
  4243                           
  4244                           ;Main.c: 165: lcdcmd(0x01);
  4245  01B3  3001               	movlw	1
  4246  01B4  222C  120A  118A   	fcall	_lcdcmd
  4247                           
  4248                           ;Main.c: 166: _delay((unsigned long)((500)*(20000000/4000.0)));
  4249  01B7  300D               	movlw	13
  4250  01B8  00DC               	movwf	??_startup+2
  4251  01B9  30A3               	movlw	163
  4252  01BA  00DB               	movwf	??_startup+1
  4253  01BB  30BD               	movlw	189
  4254  01BC  00DA               	movwf	??_startup
  4255  01BD                     u2137:	
  4256  01BD  0BDA               	decfsz	??_startup,f
  4257  01BE  29BD               	goto	u2137
  4258  01BF  0BDB               	decfsz	??_startup+1,f
  4259  01C0  29BD               	goto	u2137
  4260  01C1  0BDC               	decfsz	??_startup+2,f
  4261  01C2  29BD               	goto	u2137
  4262  01C3  0064               	clrwdt
  4263                           
  4264                           ;Main.c: 167: lcdcmd(0x80);
  4265  01C4  3080               	movlw	128
  4266  01C5  222C  120A  118A   	fcall	_lcdcmd
  4267                           
  4268                           ;Main.c: 168: lcdstring("PLEASE TAP YOUR  ");
  4269  01C8  30CC               	movlw	low (STR_25| (0+32768))
  4270  01C9  00D8               	movwf	?_lcdstring
  4271  01CA  3091               	movlw	high (STR_25| (0+32768))
  4272  01CB  00D9               	movwf	?_lcdstring+1
  4273  01CC  2243  120A  118A   	fcall	_lcdstring
  4274                           
  4275                           ;Main.c: 169: lcdcmd(0xC0);
  4276  01CF  30C0               	movlw	192
  4277  01D0  222C  120A  118A   	fcall	_lcdcmd
  4278                           
  4279                           ;Main.c: 170: lcdstring("SMART CARD       ");
  4280  01D3  30A8               	movlw	low (STR_26| (0+32768))
  4281  01D4  00D8               	movwf	?_lcdstring
  4282  01D5  3091               	movlw	high (STR_26| (0+32768))
  4283  01D6  00D9               	movwf	?_lcdstring+1
  4284  01D7  2243  120A  118A   	fcall	_lcdstring
  4285                           
  4286                           ;Main.c: 171: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4287  01DA  301A               	movlw	26
  4288  01DB  00DC               	movwf	??_startup+2
  4289  01DC  3045               	movlw	69
  4290  01DD  00DB               	movwf	??_startup+1
  4291  01DE  307E               	movlw	126
  4292  01DF  00DA               	movwf	??_startup
  4293  01E0                     u2147:	
  4294  01E0  0BDA               	decfsz	??_startup,f
  4295  01E1  29E0               	goto	u2147
  4296  01E2  0BDB               	decfsz	??_startup+1,f
  4297  01E3  29E0               	goto	u2147
  4298  01E4  0BDC               	decfsz	??_startup+2,f
  4299  01E5  29E0               	goto	u2147
  4300  01E6  0008               	return
  4301  01E7                     __end_of_startup:	
  4302  01E7                     __ptext1185:	
  4303 ;; =============== function _lcdstring ends ============
  4304                           
  4305                           
  4306 ;; *************** function _lcd_init *****************
  4307 ;; Defined at:
  4308 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;		None               void
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 17F/0
  4319 ;;		On exit  : 60/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4322 ;;      Params:         0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0
  4324 ;;      Temps:          0       2       0       0       0
  4325 ;;      Totals:         0       2       0       0       0
  4326 ;;Total ram usage:        2 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    5
  4329 ;; This function calls:
  4330 ;;		_lcdport
  4331 ;;		_lcdcmd
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336  01E7                     _lcd_init:	
  4337                           
  4338                           ;lcd.c: 72: lcdport(0x00);
  4339                           
  4340                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4341  01E7  3000               	movlw	0
  4342  01E8  225F  120A  118A   	fcall	_lcdport
  4343                           
  4344                           ;lcd.c: 73: _delay((unsigned long)((20)*(20000000/4000.0)));
  4345  01EB  3082               	movlw	130
  4346  01EC  00D9               	movwf	??_lcd_init+1
  4347  01ED  30DD               	movlw	221
  4348  01EE  00D8               	movwf	??_lcd_init
  4349  01EF                     u2157:	
  4350  01EF  0BD8               	decfsz	??_lcd_init,f
  4351  01F0  29EF               	goto	u2157
  4352  01F1  0BD9               	decfsz	??_lcd_init+1,f
  4353  01F2  29EF               	goto	u2157
  4354  01F3  29F4               	nop2
  4355                           
  4356                           ;lcd.c: 74: lcdcmd(0x03);
  4357  01F4  3003               	movlw	3
  4358  01F5  222C  120A  118A   	fcall	_lcdcmd
  4359                           
  4360                           ;lcd.c: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
  4361  01F8  3021               	movlw	33
  4362  01F9  00D9               	movwf	??_lcd_init+1
  4363  01FA  3076               	movlw	118
  4364  01FB  00D8               	movwf	??_lcd_init
  4365  01FC                     u2167:	
  4366  01FC  0BD8               	decfsz	??_lcd_init,f
  4367  01FD  29FC               	goto	u2167
  4368  01FE  0BD9               	decfsz	??_lcd_init+1,f
  4369  01FF  29FC               	goto	u2167
  4370  0200  0064               	clrwdt
  4371                           
  4372                           ;lcd.c: 76: lcdcmd(0x03);
  4373  0201  3003               	movlw	3
  4374  0202  222C  120A  118A   	fcall	_lcdcmd
  4375                           
  4376                           ;lcd.c: 77: _delay((unsigned long)((11)*(20000000/4000.0)));
  4377  0205  3048               	movlw	72
  4378  0206  00D9               	movwf	??_lcd_init+1
  4379  0207  306C               	movlw	108
  4380  0208  00D8               	movwf	??_lcd_init
  4381  0209                     u2177:	
  4382  0209  0BD8               	decfsz	??_lcd_init,f
  4383  020A  2A09               	goto	u2177
  4384  020B  0BD9               	decfsz	??_lcd_init+1,f
  4385  020C  2A09               	goto	u2177
  4386  020D  0064               	clrwdt
  4387                           
  4388                           ;lcd.c: 78: lcdcmd(0x03);
  4389  020E  3003               	movlw	3
  4390  020F  222C  120A  118A   	fcall	_lcdcmd
  4391                           
  4392                           ;lcd.c: 80: lcdcmd(0x02);
  4393  0212  3002               	movlw	2
  4394  0213  222C  120A  118A   	fcall	_lcdcmd
  4395                           
  4396                           ;lcd.c: 81: lcdcmd(0x02);
  4397  0216  3002               	movlw	2
  4398  0217  222C  120A  118A   	fcall	_lcdcmd
  4399                           
  4400                           ;lcd.c: 82: lcdcmd(0x28);
  4401  021A  3028               	movlw	40
  4402  021B  222C  120A  118A   	fcall	_lcdcmd
  4403                           
  4404                           ;lcd.c: 83: lcdcmd(0x00);
  4405  021E  3000               	movlw	0
  4406  021F  222C  120A  118A   	fcall	_lcdcmd
  4407                           
  4408                           ;lcd.c: 84: lcdcmd(0x0C);
  4409  0222  300C               	movlw	12
  4410  0223  222C  120A  118A   	fcall	_lcdcmd
  4411                           
  4412                           ;lcd.c: 85: lcdcmd(0x00);
  4413  0226  3000               	movlw	0
  4414  0227  222C  120A  118A   	fcall	_lcdcmd
  4415                           
  4416                           ;lcd.c: 86: lcdcmd(0x06);
  4417  022A  3006               	movlw	6
  4418  022B  2A2C               	ljmp	_lcdcmd
  4419  022C                     __end_of_lcd_init:	
  4420  022C                     __ptext1189:	
  4421 ;; =============== function _lcddata ends ============
  4422                           
  4423                           
  4424 ;; *************** function _lcdcmd *****************
  4425 ;; Defined at:
  4426 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  a               1    wreg     unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  a               1    4[BANK0 ] unsigned char 
  4431 ;;  z               1    3[BANK0 ] unsigned char 
  4432 ;;  y               1    2[BANK0 ] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 60/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4442 ;;      Params:         0       0       0       0       0
  4443 ;;      Locals:         0       3       0       0       0
  4444 ;;      Temps:          0       0       0       0       0
  4445 ;;      Totals:         0       3       0       0       0
  4446 ;;Total ram usage:        3 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    4
  4449 ;; This function calls:
  4450 ;;		_lcdport
  4451 ;;		_enable
  4452 ;; This function is called by:
  4453 ;;		_lcd_init
  4454 ;;		_gsm_init
  4455 ;;		_DisplayAmnt
  4456 ;;		_DisplayStock
  4457 ;;		_DisplaySugar
  4458 ;;		_DisplayRise
  4459 ;;		_DisplayKerosene
  4460 ;;		_startup
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464  022C                     _lcdcmd:	
  4465  022C  23E5               	call	PL11	;select bank 0
  4466                           
  4467                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+pclath+cstack]
  4468                           ;lcdcmd@a stored from wreg
  4469  022D  00D7               	movwf	lcdcmd@a
  4470                           
  4471                           ;lcd.c: 40: unsigned char y,z;
  4472                           ;lcd.c: 41: z=a>>4&0x0F;
  4473  022E  0E57               	swapf	lcdcmd@a,w
  4474  022F  390F               	andlw	15
  4475  0230  00D6               	movwf	lcdcmd@z
  4476  0231  300F               	movlw	15
  4477  0232  05D6               	andwf	lcdcmd@z,f
  4478                           
  4479                           ;lcd.c: 42: y=a&0x0F;
  4480  0233  0857               	movf	lcdcmd@a,w
  4481  0234  00D5               	movwf	lcdcmd@y
  4482  0235  300F               	movlw	15
  4483  0236  05D5               	andwf	lcdcmd@y,f
  4484                           
  4485                           ;lcd.c: 44: lcdport(z);
  4486  0237  0856               	movf	lcdcmd@z,w
  4487  0238  225F  120A  118A   	fcall	_lcdport
  4488                           
  4489                           ;lcd.c: 45: enable();
  4490  023B  238D  120A  118A   	fcall	_enable
  4491                           
  4492                           ;lcd.c: 46: lcdport(y);
  4493  023E  0855               	movf	lcdcmd@y,w
  4494  023F  225F  120A  118A   	fcall	_lcdport
  4495                           
  4496                           ;lcd.c: 47: enable();
  4497  0242  2B8D               	ljmp	l4378
  4498  0243                     __end_of_lcdcmd:	
  4499  0243                     __ptext1184:	
  4500 ;; =============== function _DisplayAmnt ends ============
  4501                           
  4502                           
  4503 ;; *************** function _lcdstring *****************
  4504 ;; Defined at:
  4505 ;;		line 90 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  a               2    5[BANK0 ] PTR const unsigned char 
  4508 ;;		 -> STR_47(21), STR_46(21), STR_45(21), STR_44(21), 
  4509 ;;		 -> STR_43(21), STR_42(21), STR_41(21), STR_40(21), 
  4510 ;;		 -> STR_39(21), STR_38(21), STR_37(21), STR_36(21), 
  4511 ;;		 -> STR_35(18), STR_34(18), STR_26(18), STR_25(18), 
  4512 ;;		 -> STR_24(18), STR_23(18), STR_22(22), STR_21(22), 
  4513 ;;		 -> STR_20(21), STR_19(21), sms(20), STR_8(10), 
  4514 ;;		 -> STR_2(17), STR_1(17), 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;		None               void
  4519 ;; Registers used:
  4520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 60/0
  4523 ;;		On exit  : 60/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4526 ;;      Params:         0       2       0       0       0
  4527 ;;      Locals:         0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0
  4529 ;;      Totals:         0       2       0       0       0
  4530 ;;Total ram usage:        2 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    5
  4533 ;; This function calls:
  4534 ;;		_lcddata
  4535 ;; This function is called by:
  4536 ;;		_gsm_init
  4537 ;;		_DisplayStock
  4538 ;;		_startup
  4539 ;;		_main
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542  0243                     _lcdstring:	
  4543  0243                     l4536:	
  4544                           ;lcd.c: 91: while(*a)
  4545                           
  4546                           ; Regs used in _lcdstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4547                           
  4548  0243  0859               	movf	lcdstring@a+1,w
  4549  0244  00FF               	movwf	127
  4550  0245  0858               	movf	lcdstring@a,w
  4551  0246  0084               	movwf	4
  4552  0247  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4553  024C  3800               	iorlw	0
  4554  024D  1903               	btfsc	3,2
  4555  024E  0008               	return
  4556                           
  4557                           ;lcd.c: 92: {
  4558                           ;lcd.c: 93: lcddata(*a++);
  4559  024F  0859               	movf	lcdstring@a+1,w
  4560  0250  00FF               	movwf	127
  4561  0251  0858               	movf	lcdstring@a,w
  4562  0252  0084               	movwf	4
  4563  0253  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4564  0258  232F  120A  118A   	fcall	_lcddata
  4565  025B  0AD8               	incf	lcdstring@a,f
  4566  025C  1903               	skipnz
  4567  025D  0AD9               	incf	lcdstring@a+1,f
  4568  025E  2A43               	goto	l4536
  4569  025F                     __end_of_lcdstring:	
  4570  025F                     __ptext1213:	
  4571 ;; =============== function _receive ends ============
  4572                           
  4573                           
  4574 ;; *************** function _lcdport *****************
  4575 ;; Defined at:
  4576 ;;		line 16 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  a               1    wreg     unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  a               1    0[BANK0 ] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg
  4585 ;; Tracked objects:
  4586 ;;		On entry : 60/0
  4587 ;;		On exit  : 60/0
  4588 ;;		Unchanged: FFF9F/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       0       0       0       0
  4591 ;;      Locals:         0       1       0       0       0
  4592 ;;      Temps:          0       0       0       0       0
  4593 ;;      Totals:         0       1       0       0       0
  4594 ;;Total ram usage:        1 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    3
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_lcdcmd
  4601 ;;		_lcddata
  4602 ;;		_lcd_init
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605  025F                     _lcdport:	
  4606                           
  4607                           ; Regs used in _lcdport: [wreg]
  4608                           ;lcdport@a stored from wreg
  4609  025F  00D3               	movwf	lcdport@a
  4610                           
  4611                           ;lcd.c: 17: if(a & 1)
  4612  0260  1C53               	btfss	lcdport@a,0
  4613  0261  2A64               	goto	l954
  4614                           
  4615                           ;lcd.c: 18: RD4 = 1;
  4616  0262  1608               	bsf	8,4
  4617  0263  2A65               	goto	l955
  4618  0264                     l954:	
  4619                           
  4620                           ;lcd.c: 19: else
  4621                           ;lcd.c: 20: RD4 = 0;
  4622  0264  1208               	bcf	8,4
  4623  0265                     l955:	
  4624                           
  4625                           ;lcd.c: 22: if(a & 2)
  4626  0265  1CD3               	btfss	lcdport@a,1
  4627  0266  2A69               	goto	l956
  4628                           
  4629                           ;lcd.c: 23: RD5 = 1;
  4630  0267  1688               	bsf	8,5
  4631  0268  2A6A               	goto	l957
  4632  0269                     l956:	
  4633                           
  4634                           ;lcd.c: 24: else
  4635                           ;lcd.c: 25: RD5 = 0;
  4636  0269  1288               	bcf	8,5
  4637  026A                     l957:	
  4638                           
  4639                           ;lcd.c: 27: if(a & 4)
  4640  026A  1D53               	btfss	lcdport@a,2
  4641  026B  2A6E               	goto	l958
  4642                           
  4643                           ;lcd.c: 28: RD6 = 1;
  4644  026C  1708               	bsf	8,6
  4645  026D  2A6F               	goto	l959
  4646  026E                     l958:	
  4647                           
  4648                           ;lcd.c: 29: else
  4649                           ;lcd.c: 30: RD6 = 0;
  4650  026E  1308               	bcf	8,6
  4651  026F                     l959:	
  4652                           
  4653                           ;lcd.c: 32: if(a & 8)
  4654  026F  1DD3               	btfss	lcdport@a,3
  4655  0270  2A73               	goto	l960
  4656                           
  4657                           ;lcd.c: 33: RD7 = 1;
  4658  0271  1788               	bsf	8,7
  4659  0272  0008               	return
  4660  0273                     l960:	
  4661                           
  4662                           ;lcd.c: 34: else
  4663                           ;lcd.c: 35: RD7 = 0;
  4664  0273  1388               	bcf	8,7
  4665  0274  0008               	return
  4666  0275                     __end_of_lcdport:	
  4667  0275                     __ptext1183:	
  4668 ;; =============== function _DisplaySugar ends ============
  4669                           
  4670                           
  4671 ;; *************** function _DisplayAmnt *****************
  4672 ;; Defined at:
  4673 ;;		line 80 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  Location        1    wreg     unsigned char 
  4676 ;;  Amnt            2   14[BANK0 ] int 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  Location        1   16[BANK0 ] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;		None               void
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 60/0
  4685 ;;		On exit  : 60/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       2       0       0       0
  4689 ;;      Locals:         0       3       0       0       0
  4690 ;;      Temps:          0       0       0       0       0
  4691 ;;      Totals:         0       5       0       0       0
  4692 ;;Total ram usage:        5 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    5
  4695 ;; This function calls:
  4696 ;;		_lcdcmd
  4697 ;;		___awdiv
  4698 ;;		_lcddata
  4699 ;;		___awmod
  4700 ;; This function is called by:
  4701 ;;		_DisplayStock
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705  0275                     _DisplayAmnt:	
  4706                           
  4707                           ; Regs used in _DisplayAmnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4708                           ;DisplayAmnt@Location stored from wreg
  4709  0275  00E3               	movwf	DisplayAmnt@Location
  4710                           
  4711                           ;Main.c: 81: lcdcmd(Location);
  4712  0276  222C  120A  118A   	fcall	_lcdcmd
  4713                           
  4714                           ;Main.c: 82: lcddata(digit[Amnt/1000]);
  4715  0279  30E8               	movlw	232
  4716  027A  00D9               	movwf	?___awdiv
  4717  027B  3003               	movlw	3
  4718  027C  00DA               	movwf	?___awdiv+1
  4719  027D  0862               	movf	DisplayAmnt@Amnt+1,w
  4720  027E  00DC               	movwf	?___awdiv+3
  4721  027F  0861               	movf	DisplayAmnt@Amnt,w
  4722  0280  00DB               	movwf	?___awdiv+2
  4723  0281  2348               	fcall	___awdiv
  4724  0282  0859               	movf	?___awdiv,w
  4725  0283  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4726  0288  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4727  028D  232F  120A  118A   	fcall	_lcddata
  4728                           
  4729                           ;Main.c: 83: lcddata(digit[Amnt%1000/100]);
  4730  0290  3064               	movlw	100
  4731  0291  00D9               	movwf	?___awdiv
  4732  0292  01DA               	clrf	?___awdiv+1
  4733  0293  23D4  120A  118A   	fcall	PL6	;call to abstracted procedure
  4734  0296  22F2  120A  118A   	fcall	___awmod
  4735  0299  0854               	movf	?___awmod+1,w
  4736  029A  00DC               	movwf	?___awdiv+3
  4737  029B  0853               	movf	?___awmod,w
  4738  029C  00DB               	movwf	?___awdiv+2
  4739  029D  2348               	fcall	___awdiv
  4740  029E  0859               	movf	?___awdiv,w
  4741  029F  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4742  02A4  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4743  02A9  232F  120A  118A   	fcall	_lcddata
  4744                           
  4745                           ;Main.c: 84: lcddata(digit[Amnt%1000%100/10]);
  4746  02AC  300A               	movlw	10
  4747  02AD  00D9               	movwf	?___awdiv
  4748  02AE  01DA               	clrf	?___awdiv+1
  4749  02AF  23D4  120A  118A   	fcall	PL6	;call to abstracted procedure
  4750  02B2  22F2  120A  118A   	fcall	___awmod
  4751  02B5  23DD  120A  118A   	fcall	PL10	;call to abstracted procedure
  4752  02B8  22F2  120A  118A   	fcall	___awmod
  4753  02BB  0854               	movf	?___awmod+1,w
  4754  02BC  00DC               	movwf	?___awdiv+3
  4755  02BD  0853               	movf	?___awmod,w
  4756  02BE  00DB               	movwf	?___awdiv+2
  4757  02BF  2348               	fcall	___awdiv
  4758  02C0  0859               	movf	?___awdiv,w
  4759  02C1  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4760  02C6  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4761  02CB  232F  120A  118A   	fcall	_lcddata
  4762                           
  4763                           ;Main.c: 85: lcddata(digit[Amnt%1000%100%10]);
  4764  02CE  23D4  120A  118A   	fcall	PL6	;call to abstracted procedure
  4765  02D1  22F2  120A  118A   	fcall	___awmod
  4766  02D4  23DD  120A  118A   	fcall	PL10	;call to abstracted procedure
  4767  02D7  22F2  120A  118A   	fcall	___awmod
  4768  02DA  0854               	movf	?___awmod+1,w
  4769  02DB  00E5               	movwf	_DisplayAmnt$1127+1
  4770  02DC  0853               	movf	?___awmod,w
  4771  02DD  00E4               	movwf	_DisplayAmnt$1127
  4772                           
  4773                           ;Main.c: 85: lcddata(digit[Amnt%1000%100%10]);
  4774  02DE  300A               	movlw	10
  4775  02DF  00D3               	movwf	?___awmod
  4776  02E0  01D4               	clrf	?___awmod+1
  4777  02E1  0865               	movf	_DisplayAmnt$1127+1,w
  4778  02E2  00D6               	movwf	?___awmod+3
  4779  02E3  0864               	movf	_DisplayAmnt$1127,w
  4780  02E4  00D5               	movwf	?___awmod+2
  4781  02E5  22F2               	fcall	___awmod
  4782  02E6  0853               	movf	?___awmod,w
  4783  02E7  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4784  02EC  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4785  02F1  2B2F               	ljmp	_lcddata
  4786  02F2                     __end_of_DisplayAmnt:	
  4787  02F2                     __ptext1199:	
  4788 ;; =============== function _DelayS ends ============
  4789                           
  4790                           
  4791 ;; *************** function ___awmod *****************
  4792 ;; Defined at:
  4793 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awmod.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  divisor         2    0[BANK0 ] int 
  4796 ;;  dividend        2    2[BANK0 ] int 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  sign            1    5[BANK0 ] unsigned char 
  4799 ;;  counter         1    4[BANK0 ] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  2    0[BANK0 ] int 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 60/0
  4806 ;;		On exit  : 60/0
  4807 ;;		Unchanged: FFF9F/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         0       4       0       0       0
  4810 ;;      Locals:         0       2       0       0       0
  4811 ;;      Temps:          0       0       0       0       0
  4812 ;;      Totals:         0       6       0       0       0
  4813 ;;Total ram usage:        6 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:    3
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_DisplayAmnt
  4820 ;;		_main
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823  02F2                     ___awmod:	
  4824                           
  4825                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4826  02F2  01D8               	clrf	___awmod@sign
  4827  02F3  1FD6               	btfss	___awmod@dividend+1,7
  4828  02F4  2AFC               	goto	l4342
  4829  02F5  09D5               	comf	___awmod@dividend,f
  4830  02F6  09D6               	comf	___awmod@dividend+1,f
  4831  02F7  0AD5               	incf	___awmod@dividend,f
  4832  02F8  1903               	skipnz
  4833  02F9  0AD6               	incf	___awmod@dividend+1,f
  4834  02FA  01D8               	clrf	___awmod@sign
  4835  02FB  0AD8               	incf	___awmod@sign,f
  4836  02FC                     l4342:	
  4837  02FC  1FD4               	btfss	___awmod@divisor+1,7
  4838  02FD  2B03               	goto	l4346
  4839  02FE  09D3               	comf	___awmod@divisor,f
  4840  02FF  09D4               	comf	___awmod@divisor+1,f
  4841  0300  0AD3               	incf	___awmod@divisor,f
  4842  0301  1903               	skipnz
  4843  0302  0AD4               	incf	___awmod@divisor+1,f
  4844  0303                     l4346:	
  4845  0303  0854               	movf	___awmod@divisor+1,w
  4846  0304  0453               	iorwf	___awmod@divisor,w
  4847  0305  1903               	skipnz
  4848  0306  2B22               	goto	l4362
  4849  0307  01D7               	clrf	___awmod@counter
  4850  0308                     L4:	
  4851  0308  0AD7               	incf	___awmod@counter,f
  4852  0309  1BD4               	btfsc	___awmod@divisor+1,7
  4853  030A  2B0F               	goto	l4354
  4854  030B  1003               	clrc
  4855  030C  0DD3               	rlf	___awmod@divisor,f
  4856  030D  0DD4               	rlf	___awmod@divisor+1,f
  4857  030E  2B08               	goto	L4
  4858  030F                     l4354:	
  4859  030F  0854               	movf	___awmod@divisor+1,w
  4860  0310  0256               	subwf	___awmod@dividend+1,w
  4861  0311  1D03               	skipz
  4862  0312  2B15               	goto	u1845
  4863  0313  0853               	movf	___awmod@divisor,w
  4864  0314  0255               	subwf	___awmod@dividend,w
  4865  0315                     u1845:	
  4866  0315  1C03               	skipc
  4867  0316  2B1E               	goto	L5
  4868  0317  0853               	movf	___awmod@divisor,w
  4869  0318  02D5               	subwf	___awmod@dividend,f
  4870  0319  0854               	movf	___awmod@divisor+1,w
  4871  031A  1C03               	skipc
  4872  031B  03D6               	decf	___awmod@dividend+1,f
  4873  031C  02D6               	subwf	___awmod@dividend+1,f
  4874  031D  1003               	clrc
  4875  031E                     L5:	
  4876  031E  0CD4               	rrf	___awmod@divisor+1,f
  4877  031F  0CD3               	rrf	___awmod@divisor,f
  4878  0320  0BD7               	decfsz	___awmod@counter,f
  4879  0321  2B0F               	goto	l4354
  4880  0322                     l4362:	
  4881  0322  0858               	movf	___awmod@sign,w
  4882  0323  1903               	btfsc	3,2
  4883  0324  2B2A               	goto	l4366
  4884  0325  09D5               	comf	___awmod@dividend,f
  4885  0326  09D6               	comf	___awmod@dividend+1,f
  4886  0327  0AD5               	incf	___awmod@dividend,f
  4887  0328  1903               	skipnz
  4888  0329  0AD6               	incf	___awmod@dividend+1,f
  4889  032A                     l4366:	
  4890  032A  0856               	movf	___awmod@dividend+1,w
  4891  032B  00D4               	movwf	?___awmod+1
  4892  032C  0855               	movf	___awmod@dividend,w
  4893  032D  00D3               	movwf	?___awmod
  4894  032E  0008               	return
  4895  032F                     __end_of___awmod:	
  4896  032F                     __ptext1188:	
  4897 ;; =============== function _RFID_read ends ============
  4898                           
  4899                           
  4900 ;; *************** function _lcddata *****************
  4901 ;; Defined at:
  4902 ;;		line 51 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  a               1    wreg     unsigned char 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  a               1    4[BANK0 ] unsigned char 
  4907 ;;  z               1    3[BANK0 ] unsigned char 
  4908 ;;  y               1    2[BANK0 ] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;		None               void
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 60/0
  4915 ;;		On exit  : 60/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         0       0       0       0       0
  4919 ;;      Locals:         0       3       0       0       0
  4920 ;;      Temps:          0       0       0       0       0
  4921 ;;      Totals:         0       3       0       0       0
  4922 ;;Total ram usage:        3 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    4
  4925 ;; This function calls:
  4926 ;;		_lcdport
  4927 ;;		_enable
  4928 ;; This function is called by:
  4929 ;;		_lcdstring
  4930 ;;		_DisplayAmnt
  4931 ;;		_DisplaySugar
  4932 ;;		_DisplayRise
  4933 ;;		_DisplayKerosene
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936  032F                     _lcddata:	
  4937                           
  4938                           ; Regs used in _lcddata: [wreg+status,2+status,0+pclath+cstack]
  4939                           ;lcddata@a stored from wreg
  4940  032F  00D7               	movwf	lcddata@a
  4941                           
  4942                           ;lcd.c: 52: unsigned char y,z;
  4943                           ;lcd.c: 53: z=a>>4&0x0F;
  4944  0330  0E57               	swapf	lcddata@a,w
  4945  0331  390F               	andlw	15
  4946  0332  00D6               	movwf	lcddata@z
  4947  0333  300F               	movlw	15
  4948  0334  05D6               	andwf	lcddata@z,f
  4949                           
  4950                           ;lcd.c: 54: y=a&0x0F;
  4951  0335  0857               	movf	lcddata@a,w
  4952  0336  00D5               	movwf	lcddata@y
  4953  0337  300F               	movlw	15
  4954  0338  05D5               	andwf	lcddata@y,f
  4955                           
  4956                           ;lcd.c: 55: RD2=1;
  4957  0339  1508               	bsf	8,2
  4958                           
  4959                           ;lcd.c: 56: lcdport(z);
  4960  033A  0856               	movf	lcddata@z,w
  4961  033B  225F  120A  118A   	fcall	_lcdport
  4962                           
  4963                           ;lcd.c: 57: enable();
  4964  033E  238D  120A  118A   	fcall	_enable
  4965                           
  4966                           ;lcd.c: 58: lcdport(y);
  4967  0341  0855               	movf	lcddata@y,w
  4968  0342  225F  120A  118A   	fcall	_lcdport
  4969                           
  4970                           ;lcd.c: 59: enable();
  4971  0345  238D               	fcall	_enable
  4972                           
  4973                           ;lcd.c: 60: RD2 = 0;
  4974  0346  1108               	bcf	8,2
  4975  0347  0008               	return
  4976  0348                     __end_of_lcddata:	
  4977  0348                     __ptext1200:	
  4978 ;; =============== function ___awmod ends ============
  4979                           
  4980                           
  4981 ;; *************** function ___awdiv *****************
  4982 ;; Defined at:
  4983 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  divisor         2    6[BANK0 ] int 
  4986 ;;  dividend        2    8[BANK0 ] int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  quotient        2   12[BANK0 ] int 
  4989 ;;  sign            1   11[BANK0 ] unsigned char 
  4990 ;;  counter         1   10[BANK0 ] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2    6[BANK0 ] int 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 60/0
  4997 ;;		On exit  : 60/0
  4998 ;;		Unchanged: FFF9F/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5000 ;;      Params:         0       4       0       0       0
  5001 ;;      Locals:         0       4       0       0       0
  5002 ;;      Temps:          0       0       0       0       0
  5003 ;;      Totals:         0       8       0       0       0
  5004 ;;Total ram usage:        8 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    3
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_DisplayAmnt
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014  0348                     ___awdiv:	
  5015                           
  5016                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5017  0348  01DE               	clrf	___awdiv@sign
  5018  0349  1FDA               	btfss	___awdiv@divisor+1,7
  5019  034A  2B52               	goto	l3510
  5020  034B  09D9               	comf	___awdiv@divisor,f
  5021  034C  09DA               	comf	___awdiv@divisor+1,f
  5022  034D  0AD9               	incf	___awdiv@divisor,f
  5023  034E  1903               	skipnz
  5024  034F  0ADA               	incf	___awdiv@divisor+1,f
  5025  0350  01DE               	clrf	___awdiv@sign
  5026  0351  0ADE               	incf	___awdiv@sign,f
  5027  0352                     l3510:	
  5028  0352  1FDC               	btfss	___awdiv@dividend+1,7
  5029  0353  2B5B               	goto	l3516
  5030  0354  09DB               	comf	___awdiv@dividend,f
  5031  0355  09DC               	comf	___awdiv@dividend+1,f
  5032  0356  0ADB               	incf	___awdiv@dividend,f
  5033  0357  1903               	skipnz
  5034  0358  0ADC               	incf	___awdiv@dividend+1,f
  5035  0359  3001               	movlw	1
  5036  035A  06DE               	xorwf	___awdiv@sign,f
  5037  035B                     l3516:	
  5038  035B  01DF               	clrf	___awdiv@quotient
  5039  035C  01E0               	clrf	___awdiv@quotient+1
  5040  035D  085A               	movf	___awdiv@divisor+1,w
  5041  035E  0459               	iorwf	___awdiv@divisor,w
  5042  035F  1903               	skipnz
  5043  0360  2B80               	goto	l3538
  5044  0361  01DD               	clrf	___awdiv@counter
  5045  0362                     L6:	
  5046  0362  0ADD               	incf	___awdiv@counter,f
  5047  0363  1BDA               	btfsc	___awdiv@divisor+1,7
  5048  0364  2B69               	goto	l3526
  5049  0365  1003               	clrc
  5050  0366  0DD9               	rlf	___awdiv@divisor,f
  5051  0367  0DDA               	rlf	___awdiv@divisor+1,f
  5052  0368  2B62               	goto	L6
  5053  0369                     l3526:	
  5054  0369  1003               	clrc
  5055  036A  0DDF               	rlf	___awdiv@quotient,f
  5056  036B  0DE0               	rlf	___awdiv@quotient+1,f
  5057  036C  085A               	movf	___awdiv@divisor+1,w
  5058  036D  025C               	subwf	___awdiv@dividend+1,w
  5059  036E  1D03               	skipz
  5060  036F  2B72               	goto	u1225
  5061  0370  0859               	movf	___awdiv@divisor,w
  5062  0371  025B               	subwf	___awdiv@dividend,w
  5063  0372                     u1225:	
  5064  0372  1C03               	skipc
  5065  0373  2B7C               	goto	L7
  5066  0374  0859               	movf	___awdiv@divisor,w
  5067  0375  02DB               	subwf	___awdiv@dividend,f
  5068  0376  085A               	movf	___awdiv@divisor+1,w
  5069  0377  1C03               	skipc
  5070  0378  03DC               	decf	___awdiv@dividend+1,f
  5071  0379  02DC               	subwf	___awdiv@dividend+1,f
  5072  037A  145F               	bsf	___awdiv@quotient,0
  5073  037B  1003               	clrc
  5074  037C                     L7:	
  5075  037C  0CDA               	rrf	___awdiv@divisor+1,f
  5076  037D  0CD9               	rrf	___awdiv@divisor,f
  5077  037E  0BDD               	decfsz	___awdiv@counter,f
  5078  037F  2B69               	goto	l3526
  5079  0380                     l3538:	
  5080  0380  085E               	movf	___awdiv@sign,w
  5081  0381  1903               	btfsc	3,2
  5082  0382  2B88               	goto	l3542
  5083  0383  09DF               	comf	___awdiv@quotient,f
  5084  0384  09E0               	comf	___awdiv@quotient+1,f
  5085  0385  0ADF               	incf	___awdiv@quotient,f
  5086  0386  1903               	skipnz
  5087  0387  0AE0               	incf	___awdiv@quotient+1,f
  5088  0388                     l3542:	
  5089  0388  0860               	movf	___awdiv@quotient+1,w
  5090  0389  00DA               	movwf	?___awdiv+1
  5091  038A  085F               	movf	___awdiv@quotient,w
  5092  038B  00D9               	movwf	?___awdiv
  5093  038C  0008               	return
  5094  038D                     __end_of___awdiv:	
  5095  038D                     __ptext1197:	
  5096 ;; =============== function _SoftWareUart_Init ends ============
  5097                           
  5098                           
  5099 ;; *************** function _enable *****************
  5100 ;; Defined at:
  5101 ;;		line 9 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg
  5110 ;; Tracked objects:
  5111 ;;		On entry : 60/0
  5112 ;;		On exit  : 60/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5115 ;;      Params:         0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0
  5117 ;;      Temps:          0       2       0       0       0
  5118 ;;      Totals:         0       2       0       0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    3
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_lcdcmd
  5126 ;;		_lcddata
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129  038D                     _enable:	
  5130  038D                     l4378:	
  5131                           ; Regs used in _enable: [wreg]
  5132                           
  5133                           
  5134                           ;lcd.c: 10: RD3 = 1;
  5135  038D  1588               	bsf	8,3
  5136                           
  5137                           ;lcd.c: 11: _delay((unsigned long)((4)*(20000000/4000.0)));
  5138  038E  301A               	movlw	26
  5139  038F  00D4               	movwf	??_enable+1
  5140  0390  30F8               	movlw	248
  5141  0391  00D3               	movwf	??_enable
  5142  0392                     u2227:	
  5143  0392  0BD3               	decfsz	??_enable,f
  5144  0393  2B92               	goto	u2227
  5145  0394  0BD4               	decfsz	??_enable+1,f
  5146  0395  2B92               	goto	u2227
  5147  0396  0064               	clrwdt
  5148  0397  23E5               	call	PL11	;select bank 0
  5149                           
  5150                           ;lcd.c: 12: RD3 = 0;
  5151  0398  1188               	bcf	8,3
  5152  0399  0008               	return
  5153  039A                     __end_of_enable:	
  5154  039A                     __ptext1198:	
  5155 ;; =============== function _enable ends ============
  5156                           
  5157                           
  5158 ;; *************** function _DelayS *****************
  5159 ;; Defined at:
  5160 ;;		line 75 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Delay.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  cnt             1    wreg     unsigned char 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  cnt             1    2[BANK0 ] unsigned char 
  5165 ;;  i               1    3[BANK0 ] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;		None               void
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 60/0
  5172 ;;		On exit  : 60/0
  5173 ;;		Unchanged: FFE00/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5175 ;;      Params:         0       0       0       0       0
  5176 ;;      Locals:         0       2       0       0       0
  5177 ;;      Temps:          0       0       0       0       0
  5178 ;;      Totals:         0       2       0       0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    4
  5182 ;; This function calls:
  5183 ;;		_DelayMs
  5184 ;; This function is called by:
  5185 ;;		_gsm_init
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188  039A                     _DelayS:	
  5189                           
  5190                           ; Regs used in _DelayS: [wreg+status,2+status,0+pclath+cstack]
  5191                           ;DelayS@cnt stored from wreg
  5192  039A  00D5               	movwf	DelayS@cnt
  5193  039B                     l944:	
  5194                           ;Delay.c: 76: unsigned char i;
  5195                           ;Delay.c: 77: do {
  5196                           
  5197                           
  5198                           ;Delay.c: 78: i = 4;
  5199  039B  3004               	movlw	4
  5200  039C  00D6               	movwf	DelayS@i
  5201  039D                     l4372:	
  5202                           
  5203                           ;Delay.c: 80: DelayMs(250);
  5204  039D  30FA               	movlw	250
  5205  039E  23A8  120A  118A   	fcall	_DelayMs
  5206  03A1  0064               	clrwdt	;#
  5207  03A2  23E5               	call	PL11	;select bank 0
  5208                           
  5209                           ;Delay.c: 82: } while(--i);
  5210  03A3  0BD6               	decfsz	DelayS@i,f
  5211  03A4  2B9D               	goto	l4372
  5212                           
  5213                           ;Delay.c: 83: } while(--cnt);
  5214  03A5  0BD5               	decfsz	DelayS@cnt,f
  5215  03A6  2B9B               	goto	l944
  5216  03A7  0008               	return
  5217  03A8                     __end_of_DelayS:	
  5218  03A8                     __ptext1214:	
  5219 ;; =============== function _lcdport ends ============
  5220                           
  5221                           
  5222 ;; *************** function _DelayMs *****************
  5223 ;; Defined at:
  5224 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Delay.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  cnt             1    wreg     unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  cnt             1    0[BANK0 ] unsigned char 
  5229 ;;  i               1    1[BANK0 ] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg
  5234 ;; Tracked objects:
  5235 ;;		On entry : 60/0
  5236 ;;		On exit  : 60/0
  5237 ;;		Unchanged: FFE00/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5239 ;;      Params:         0       0       0       0       0
  5240 ;;      Locals:         0       2       0       0       0
  5241 ;;      Temps:          0       0       0       0       0
  5242 ;;      Totals:         0       2       0       0       0
  5243 ;;Total ram usage:        2 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    3
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_DelayS
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252  03A8                     _DelayMs:	
  5253                           
  5254                           ; Regs used in _DelayMs: [wreg]
  5255                           ;DelayMs@cnt stored from wreg
  5256  03A8  00D3               	movwf	DelayMs@cnt
  5257  03A9                     l923:	
  5258                           ;Delay.c: 40: unsigned char i;
  5259                           ;Delay.c: 41: do {
  5260                           
  5261                           
  5262                           ;Delay.c: 42: i = 4;
  5263  03A9  3004               	movlw	4
  5264  03AA  00D4               	movwf	DelayMs@i
  5265  03AB                     l924:	
  5266                           ;Delay.c: 43: do {
  5267                           
  5268                           
  5269                           ;Delay.c: 44: { delayus_variable=(unsigned char)(250/4); asm("nop"); } asm("decfsz _dela
      +                          yus_variable,f"); asm("goto $ - 2");;
  5270  03AB  303E               	movlw	62
  5271  03AC  00F7               	movwf	_delayus_variable
  5272  03AD  0000               	nop	;#
  5273  03AE  120A  118A  0BF7   	decfsz	_delayus_variable,f	;#
  5274  03B1  280F               	goto	($+-2)	;#
  5275  03B2  0064               	clrwdt	;#
  5276  03B3  23E5               	call	PL11	;select bank 0
  5277                           
  5278                           ;Delay.c: 46: } while(--i);
  5279  03B4  0BD4               	decfsz	DelayMs@i,f
  5280  03B5  2BAB               	goto	l924
  5281                           
  5282                           ;Delay.c: 47: } while(--cnt);
  5283  03B6  0BD3               	decfsz	DelayMs@cnt,f
  5284  03B7  2BA9               	goto	l923
  5285  03B8  0008               	return
  5286  03B9                     __end_of_DelayMs:	
  5287  03B9                     __ptext1202:	
  5288 ;; =============== function ___lbmod ends ============
  5289                           
  5290                           
  5291 ;; *************** function ___lbdiv *****************
  5292 ;; Defined at:
  5293 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbdiv.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  dividend        1    wreg     unsigned char 
  5296 ;;  divisor         1    0[BANK0 ] unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  dividend        1    1[BANK0 ] unsigned char 
  5299 ;;  quotient        1    3[BANK0 ] unsigned char 
  5300 ;;  counter         1    2[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      unsigned char 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 60/0
  5307 ;;		On exit  : 60/0
  5308 ;;		Unchanged: FFF9F/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       1       0       0       0
  5311 ;;      Locals:         0       3       0       0       0
  5312 ;;      Temps:          0       0       0       0       0
  5313 ;;      Totals:         0       4       0       0       0
  5314 ;;Total ram usage:        4 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    3
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_DisplaySugar
  5321 ;;		_DisplayRise
  5322 ;;		_DisplayKerosene
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325  03B9                     ___lbdiv:	
  5326                           
  5327                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5328                           ;___lbdiv@dividend stored from wreg
  5329  03B9  00D4               	movwf	___lbdiv@dividend
  5330  03BA  01D6               	clrf	___lbdiv@quotient
  5331  03BB  0853               	movf	___lbdiv@divisor,w
  5332  03BC  1903               	btfsc	3,2
  5333  03BD  2BD2               	goto	l4312
  5334  03BE  01D5               	clrf	___lbdiv@counter
  5335  03BF                     l4298:	
  5336  03BF  0AD5               	incf	___lbdiv@counter,f
  5337  03C0  1BD3               	btfsc	___lbdiv@divisor,7
  5338  03C1  2BC5               	goto	l1270
  5339  03C2  1003               	clrc
  5340  03C3  0DD3               	rlf	___lbdiv@divisor,f
  5341  03C4  2BBF               	goto	l4298
  5342  03C5                     l1270:	
  5343  03C5  1003               	clrc
  5344  03C6  0DD6               	rlf	___lbdiv@quotient,f
  5345  03C7  0853               	movf	___lbdiv@divisor,w
  5346  03C8  0254               	subwf	___lbdiv@dividend,w
  5347  03C9  1C03               	skipc
  5348  03CA  2BCF               	goto	L9
  5349  03CB  0853               	movf	___lbdiv@divisor,w
  5350  03CC  02D4               	subwf	___lbdiv@dividend,f
  5351  03CD  1456               	bsf	___lbdiv@quotient,0
  5352  03CE  1003               	clrc
  5353  03CF                     L9:	
  5354  03CF  0CD3               	rrf	___lbdiv@divisor,f
  5355  03D0  0BD5               	decfsz	___lbdiv@counter,f
  5356  03D1  2BC5               	goto	l1270
  5357  03D2                     l4312:	
  5358  03D2  0856               	movf	___lbdiv@quotient,w
  5359  03D3  0008               	return
  5360  03D4                     __end_of___lbdiv:	
  5361  03D4                     PL6:	
  5362  03D4  0862               	movf	DisplayAmnt@Amnt+1,w
  5363  03D5  00D6               	movwf	?___awmod+3
  5364  03D6  0861               	movf	DisplayAmnt@Amnt,w
  5365  03D7  00D5               	movwf	?___awmod+2
  5366  03D8  30E8               	movlw	232
  5367  03D9  00D3               	movwf	?___awmod
  5368  03DA  3003               	movlw	3
  5369  03DB  00D4               	movwf	?___awmod+1
  5370  03DC  0008               	return
  5371  03DD                     PL10:	
  5372  03DD  0854               	movf	?___awmod+1,w
  5373  03DE  00D6               	movwf	?___awmod+3
  5374  03DF  0853               	movf	?___awmod,w
  5375  03E0  00D5               	movwf	?___awmod+2
  5376  03E1  3064               	movlw	100
  5377  03E2  00D3               	movwf	?___awmod
  5378  03E3  01D4               	clrf	?___awmod+1
  5379  03E4  0008               	return
  5380  03E5                     PL11:	
  5381  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  5382  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  5383  03E7  0008               	return
  5384                           
  5385                           	psect	text1187
  5386  07BC                     __ptext1187:	
  5387 ;; =============== function _SendStock ends ============
  5388                           
  5389                           
  5390 ;; *************** function _RFID_read *****************
  5391 ;; Defined at:
  5392 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  i               2    3[BANK0 ] int 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;		None               void
  5399 ;; Registers used:
  5400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5406 ;;      Params:         0       0       0       0       0
  5407 ;;      Locals:         0       2       0       0       0
  5408 ;;      Temps:          0       0       0       0       0
  5409 ;;      Totals:         0       2       0       0       0
  5410 ;;Total ram usage:        2 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    4
  5413 ;; This function calls:
  5414 ;;		_softreceive
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419  07BC                     _RFID_read:	
  5420                           
  5421                           ;Main.c: 72: if(!rfid_flag)
  5422                           
  5423                           ; Regs used in _RFID_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5424  07BC  1876               	btfsc	_rfid_flag/(0+8),_rfid_flag& (0+7)
  5425  07BD  0008               	return
  5426  07BE  27FB               	call	PL12	;select bank 0
  5427                           
  5428                           ;Main.c: 73: {
  5429                           ;Main.c: 74: for(int i=0;i<12;i++)
  5430  07BF  01D6               	clrf	RFID_read@i
  5431  07C0  01D7               	clrf	RFID_read@i+1
  5432  07C1                     l4484:	
  5433  07C1  27FB               	call	PL12	;select bank 0
  5434                           
  5435                           ;Main.c: 75: {card_store[i]=softreceive();}
  5436  07C2  0856               	movf	RFID_read@i,w
  5437  07C3  3E37               	addlw	_card_store& (0+255)
  5438  07C4  0084               	movwf	4
  5439  07C5  27DA  120A  118A   	fcall	_softreceive
  5440  07C8  1383               	bcf	3,7	;select IRP bank0
  5441  07C9  0080               	movwf	0
  5442  07CA  0AD6               	incf	RFID_read@i,f
  5443  07CB  1903               	skipnz
  5444  07CC  0AD7               	incf	RFID_read@i+1,f
  5445  07CD  0857               	movf	RFID_read@i+1,w
  5446  07CE  3A80               	xorlw	128
  5447  07CF  00FF               	movwf	127
  5448  07D0  3080               	movlw	128
  5449  07D1  027F               	subwf	127,w
  5450  07D2  1D03               	skipz
  5451  07D3  2FD6               	goto	u1945
  5452  07D4  300C               	movlw	12
  5453  07D5  0256               	subwf	RFID_read@i,w
  5454  07D6                     u1945:	
  5455  07D6  1C03               	skipc
  5456  07D7  2FC1               	goto	l4484
  5457                           
  5458                           ;Main.c: 76: rfid_flag=1;
  5459  07D8  1476               	bsf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  5460  07D9  0008               	return
  5461  07DA                     __end_of_RFID_read:	
  5462  07DA                     __ptext1195:	
  5463 ;; =============== function _usartstring ends ============
  5464                           
  5465                           
  5466 ;; *************** function _softreceive *****************
  5467 ;; Defined at:
  5468 ;;		line 21 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  mask            1    2[BANK0 ] unsigned char 
  5473 ;;  Data            1    1[BANK0 ] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      unsigned char 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0
  5478 ;; Tracked objects:
  5479 ;;		On entry : 60/0
  5480 ;;		On exit  : 60/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5483 ;;      Params:         0       0       0       0       0
  5484 ;;      Locals:         0       2       0       0       0
  5485 ;;      Temps:          0       1       0       0       0
  5486 ;;      Totals:         0       3       0       0       0
  5487 ;;Total ram usage:        3 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    3
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_RFID_read
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496  07DA                     _softreceive:	
  5497                           
  5498                           ;softuart.c: 22: char mask;
  5499                           ;softuart.c: 23: char Data;
  5500                           ;softuart.c: 24: Data=0;
  5501                           
  5502                           ; Regs used in _softreceive: [wreg+status,2+status,0]
  5503  07DA  01D4               	clrf	softreceive@Data
  5504  07DB                     l992:	
  5505                           ;softuart.c: 25: while(RD0);
  5506                           
  5507  07DB  1808               	btfsc	8,0
  5508  07DC  2FDB               	goto	l992
  5509                           
  5510                           ;softuart.c: 26: _delay((unsigned long)(((((1000000/9600)-2)/2))*(20000000/4000000.0)));
  5511  07DD  3054               	movlw	84
  5512  07DE  00D3               	movwf	??_softreceive
  5513  07DF                     u2187:	
  5514  07DF  0BD3               	decfsz	??_softreceive,f
  5515  07E0  2FDF               	goto	u2187
  5516  07E1  2FE2               	nop2	;nop
  5517  07E2  27FB               	call	PL12	;select bank 0
  5518                           
  5519                           ;softuart.c: 27: for(mask=0x01;mask!=0;mask=mask<<1)
  5520  07E3  01D5               	clrf	softreceive@mask
  5521  07E4  0AD5               	incf	softreceive@mask,f
  5522  07E5                     l4398:	
  5523                           
  5524                           ;softuart.c: 28: {
  5525                           ;softuart.c: 29: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  5526  07E5  30A9               	movlw	169
  5527  07E6  00D3               	movwf	??_softreceive
  5528  07E7                     u2197:	
  5529  07E7  0BD3               	decfsz	??_softreceive,f
  5530  07E8  2FE7               	goto	u2197
  5531  07E9  2FEA               	nop2	;nop
  5532  07EA  27FB               	call	PL12	;select bank 0
  5533                           
  5534                           ;softuart.c: 30: if(RD0)Data=Data|mask;
  5535  07EB  0855               	movf	softreceive@mask,w
  5536  07EC  1808               	btfsc	8,0
  5537  07ED  04D4               	iorwf	softreceive@Data,f
  5538  07EE  1003               	clrc
  5539  07EF  0DD5               	rlf	softreceive@mask,f
  5540  07F0  08D5               	movf	softreceive@mask,f
  5541  07F1  1D03               	skipz
  5542  07F2  2FE5               	goto	l4398
  5543                           
  5544                           ;softuart.c: 31: }
  5545                           ;softuart.c: 32: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  5546  07F3  30A9               	movlw	169
  5547  07F4  00D3               	movwf	??_softreceive
  5548  07F5                     u2207:	
  5549  07F5  0BD3               	decfsz	??_softreceive,f
  5550  07F6  2FF5               	goto	u2207
  5551  07F7  2FF8               	nop2	;nop
  5552  07F8  27FB               	call	PL12	;select bank 0
  5553                           
  5554                           ;softuart.c: 33: return Data;
  5555  07F9  0854               	movf	softreceive@Data,w
  5556  07FA  0008               	return
  5557  07FB                     __end_of_softreceive:	
  5558  07FB                     PL12:	
  5559  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  5560  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  5561  07FD  0008               	return
  5562                           
  5563                           	psect	text1191
  5564  0D44                     __ptext1191:	
  5565 ;; =============== function _LoadStockToArray ends ============
  5566                           
  5567                           
  5568 ;; *************** function _paramter *****************
  5569 ;; Defined at:
  5570 ;;		line 154 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;		None               void
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 60/0
  5581 ;;		On exit  : 60/40
  5582 ;;		Unchanged: FFE00/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0
  5587 ;;      Totals:         0       0       0       0       0
  5588 ;;Total ram usage:        0 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    4
  5591 ;; This function calls:
  5592 ;;		_eeprom_read
  5593 ;;		___wmul
  5594 ;; This function is called by:
  5595 ;;		_main
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598  0D44                     _paramter:	
  5599                           
  5600                           ;Main.c: 155: c1=(eeprom_read(0)*100)+eeprom_read(1);
  5601                           
  5602                           ; Regs used in _paramter: [wreg+status,2+status,0+pclath+cstack]
  5603  0D44  3000               	movlw	0
  5604  0D45  25F8  120A  158A   	fcall	_eeprom_read
  5605  0D48  262F  120A  158A   	fcall	PL4	;call to abstracted procedure
  5606  0D4B  2616  120A  158A   	fcall	___wmul
  5607  0D4E  3001               	movlw	1
  5608  0D4F  25F8  120A  158A   	fcall	_eeprom_read
  5609                           
  5610                           ;Main.c: 156: c2=(eeprom_read(2)*100)+eeprom_read(3);
  5611  0D52  3002               	movlw	2
  5612  0D53  25F8  120A  158A   	fcall	_eeprom_read
  5613  0D56  262F  120A  158A   	fcall	PL4	;call to abstracted procedure
  5614  0D59  2616  120A  158A   	fcall	___wmul
  5615  0D5C  3003               	movlw	3
  5616  0D5D  2DF8               	ljmp	_eeprom_read
  5617  0D5E                     __end_of_paramter:	
  5618  0D5E                     __ptext1192:	
  5619 ;; =============== function _paramter ends ============
  5620                           
  5621                           
  5622 ;; *************** function _ReadStock *****************
  5623 ;; Defined at:
  5624 ;;		line 105 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;		None               void
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 40/20
  5635 ;;		On exit  : 60/0
  5636 ;;		Unchanged: FFE00/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5638 ;;      Params:         0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0
  5641 ;;      Totals:         0       0       0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    4
  5645 ;; This function calls:
  5646 ;;		_eeprom_read
  5647 ;;		___wmul
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652  0D5E                     _ReadStock:	
  5653                           
  5654                           ;Main.c: 106: RiseStock=(eeprom_read(24)*100)+eeprom_read(25);
  5655                           
  5656                           ; Regs used in _ReadStock: [wreg+status,2+status,0+pclath+cstack]
  5657  0D5E  3018               	movlw	24
  5658  0D5F  25F8  120A  158A   	fcall	_eeprom_read
  5659  0D62  262F  120A  158A   	fcall	PL4	;call to abstracted procedure
  5660  0D65  2616  120A  158A   	fcall	___wmul
  5661  0D68  0857               	movf	?___wmul+1,w
  5662  0D69  00A3               	movwf	_RiseStock+1
  5663  0D6A  0856               	movf	?___wmul,w
  5664  0D6B  00A2               	movwf	_RiseStock
  5665  0D6C  3019               	movlw	25
  5666  0D6D  25F8  120A  158A   	fcall	_eeprom_read
  5667  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0D71  07A2               	addwf	_RiseStock,f
  5669  0D72  1803               	skipnc
  5670  0D73  0AA3               	incf	_RiseStock+1,f
  5671                           
  5672                           ;Main.c: 107: SugarStock=eeprom_read(26);
  5673  0D74  301A               	movlw	26
  5674  0D75  25F8  120A  158A   	fcall	_eeprom_read
  5675  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  5676  0D79  00A4               	movwf	_SugarStock
  5677  0D7A  01A5               	clrf	_SugarStock+1
  5678                           
  5679                           ;Main.c: 108: KeroseneStock=eeprom_read(27);
  5680  0D7B  301B               	movlw	27
  5681  0D7C  25F8               	fcall	_eeprom_read
  5682  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  5683  0D7E  00A0               	movwf	_KeroseneStock
  5684  0D7F  01A1               	clrf	_KeroseneStock+1
  5685  0D80  0008               	return
  5686  0D81                     __end_of_ReadStock:	
  5687  0D81                     __ptext1193:	
  5688 ;; =============== function _ReadStock ends ============
  5689                           
  5690                           
  5691 ;; *************** function _ReadAmnt *****************
  5692 ;; Defined at:
  5693 ;;		line 89 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;		None               void
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, pclath, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 160/0
  5704 ;;		On exit  : 60/0
  5705 ;;		Unchanged: FFE00/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5707 ;;      Params:         0       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0
  5710 ;;      Totals:         0       0       0       0       0
  5711 ;;Total ram usage:        0 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    4
  5714 ;; This function calls:
  5715 ;;		_eeprom_read
  5716 ;;		___wmul
  5717 ;; This function is called by:
  5718 ;;		_main
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721  0D81                     _ReadAmnt:	
  5722                           
  5723                           ;Main.c: 90: User1amt=(eeprom_read(0)*100)+eeprom_read(1);
  5724                           
  5725                           ; Regs used in _ReadAmnt: [wreg+status,2+status,0+pclath+cstack]
  5726  0D81  3000               	movlw	0
  5727  0D82  25F8  120A  158A   	fcall	_eeprom_read
  5728  0D85  262F  120A  158A   	fcall	PL4	;call to abstracted procedure
  5729  0D88  2616  120A  158A   	fcall	___wmul
  5730  0D8B  0857               	movf	?___wmul+1,w
  5731  0D8C  00A9               	movwf	_User1amt+1
  5732  0D8D  0856               	movf	?___wmul,w
  5733  0D8E  00A8               	movwf	_User1amt
  5734  0D8F  3001               	movlw	1
  5735  0D90  25F8  120A  158A   	fcall	_eeprom_read
  5736  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  5737  0D94  07A8               	addwf	_User1amt,f
  5738  0D95  1803               	skipnc
  5739  0D96  0AA9               	incf	_User1amt+1,f
  5740                           
  5741                           ;Main.c: 91: User2amt=(eeprom_read(8)*100)+eeprom_read(9);
  5742  0D97  3008               	movlw	8
  5743  0D98  25F8  120A  158A   	fcall	_eeprom_read
  5744  0D9B  262F  120A  158A   	fcall	PL4	;call to abstracted procedure
  5745  0D9E  2616  120A  158A   	fcall	___wmul
  5746  0DA1  0857               	movf	?___wmul+1,w
  5747  0DA2  00AB               	movwf	_User2amt+1
  5748  0DA3  0856               	movf	?___wmul,w
  5749  0DA4  00AA               	movwf	_User2amt
  5750  0DA5  3009               	movlw	9
  5751  0DA6  25F8  120A  158A   	fcall	_eeprom_read
  5752  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5753  0DAA  07AA               	addwf	_User2amt,f
  5754  0DAB  1803               	skipnc
  5755  0DAC  0AAB               	incf	_User2amt+1,f
  5756                           
  5757                           ;Main.c: 92: User3amt=(eeprom_read(16)*100)+eeprom_read(17);
  5758  0DAD  3010               	movlw	16
  5759  0DAE  25F8  120A  158A   	fcall	_eeprom_read
  5760  0DB1  262F  120A  158A   	fcall	PL4	;call to abstracted procedure
  5761  0DB4  2616  120A  158A   	fcall	___wmul
  5762  0DB7  0857               	movf	?___wmul+1,w
  5763  0DB8  00AD               	movwf	_User3amt+1
  5764  0DB9  0856               	movf	?___wmul,w
  5765  0DBA  00AC               	movwf	_User3amt
  5766  0DBB  3011               	movlw	17
  5767  0DBC  25F8  120A  158A   	fcall	_eeprom_read
  5768  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  5769  0DC0  07AC               	addwf	_User3amt,f
  5770  0DC1  1803               	skipnc
  5771  0DC2  0AAD               	incf	_User3amt+1,f
  5772                           
  5773                           ;Main.c: 93: User1Rise = eeprom_read(2);
  5774  0DC3  3002               	movlw	2
  5775  0DC4  25F8  120A  158A   	fcall	_eeprom_read
  5776  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0DC8  00AF               	movwf	_User1Rise
  5778                           
  5779                           ;Main.c: 94: User2Rise = eeprom_read(10);
  5780  0DC9  300A               	movlw	10
  5781  0DCA  25F8  120A  158A   	fcall	_eeprom_read
  5782  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  5783  0DCE  00B2               	movwf	_User2Rise
  5784                           
  5785                           ;Main.c: 95: User3Rise = eeprom_read(18);
  5786  0DCF  3012               	movlw	18
  5787  0DD0  25F8  120A  158A   	fcall	_eeprom_read
  5788  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0DD4  00B5               	movwf	_User3Rise
  5790                           
  5791                           ;Main.c: 96: User1Kerosene = eeprom_read(4);
  5792  0DD5  3004               	movlw	4
  5793  0DD6  25F8  120A  158A   	fcall	_eeprom_read
  5794  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0DDA  00AE               	movwf	_User1Kerosene
  5796                           
  5797                           ;Main.c: 97: User2Kerosene = eeprom_read(12);
  5798  0DDB  300C               	movlw	12
  5799  0DDC  25F8  120A  158A   	fcall	_eeprom_read
  5800  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  5801  0DE0  00B1               	movwf	_User2Kerosene
  5802                           
  5803                           ;Main.c: 98: User3Kerosene = eeprom_read(20);
  5804  0DE1  3014               	movlw	20
  5805  0DE2  25F8  120A  158A   	fcall	_eeprom_read
  5806  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0DE6  00B4               	movwf	_User3Kerosene
  5808                           
  5809                           ;Main.c: 99: User1Sugar = eeprom_read(3);
  5810  0DE7  3003               	movlw	3
  5811  0DE8  25F8  120A  158A   	fcall	_eeprom_read
  5812  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  5813  0DEC  00B0               	movwf	_User1Sugar
  5814                           
  5815                           ;Main.c: 100: User2Sugar = eeprom_read(11);
  5816  0DED  300B               	movlw	11
  5817  0DEE  25F8  120A  158A   	fcall	_eeprom_read
  5818  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  5819  0DF2  00B3               	movwf	_User2Sugar
  5820                           
  5821                           ;Main.c: 101: User3Sugar = eeprom_read(19);
  5822  0DF3  3013               	movlw	19
  5823  0DF4  25F8               	fcall	_eeprom_read
  5824  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  5825  0DF6  00B6               	movwf	_User3Sugar
  5826  0DF7  0008               	return
  5827  0DF8                     __end_of_ReadAmnt:	
  5828  0DF8                     __ptext1210:	
  5829 ;; =============== function _uart_init ends ============
  5830                           
  5831                           
  5832 ;; *************** function _eeprom_read *****************
  5833 ;; Defined at:
  5834 ;;		line 8 in file "eeread.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  addr            1    wreg     unsigned char 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  addr            1    2[BANK0 ] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      unsigned char 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 60/40
  5846 ;;		Unchanged: FFE00/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         0       0       0       0       0
  5849 ;;      Locals:         0       1       0       0       0
  5850 ;;      Temps:          0       2       0       0       0
  5851 ;;      Totals:         0       3       0       0       0
  5852 ;;Total ram usage:        3 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    3
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_ReadAmnt
  5859 ;;		_ReadStock
  5860 ;;		_paramter
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863  0DF8                     _eeprom_read:	
  5864                           
  5865                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5866                           ;eeprom_read@addr stored from wreg
  5867  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5868  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5869  0DFA  00D5               	movwf	eeprom_read@addr
  5870  0DFB                     l1188:	
  5871  0DFB  0064               	clrwdt	;#
  5872  0DFC  1683               	bsf	3,5	;RP0=1, select bank3
  5873  0DFD  1703               	bsf	3,6	;RP1=1, select bank3
  5874  0DFE  188C               	btfsc	12,1
  5875  0DFF  2DFB               	goto	l1188
  5876  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  5877  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  5878  0E02  0855               	movf	eeprom_read@addr,w
  5879  0E03  1703               	bsf	3,6	;RP1=1, select bank2
  5880  0E04  008D               	movwf	13	;volatile
  5881  0E05  303F               	movlw	63
  5882  0E06  1683               	bsf	3,5	;RP0=1, select bank3
  5883  0E07  058C               	andwf	12,f	;volatile
  5884  0E08  140C               	bsf	12,0
  5885  0E09  1003               	clrc
  5886  0E0A  180C               	btfsc	12,0
  5887  0E0B  1403               	setc
  5888  0E0C  3000               	movlw	0
  5889  0E0D  1803               	skipnc
  5890  0E0E  3001               	movlw	1
  5891  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  5893  0E11  00D3               	movwf	??_eeprom_read
  5894  0E12  01D4               	clrf	??_eeprom_read+1
  5895  0E13  1703               	bsf	3,6	;RP1=1, select bank2
  5896  0E14  080C               	movf	12,w	;volatile
  5897  0E15  0008               	return
  5898  0E16                     __end_of_eeprom_read:	
  5899  0E16                     __ptext1205:	
  5900 ;; =============== function ___lwdiv ends ============
  5901                           
  5902                           
  5903 ;; *************** function ___wmul *****************
  5904 ;; Defined at:
  5905 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  multiplier      2    3[BANK0 ] unsigned int 
  5908 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  product         2    7[BANK0 ] unsigned int 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  2    3[BANK0 ] unsigned int 
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0
  5915 ;; Tracked objects:
  5916 ;;		On entry : 60/0
  5917 ;;		On exit  : 60/0
  5918 ;;		Unchanged: FFF9F/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5920 ;;      Params:         0       4       0       0       0
  5921 ;;      Locals:         0       2       0       0       0
  5922 ;;      Temps:          0       0       0       0       0
  5923 ;;      Totals:         0       6       0       0       0
  5924 ;;Total ram usage:        6 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    3
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_ReadAmnt
  5931 ;;		_ReadStock
  5932 ;;		_paramter
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935  0E16                     ___wmul:	
  5936                           
  5937                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5938  0E16  01DA               	clrf	___wmul@product
  5939  0E17  01DB               	clrf	___wmul@product+1
  5940  0E18                     l3400:	
  5941  0E18  1C56               	btfss	___wmul@multiplier,0
  5942  0E19  2E20               	goto	l3404
  5943  0E1A  0858               	movf	___wmul@multiplicand,w
  5944  0E1B  07DA               	addwf	___wmul@product,f
  5945  0E1C  1803               	skipnc
  5946  0E1D  0ADB               	incf	___wmul@product+1,f
  5947  0E1E  0859               	movf	___wmul@multiplicand+1,w
  5948  0E1F  07DB               	addwf	___wmul@product+1,f
  5949  0E20                     l3404:	
  5950  0E20  1003               	clrc
  5951  0E21  0DD8               	rlf	___wmul@multiplicand,f
  5952  0E22  0DD9               	rlf	___wmul@multiplicand+1,f
  5953  0E23  1003               	clrc
  5954  0E24  0CD7               	rrf	___wmul@multiplier+1,f
  5955  0E25  0CD6               	rrf	___wmul@multiplier,f
  5956  0E26  0857               	movf	___wmul@multiplier+1,w
  5957  0E27  0456               	iorwf	___wmul@multiplier,w
  5958  0E28  1D03               	skipz
  5959  0E29  2E18               	goto	l3400
  5960  0E2A  085B               	movf	___wmul@product+1,w
  5961  0E2B  00D7               	movwf	?___wmul+1
  5962  0E2C  085A               	movf	___wmul@product,w
  5963  0E2D  00D6               	movwf	?___wmul
  5964  0E2E  0008               	return
  5965  0E2F                     __end_of___wmul:	
  5966  0E2F                     PL4:	
  5967  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0E30  00D6               	movwf	?___wmul
  5969  0E31  01D7               	clrf	?___wmul+1
  5970  0E32  3064               	movlw	100
  5971  0E33  00D8               	movwf	?___wmul+2
  5972  0E34  01D9               	clrf	?___wmul+3
  5973  0E35  0008               	return
  5974                           
  5975                           	psect	text1196
  5976  0C20                     __ptext1196:	
  5977 ;; =============== function _softreceive ends ============
  5978                           
  5979                           
  5980 ;; *************** function _SoftWareUart_Init *****************
  5981 ;; Defined at:
  5982 ;;		line 10 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;		None               void
  5989 ;; Registers used:
  5990 ;;		wreg
  5991 ;; Tracked objects:
  5992 ;;		On entry : 60/40
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0
  5998 ;;      Temps:          0       1       0       0       0
  5999 ;;      Totals:         0       1       0       0       0
  6000 ;;Total ram usage:        1 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    3
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009  0C20                     _SoftWareUart_Init:	
  6010                           
  6011                           ;softuart.c: 11: RD1=1;
  6012                           
  6013                           ; Regs used in _SoftWareUart_Init: [wreg]
  6014  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  6015  0C21  1488               	bsf	8,1
  6016                           
  6017                           ;softuart.c: 12: RD0=1;
  6018  0C22  1408               	bsf	8,0
  6019                           
  6020                           ;softuart.c: 13: TRISD1=0;
  6021  0C23  1683               	bsf	3,5	;RP0=1, select bank1
  6022  0C24  1088               	bcf	8,1
  6023                           
  6024                           ;softuart.c: 14: TRISD0=1;
  6025  0C25  1408               	bsf	8,0
  6026                           
  6027                           ;softuart.c: 15: RD1=1;
  6028  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0C27  1488               	bsf	8,1
  6030                           
  6031                           ;softuart.c: 16: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  6032  0C28  30A9               	movlw	169
  6033  0C29  00D3               	movwf	??_SoftWareUart_Init
  6034  0C2A                     u2217:	
  6035  0C2A  0BD3               	decfsz	??_SoftWareUart_Init,f
  6036  0C2B  2C2A               	goto	u2217
  6037  0C2C  2C2D               	nop2	;nop
  6038  0C2D  0008               	return
  6039  0C2E                     __end_of_SoftWareUart_Init:	
  6040                           
  6041                           	psect	text1206
  6042  0CD5                     __ptext1206:	
  6043 ;; =============== function ___wmul ends ============
  6044                           
  6045                           
  6046 ;; *************** function _memcmp *****************
  6047 ;; Defined at:
  6048 ;;		line 4 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\memcmp.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  s1              2    0[BANK0 ] PTR const void 
  6051 ;;		 -> STR_48(6), 
  6052 ;;  s2              1    2[BANK0 ] PTR const void 
  6053 ;;		 -> sms(20), 
  6054 ;;  n               2    3[BANK0 ] unsigned int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  2    0[BANK0 ] int 
  6059 ;; Registers used:
  6060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6061 ;; Tracked objects:
  6062 ;;		On entry : 60/0
  6063 ;;		On exit  : 60/0
  6064 ;;		Unchanged: FFE9F/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       5       0       0       0
  6067 ;;      Locals:         0       0       0       0       0
  6068 ;;      Temps:          0       1       0       0       0
  6069 ;;      Totals:         0       6       0       0       0
  6070 ;;Total ram usage:        6 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    3
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079  0CD5                     _memcmp:	
  6080  0CD5                     l4266:	
  6081                           ; Regs used in _memcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6082                           
  6083  0CD5  3001               	movlw	1
  6084  0CD6  02D6               	subwf	memcmp@n,f
  6085  0CD7  3000               	movlw	0
  6086  0CD8  1C03               	skipc
  6087  0CD9  03D7               	decf	memcmp@n+1,f
  6088  0CDA  02D7               	subwf	memcmp@n+1,f
  6089  0CDB  0A56               	incf	memcmp@n,w
  6090  0CDC  1903               	skipnz
  6091  0CDD  0A57               	incf	memcmp@n+1,w
  6092  0CDE  1903               	btfsc	3,2
  6093  0CDF  2D08               	goto	l4268
  6094  0CE0  0855               	movf	memcmp@s2,w
  6095  0CE1  0084               	movwf	4
  6096  0CE2  1383               	bcf	3,7	;select IRP bank0
  6097  0CE3  0800               	movf	0,w
  6098  0CE4  00D8               	movwf	??_memcmp
  6099  0CE5  0854               	movf	memcmp@s1+1,w
  6100  0CE6  00FF               	movwf	127
  6101  0CE7  0853               	movf	memcmp@s1,w
  6102  0CE8  0084               	movwf	4
  6103  0CE9  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  6104  0CEE  0658               	xorwf	??_memcmp,w
  6105  0CEF  1903               	skipnz
  6106  0CF0  2D03               	goto	l4264
  6107  0CF1  0854               	movf	memcmp@s1+1,w
  6108  0CF2  00FF               	movwf	127
  6109  0CF3  0853               	movf	memcmp@s1,w
  6110  0CF4  0084               	movwf	4
  6111  0CF5  160A  118A  2000   	fcall	stringtab
  6112  0CF8  00D8               	movwf	??_memcmp
  6113  0CF9  0855               	movf	memcmp@s2,w
  6114  0CFA  0084               	movwf	4
  6115  0CFB  1383               	bcf	3,7	;select IRP bank0
  6116  0CFC  0800               	movf	0,w
  6117  0CFD  0258               	subwf	??_memcmp,w
  6118  0CFE  00D3               	movwf	?_memcmp
  6119  0CFF  01D4               	clrf	?_memcmp+1
  6120  0D00  1C03               	skipc
  6121  0D01  03D4               	decf	?_memcmp+1,f
  6122  0D02  0008               	return
  6123  0D03                     l4264:	
  6124  0D03  0AD3               	incf	memcmp@s1,f
  6125  0D04  1903               	skipnz
  6126  0D05  0AD4               	incf	memcmp@s1+1,f
  6127  0D06  0AD5               	incf	memcmp@s2,f
  6128  0D07  2CD5               	goto	l4266
  6129  0D08                     l4268:	
  6130  0D08  01D3               	clrf	?_memcmp
  6131  0D09  01D4               	clrf	?_memcmp+1
  6132  0D0A  0008               	return
  6133  0D0B                     __end_of_memcmp:	
  6134                           
  6135                           	psect	text1207
  6136  0C6D                     __ptext1207:	
  6137 ;; =============== function _memcmp ends ============
  6138                           
  6139                           
  6140 ;; *************** function _eeprom_write *****************
  6141 ;; Defined at:
  6142 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\eewrite.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  addr            1    wreg     unsigned char 
  6145 ;;  value           1   14[BANK0 ] unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  addr            1   15[BANK0 ] unsigned char 
  6148 ;; Return value:  Size  Location     Type
  6149 ;;		None               void
  6150 ;; Registers used:
  6151 ;;		wreg, status,2, status,0
  6152 ;; Tracked objects:
  6153 ;;		On entry : 60/0
  6154 ;;		On exit  : 60/60
  6155 ;;		Unchanged: FFF9F/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6157 ;;      Params:         0       1       0       0       0
  6158 ;;      Locals:         0       1       0       0       0
  6159 ;;      Temps:          0       0       0       0       0
  6160 ;;      Totals:         0       2       0       0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    3
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_main
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170  0C6D                     _eeprom_write:	
  6171                           
  6172                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6173                           ;eeprom_write@addr stored from wreg
  6174  0C6D  00E2               	movwf	eeprom_write@addr
  6175  0C6E                     l1210:	
  6176  0C6E  1683               	bsf	3,5	;RP0=1, select bank3
  6177  0C6F  1703               	bsf	3,6	;RP1=1, select bank3
  6178  0C70  188C               	btfsc	12,1
  6179  0C71  2C6E               	goto	l1210
  6180  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  6182  0C74  0862               	movf	eeprom_write@addr,w
  6183  0C75  1703               	bsf	3,6	;RP1=1, select bank2
  6184  0C76  008D               	movwf	13	;volatile
  6185  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6186  0C78  0861               	movf	eeprom_write@value,w
  6187  0C79  1703               	bsf	3,6	;RP1=1, select bank2
  6188  0C7A  008C               	movwf	12	;volatile
  6189  0C7B  303F               	movlw	63
  6190  0C7C  1683               	bsf	3,5	;RP0=1, select bank3
  6191  0C7D  058C               	andwf	12,f	;volatile
  6192  0C7E  1003               	bcf	3,0
  6193  0C7F  1B8B               	btfsc	11,7
  6194  0C80  1403               	bsf	3,0
  6195  0C81  138B               	bcf	11,7
  6196  0C82  150C               	bsf	12,2
  6197  0C83  3055               	movlw	85
  6198  0C84  008D               	movwf	13	;volatile
  6199  0C85  30AA               	movlw	170
  6200  0C86  008D               	movwf	13	;volatile
  6201  0C87  148C               	bsf	12,1
  6202  0C88  110C               	bcf	12,2
  6203  0C89  1803               	btfsc	3,0
  6204  0C8A  178B               	bsf	11,7
  6205  0C8B  0008               	return
  6206  0C8C                     __end_of_eeprom_write:	
  6207                           
  6208                           	psect	text1208
  6209  0C4F                     __ptext1208:	
  6210 ;; =============== function _eeprom_write ends ============
  6211                           
  6212                           
  6213 ;; *************** function _strcmp *****************
  6214 ;; Defined at:
  6215 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strcmp.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  s1              1    wreg     PTR const unsigned char 
  6218 ;;		 -> card_store(15), 
  6219 ;;  s2              1    0[BANK0 ] PTR const unsigned char 
  6220 ;;		 -> User3(13), User2(13), User1(13), 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  s1              1    5[BANK0 ] PTR const unsigned char 
  6223 ;;		 -> card_store(15), 
  6224 ;;  r               1    4[BANK0 ] char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  2    0[BANK0 ] int 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 60/0
  6231 ;;		On exit  : 160/0
  6232 ;;		Unchanged: FFE9F/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6234 ;;      Params:         0       2       0       0       0
  6235 ;;      Locals:         0       2       0       0       0
  6236 ;;      Temps:          0       2       0       0       0
  6237 ;;      Totals:         0       6       0       0       0
  6238 ;;Total ram usage:        6 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    3
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_main
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247  0C4F                     _strcmp:	
  6248                           
  6249                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  6250                           ;strcmp@s1 stored from wreg
  6251  0C4F  00D8               	movwf	strcmp@s1
  6252  0C50  2C57               	goto	l4248
  6253  0C51                     l4250:	
  6254  0C51  0858               	movf	strcmp@s1,w
  6255  0C52  0AD8               	incf	strcmp@s1,f
  6256  0C53  0084               	movwf	4
  6257  0C54  0880               	movf	0,f
  6258  0C55  1903               	btfsc	3,2
  6259  0C56  2C67               	goto	l4252
  6260  0C57                     l4248:	
  6261  0C57  0853               	movf	strcmp@s2,w
  6262  0C58  0AD3               	incf	strcmp@s2,f
  6263  0C59  0084               	movwf	4
  6264  0C5A  1383               	bcf	3,7	;select IRP bank0
  6265  0C5B  0800               	movf	0,w
  6266  0C5C  00D5               	movwf	??_strcmp
  6267  0C5D  0858               	movf	strcmp@s1,w
  6268  0C5E  0084               	movwf	4
  6269  0C5F  0800               	movf	0,w
  6270  0C60  00D6               	movwf	??_strcmp+1
  6271  0C61  0855               	movf	??_strcmp,w
  6272  0C62  0256               	subwf	??_strcmp+1,w
  6273  0C63  00D7               	movwf	strcmp@r
  6274  0C64  08D7               	movf	strcmp@r,f
  6275  0C65  1903               	btfsc	3,2
  6276  0C66  2C51               	goto	l4250
  6277  0C67                     l4252:	
  6278  0C67  0857               	movf	strcmp@r,w
  6279  0C68  00D3               	movwf	?_strcmp
  6280  0C69  01D4               	clrf	?_strcmp+1
  6281  0C6A  1BD3               	btfsc	?_strcmp,7
  6282  0C6B  03D4               	decf	?_strcmp+1,f
  6283  0C6C  0008               	return
  6284  0C6D                     __end_of_strcmp:	
  6285                           
  6286                           	psect	text1209
  6287  0C2E                     __ptext1209:	
  6288 ;; =============== function _strcmp ends ============
  6289                           
  6290                           
  6291 ;; *************** function _uart_init *****************
  6292 ;; Defined at:
  6293 ;;		line 145 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;		None               void
  6300 ;; Registers used:
  6301 ;;		wreg, status,2
  6302 ;; Tracked objects:
  6303 ;;		On entry : 17F/0
  6304 ;;		On exit  : 17F/0
  6305 ;;		Unchanged: FFE80/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6307 ;;      Params:         0       0       0       0       0
  6308 ;;      Locals:         0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0
  6310 ;;      Totals:         0       0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    3
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_main
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320  0C2E                     _uart_init:	
  6321                           
  6322                           ;Main.c: 146: PORTC=0xFF;
  6323                           
  6324                           ; Regs used in _uart_init: [wreg+status,2]
  6325  0C2E  30FF               	movlw	255
  6326  0C2F  0087               	movwf	7	;volatile
  6327                           
  6328                           ;Main.c: 147: TRISC=0x80;
  6329  0C30  3080               	movlw	128
  6330  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  6331  0C32  0087               	movwf	7	;volatile
  6332                           
  6333                           ;Main.c: 148: TXSTA=0X24;
  6334  0C33  3024               	movlw	36
  6335  0C34  0098               	movwf	24	;volatile
  6336                           
  6337                           ;Main.c: 149: RCSTA=0X90;
  6338  0C35  3090               	movlw	144
  6339  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0C37  0098               	movwf	24	;volatile
  6341                           
  6342                           ;Main.c: 150: SPBRG=129;
  6343  0C38  3081               	movlw	129
  6344  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  6345  0C3A  0099               	movwf	25	;volatile
  6346                           
  6347                           ;Main.c: 151: RCREG=0;
  6348  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0C3C  019A               	clrf	26	;volatile
  6350  0C3D  0008               	return
  6351  0C3E                     __end_of_uart_init:	
  6352                           
  6353                           	psect	text1215
  6354  0D0B                     __ptext1215:	
  6355 ;; =============== function _DelayMs ends ============
  6356                           
  6357                           
  6358 ;; *************** function _ISR *****************
  6359 ;; Defined at:
  6360 ;;		line 63 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 60/0
  6372 ;;		Unchanged: FFE9F/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6374 ;;      Params:         0       0       0       0       0
  6375 ;;      Locals:         0       0       0       0       0
  6376 ;;      Temps:          3       0       0       0       0
  6377 ;;      Totals:         3       0       0       0       0
  6378 ;;Total ram usage:        3 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    2
  6381 ;; This function calls:
  6382 ;;		_gsm_read_line2
  6383 ;; This function is called by:
  6384 ;;		Interrupt level 1
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387  0D0B                     _ISR:	
  6388                           
  6389                           ;Main.c: 64: if (RCIF==1)
  6390  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  6391  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0D0D  1E8C               	btfss	12,5
  6393  0D0E  2D12               	goto	i1l1107
  6394                           
  6395                           ;Main.c: 65: { sms_indication=0;
  6396  0D0F  10F6               	bcf	_sms_indication/(0+8),_sms_indication& (0+7)
  6397                           
  6398                           ;Main.c: 66: gsm_read_line2(sms);
  6399  0D10  30C7               	movlw	_sms& (0+255)
  6400  0D11  251B               	fcall	_gsm_read_line2
  6401  0D12                     i1l1107:	
  6402  0D12  0875               	movf	??_ISR+2,w
  6403  0D13  008A               	movwf	10
  6404  0D14  0874               	movf	??_ISR+1,w
  6405  0D15  0084               	movwf	4
  6406  0D16  0873               	movf	??_ISR,w
  6407  0D17  0083               	movwf	3
  6408  0D18  0EFE               	swapf	126,f
  6409  0D19  0E7E               	swapf	126,w
  6410  0D1A  0009               	retfie
  6411  0D1B                     __end_of_ISR:	
  6412  0D1B                     __ptext1216:	
  6413 ;; =============== function _ISR ends ============
  6414                           
  6415                           
  6416 ;; *************** function _gsm_read_line2 *****************
  6417 ;; Defined at:
  6418 ;;		line 46 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  buffer          1    wreg     PTR unsigned char 
  6421 ;;		 -> sms(20), 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  buffer          1    1[COMMON] PTR unsigned char 
  6424 ;;		 -> sms(20), 
  6425 ;;  rec_data        1    2[COMMON] unsigned char 
  6426 ;;  flag            1    0[COMMON] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;		None               void
  6429 ;; Registers used:
  6430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 60/0
  6433 ;;		On exit  : 160/0
  6434 ;;		Unchanged: FFE9F/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6436 ;;      Params:         0       0       0       0       0
  6437 ;;      Locals:         3       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0
  6439 ;;      Totals:         3       0       0       0       0
  6440 ;;Total ram usage:        3 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    1
  6443 ;; This function calls:
  6444 ;;		i1_receive
  6445 ;; This function is called by:
  6446 ;;		_ISR
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449  0D1B                     _gsm_read_line2:	
  6450                           
  6451                           ; Regs used in _gsm_read_line2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6452                           ;gsm_read_line2@buffer stored from wreg
  6453  0D1B  00F1               	movwf	gsm_read_line2@buffer
  6454  0D1C  01F0               	clrf	gsm_read_line2@flag
  6455  0D1D                     i1l3320:	
  6456                           
  6457                           ;Main.c: 50: {
  6458                           ;Main.c: 51: rec_data = receive();
  6459  0D1D  253C  120A  158A   	fcall	i1_receive
  6460  0D20  00F2               	movwf	gsm_read_line2@rec_data
  6461                           
  6462                           ;Main.c: 52: if(rec_data=='#'){flag=1;rec_data = receive(); }
  6463  0D21  3A23               	xorlw	35
  6464  0D22  1D03               	skipz
  6465  0D23  2D2A               	goto	i1l3328
  6466  0D24  01F0               	clrf	gsm_read_line2@flag
  6467  0D25  0AF0               	incf	gsm_read_line2@flag,f
  6468  0D26  253C  120A  158A   	fcall	i1_receive
  6469  0D29  00F2               	movwf	gsm_read_line2@rec_data
  6470  0D2A                     i1l3328:	
  6471                           
  6472                           ;Main.c: 53: if(flag)
  6473  0D2A  0870               	movf	gsm_read_line2@flag,w
  6474  0D2B  1903               	btfsc	3,2
  6475  0D2C  2D33               	goto	i1l3334
  6476                           
  6477                           ;Main.c: 54: {
  6478                           ;Main.c: 55: *buffer++ = rec_data;
  6479  0D2D  0871               	movf	gsm_read_line2@buffer,w
  6480  0D2E  0084               	movwf	4
  6481  0D2F  0872               	movf	gsm_read_line2@rec_data,w
  6482  0D30  1383               	bcf	3,7	;select IRP bank0
  6483  0D31  0080               	movwf	0
  6484  0D32  0AF1               	incf	gsm_read_line2@buffer,f
  6485  0D33                     i1l3334:	
  6486                           
  6487                           ;Main.c: 56: }
  6488                           ;Main.c: 57: }while (rec_data != '\n');
  6489  0D33  0872               	movf	gsm_read_line2@rec_data,w
  6490  0D34  3A0A               	xorlw	10
  6491  0D35  1D03               	skipz
  6492  0D36  2D1D               	goto	i1l3320
  6493                           
  6494                           ;Main.c: 58: *buffer='\0';
  6495  0D37  0871               	movf	gsm_read_line2@buffer,w
  6496  0D38  0084               	movwf	4
  6497  0D39  1383               	bcf	3,7	;select IRP bank0
  6498  0D3A  0180               	clrf	0
  6499  0D3B  0008               	return
  6500  0D3C                     __end_of_gsm_read_line2:	
  6501  0D3C                     __ptext1217:	
  6502 ;; =============== function _gsm_read_line2 ends ============
  6503                           
  6504                           
  6505 ;; *************** function i1_receive *****************
  6506 ;; Defined at:
  6507 ;;		line 2 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      unsigned char 
  6514 ;; Registers used:
  6515 ;;		wreg
  6516 ;; Tracked objects:
  6517 ;;		On entry : 60/0
  6518 ;;		On exit  : 60/0
  6519 ;;		Unchanged: FFF9F/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6521 ;;      Params:         0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0
  6524 ;;      Totals:         0       0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_gsm_read_line2
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533  0D3C                     i1_receive:	
  6534                           
  6535                           ;UART.C: 3: if(OERR){CREN=0;CREN=1;}
  6536                           
  6537                           ; Regs used in i1_receive: [wreg]
  6538  0D3C  1C98               	btfss	24,1
  6539  0D3D  2D40               	goto	i1l1015
  6540  0D3E  1218               	bcf	24,4
  6541  0D3F  1618               	bsf	24,4
  6542  0D40                     i1l1015:	
  6543  0D40  1E8C               	btfss	12,5
  6544  0D41  2D40               	goto	i1l1015
  6545                           
  6546                           ;UART.C: 5: return(RCREG);
  6547  0D42  081A               	movf	26,w	;volatile
  6548  0D43  0008               	return
  6549  0D44                     __end_ofi1_receive:	
  6550                           
  6551                           	psect	intentry
  6552  0004                     __pintentry:	
  6553                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6554                           
  6555  0004                     interrupt_function:	
  6556  007E                     saved_w	set	btemp
  6557  0004  00FE               	movwf	btemp
  6558  0005  0803               	movf	3,w
  6559  0006  00F3               	movwf	??_ISR
  6560  0007  0804               	movf	4,w
  6561  0008  00F4               	movwf	??_ISR+1
  6562  0009  080A               	movf	10,w
  6563  000A  00F5               	movwf	??_ISR+2
  6564  000B  120A  158A  2D0B   	ljmp	_ISR
  6565                           
  6566                           	psect	text1218
  6567  0000                     __ptext1218:	
  6568 ;; =============== function i1_receive ends ============
  6569                           
  6570  007E                     btemp	set	126	;btemp
  6571  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Sat Mar 05 00:04:42 2016

                         pc 0002                 _softreceive 07DA                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 005E                          fsr 0004  
       ___wmul@multiplicand 0058                         l923 03A9                         l924 03AB  
                       l925 0000                         l927 0000                         l951 0000  
                       l960 0273                         l944 039B                         l954 0264  
                       l946 0000                         l955 0265                         l956 0269  
                       l948 0000                         l980 0000                         l957 026A  
                       l965 0000                         l958 026E                         l974 0000  
                       l959 026F                         l992 07DB                         l968 0000  
                       _GIE 005F                         l989 0000                         l998 0000  
                       _RC0 0038                         _RC1 0039                         _RD0 0040  
                       _RD1 0041                         _RD2 0042                         _RD3 0043  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         _ISR 0D0B                         fsr0 0004  
                       _sms 00C7                         indf 0000                ___awmod@sign 0058  
 __end_of_SoftWareUart_Init 0C2E                        ?_ISR 0070                        l1021 018C  
                      l1015 0187                        l1024 0000                        l1033 0000  
                      l1018 0000                        l1210 0C6E                        l1122 0000  
                      l1131 0000                        l1051 0000                        l1140 0000  
                      l1116 0000                        l1125 0000                        l1134 0000  
                      l1231 0000                        l1119 0000                        l1143 0000  
                      l1128 0000                        l1137 0000                        l1209 0000  
                      l1146 0000                        l1243 0000                        l1155 0000  
                      l1253 0000                        l1190 0000                        l1270 03C5  
                      l1263 0000                        l1273 0000                        l1188 0DFB  
                      l1390 0000                        l1279 0000                        l3400 0E18  
                      l3306 0000                        l1458 0000                        l4220 0000  
                      l3404 0E20                        l4222 0000                        l3350 0000  
                      l3406 0000                        l3430 0000                        l3414 0000  
                      l4310 0000                        l4302 0000                        l3510 0352  
                      l3502 0000                        l4224 0000                        l4216 0000  
                      l3408 0000                        l3424 0FB0                        l3416 0000  
                      l4312 03D2                        l4320 0E88                        l3504 0000  
                      l4400 0000                        l4226 0000                        l4218 0000  
                      l4250 0C51                        l3434 0000                        l3426 0000  
                      l4306 0000                        l4330 0000                        l4322 0000  
                      l3514 0000                        l4228 0000                        l3348 0000  
                      l4252 0C67                        l3372 0000                        l3364 0000  
                      l3436 0FC7                        l4324 0000                        l4316 0000  
                      l3540 0000                        l3532 0000                        l3516 035B  
                      l3508 0000                        l4340 0000                        l4412 0000  
                      l4420 0000                        l4500 0000                        l4238 0000  
                      l4246 0000                        l3374 0000                        l3366 0000  
                      l4318 0000                        l3542 0388                        l3526 0369  
                      l3518 0000                        l4342 02FC                        l4334 0000  
                      l4406 0000                        l4422 0000                        l4430 0000  
                      l4510 0000                        l4502 0000                        l4248 0C57  
                      l3376 0000                        l3368 0000                        l4264 0D03  
                      l4256 0000                        l4280 0F8A                        l4272 0000  
                      l4328 0E9C                        l3536 0000                        l3528 0000  
                      l4360 0000                        l4336 0000                        l4416 0000  
                      l4424 0000                        l4440 0000                        l4432 0000  
                      l4512 0000                        l4504 0000                        l4520 0000  
                      l4600 0000                        l3378 0000                        l4266 0CD5  
                      l3538 0380                        l4354 030F                        l4362 0322  
                      l4346 0303                        l4370 0000                        l4418 00E2  
                      l4442 0000                        l4434 0000                        l4426 0000  
                      l4450 0000                        l4514 0000                        l4506 0000  
                      l4522 0000                        l4530 0000                        l4610 0000  
                      l4602 016B                        l4268 0D08                        l4292 0000  
                      l4364 0000                        l4372 039D                        l4380 0000  
                      l4436 0000                        l4428 0000                        l4452 0000  
                      l4444 0000                        l4460 0000                        l4516 00D8  
                      l4508 0000                        l4524 0000                        l4540 0000  
                      l4620 0000                        l4612 0000                        l3398 0000  
                      l4286 0000                        l4294 0000                        l4366 032A  
                      l4374 0000                        l4382 0000                        l4438 0000  
                      l4454 0000                        l4446 0000                        l4470 0000  
                      l4462 0000                        l4526 0000                        l4534 0000  
                      l4542 0000                        l4550 0000                        l4606 0000  
                      l4622 0000                        l4614 0000                        l4630 0000  
                      l4710 0000                        l4702 0477                        l4288 0F9D  
                      l4296 0000                        l4376 0000                        l4384 0000  
                      l4392 0000                        l4456 0000                        l4448 0000  
                      l4472 0000                        l4464 0000                        l4528 0000  
                      l4536 0243                        l4544 0000                        l4552 0000  
                      l4560 0000                        l4608 0000                        l4624 0000  
                      l4616 0000                        l4640 0000                        l4632 0000  
                      l4800 067D                        l4720 0000                        l4712 0000  
                      l4298 03BF                        l4378 038D                        l4386 0000  
                      l4474 0000                        l4466 0000                        l4458 0000  
                      l4490 0000                        l4546 0000                        l4538 0000  
                      l4554 0000                        l4562 0000                        l4570 0000  
                      l4618 0000                        l4642 0000                        l4634 0000  
                      l4626 0000                        l4810 0000                        l4802 0000  
                      l4730 0000                        l4722 0000                        l4714 0000  
                      l4650 0000                        l4388 0000                        l4468 0000  
                      l4484 07C1                        l4476 0000                        l4492 0000  
                      l4548 0000                        l4556 0000                        l4564 0000  
                      l4572 0000                        l4644 0000                        l4636 0000  
                      l4628 0000                        l4820 0000                        l4812 0000  
                      l4804 0000                        l4740 0000                        l4732 0000  
                      l4724 0000                        l4716 0000                        l4708 0486  
                      l4660 0000                        l4652 0000                        l4398 07E5  
                      l4486 0000                        l4494 0000                        l4558 0000  
                      l4590 0149                        l4582 0000                        l4574 0000  
                      l4566 0000                        l4638 0000                        l4830 0000  
                      l4822 0000                        l4814 0000                        l4806 0000  
                      l4750 0000                        l4742 0000                        l4734 0000  
                      l4726 0000                        l4718 0000                        l4670 0419  
                      l4662 0000                        l4654 0000                        l4646 0000  
                      l4488 0000                        l4496 0087                        l4584 0138  
                      l4576 0000                        l4568 0000                        l4840 0000  
                      l4832 0000                        l4824 0000                        l4816 0000  
                      l4808 0000                        l4760 0000                        l4744 0000  
                      l4736 0000                        l4728 0000                        l4680 0000  
                      l4672 0000                        l4664 0000                        l4656 0000  
                      l4648 0000                        l4594 0000                        l4578 0127  
                      l4842 0000                        l4834 0000                        l4826 0000  
                      l4818 0000                        l4770 0000                        l4762 0000  
                      l4754 0586                        l4850 0782                        l4746 0000  
                      l4738 0000                        l4690 0000                        l4682 0000  
                      l4666 0000                        l4658 0000                        l4596 015A  
                      l4588 0000                        l4860 0000                        l4852 0000  
                      l4836 0000                        l4828 0000                        l4780 0000  
                      l4772 0000                        l4764 0000                        l4756 0000  
                      l4748 0000                        l4676 0000                        l4684 0445  
                      l4668 0000                        l4854 0000                        l4838 0000  
                      l4790 0000                        l4782 0000                        l4774 0000  
                      l4766 0000                        l4758 0000                        l4686 0000  
                      l4678 0000                        l4792 0000                        l4784 0000  
                      l4776 0000                        l4768 0000                        l4848 0774  
                      l4696 0469                        l4688 0000                        l4866 0000  
                      l4858 0793                        l4794 0000                        l4786 0000  
                      l4778 0000                        l4796 0000                        l4788 0000  
                      STR_1 1201                        STR_2 11F0                        STR_3 1275  
                      STR_4 1251                        STR_5 1246                        STR_6 123B  
                      STR_7 1195                        STR_8 125B                        STR_9 106D  
                      _CREN 00C4                        u1055 0FB9                        u1225 0372  
                      u2107 043E                        u2117 0799                        u2207 07F5  
                      u2127 01AD                        u2217 0C2A                        u2137 01BD  
                      u2227 0392                        u2147 01E0                        u2157 01EF  
                      u2167 01FC                        u2177 0209                        u1715 0F90  
                      u2187 07DF                        u2197 07E7                        _PIE1 008C  
                      u1845 0315                        u1945 07D6                        _RCIF 0065  
                      _OERR 00C1                        _WREN 0C62                        _TXIF 0064  
            ??_eeprom_write 0076                        _User 0026                        _main 03E8  
                      btemp 007E                        start 000E             __end_of_DelayMs 03B9  
               _usartstring 00E2                       ??_ISR 0073         __end_of_DisplayAmnt 02F2  
       __end_of_DisplayRise 0E84          __size_of_RFID_read 001E                       ?_main 0070  
           __end_of___awdiv 038D             __end_of___lbdiv 03D4                       _EEADR 010D  
                     STR_10 103A                       STR_20 111A                       STR_12 101D  
                     STR_21 1085                       STR_30 1222                       STR_14 1159  
                     STR_22 109B                       STR_31 126B                       STR_23 11DE  
                     STR_32 1212                       STR_24 11BA                       STR_16 116D  
                     STR_40 10F0                       STR_41 10B1                       STR_33 1270  
                     STR_25 11CC                       STR_42 10C6                       STR_34 11CC  
                     STR_26 11A8                       STR_18 1181                       STR_35 11A8  
                     STR_43 112F                       STR_19 1144                       STR_27 1055  
                     STR_28 122F                       STR_44 1105                       STR_36 10DB  
           __end_of___awmod 032F                       STR_45 10B1                       STR_29 126B  
                     STR_37 10B1                       STR_46 10C6                       STR_38 10C6  
                     STR_47 112F                       STR_39 112F                       STR_48 1265  
           __end_of___lbmod 0EA0                       _CARRY 0018                       _ANSEL 0188  
           ___awdiv@divisor 0059             __end_of___lwdiv 0FCC             __end_of___lwmod 0FA2  
           ___awdiv@counter 005D                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099                       _PORTC 0007                       _PORTD 0008  
                     _TRISC 0087                       _TRISD 0088                       _TXREG 0019  
                     _TXSTA 0098                       _User1 00A0                       _User2 00AD  
                     _User3 00BA             __end_of_lcddata 0348             __end_of_lcdport 0275  
                     _digit 1012             __end_of_receive 018B              __pbitbssCOMMON 03B0  
                     pclath 000A           ?_LoadStockToArray 0070                       status 0003  
           __end_of_startup 01E7                       wtemp0 007E          ??_LoadStockToArray 0076  
           ___lbdiv@divisor 0053             ___lbdiv@counter 0055                __end_of_main 07BC  
          __end_of_ReadAmnt 0DF8          __size_ofi1_receive 0008               _KeroseneArray 004B  
                    ??_main 0066               _KeroseneStock 0020  __size_of_SoftWareUart_Init 000E  
      __end_of_DisplaySugar 0037        __end_of_DisplayStock 0079                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            ___awdiv@dividend 005B  
                    _ANSELH 0189                      i1l1015 0D40                      i1l1103 0000  
                    i1l1018 0000                      i1l1107 0D12                      i1l3320 0D1D  
                    i1l3330 0000                      i1l3322 0000                      i1l3332 0000  
                    i1l3334 0D33                      i1l3326 0000                      i1l3318 0000  
                    i1l3342 0000                      i1l3328 0D2A                      i1l3338 0000  
                    i1l3582 0000                      _INTCON 000B                   ??_DelayMs 0076  
         __end_of_RFID_read 07DA                      _TRISD0 0440                      _TRISD1 0441  
        __size_of_ReadStock 0023                      _DelayS 039A        __size_of_eeprom_read 001E  
               _DisplayAmnt 0275            __end_of_lcd_init 022C                 _DisplayRise 0E5E  
                    ___wmul 0E16                   ??___awdiv 0076                   ??___lbdiv 0076  
                 ??___awmod 0076                   ??___lbmod 0054          __size_of_SendStock 0069  
                    _enable 038D                   ??___lwdiv 0076                   ??___lwmod 0076  
                    _lcdcmd 022C            __end_of_gsm_init 0182                      _memcmp 0CD5  
          ___awdiv@quotient 005F             ___awmod@divisor 0053            __end_of_paramter 0D5E  
      __end_of_eeprom_write 0C8C             ___awmod@counter 0057             _DisplayKerosene 0E36  
              transmit@data 0053                   ??_lcddata 0076                      _strcmp 0C4F  
                    clrloop 0C19                   ??_lcdport 0076      gsm_read_line2@rec_data 0072  
                _User1Sugar 0030                  _User2Sugar 0033                  _User3Sugar 0036  
                 ??_receive 0076                      saved_w 007E                  _SugarArray 004F  
                _SugarStock 0024            __end_of_transmit 0191                   ??_startup 005A  
          ___lbdiv@dividend 0054           __end_ofi1_receive 0D44             ___lbmod@divisor 0053  
         DisplaySugar@Sugar 0058             ___lbmod@counter 0056             eeprom_read@addr 0055  
            __pcstackCOMMON 0070                __pidataBANK1 0CAE                ?_softreceive 0070  
          ___lbdiv@quotient 0056           __end_of_ReadStock 0D81             softreceive@Data 0054  
         eeprom_write@value 0061             softreceive@mask 0055           __end_of_SendStock 00E2  
                __pbssBANK0 0020                  __pbssBANK1 00C7                  _card_store 0037  
        __size_of_lcdstring 001C                   ?_ReadAmnt 0070                     ?_DelayS 0070  
              ?_usartstring 0054                  __pmaintext 03E8     __end_of_DisplayKerosene 0E5E  
                   ?___wmul 0056                  __pintentry 0004                     ?_enable 0070  
                   ?_lcdcmd 0070                     ?_memcmp 0053                  __ptext1200 0348  
                __ptext1201 0E84                  __ptext1210 0DF8                  __ptext1202 03B9  
                __ptext1211 018B                  __ptext1203 0F7E                  __ptext1212 0182  
                __ptext1204 0FA2                  __ptext1213 025F                  __ptext1205 0E16  
                __ptext1214 03A8                  __ptext1206 0CD5                  __ptext1215 0D0B  
                __ptext1207 0C6D                  __ptext1216 0D1B                  __ptext1208 0C4F  
                __ptext1217 0D3C                  __ptext1209 0C2E                  __ptext1218 0000  
                __ptext1180 0E36                  __ptext1181 0E5E                  __ptext1190 0EA0  
                __ptext1182 0011                  __ptext1191 0D44                  __ptext1183 0275  
                __ptext1192 0D5E                  __ptext1184 0243                  __ptext1193 0D81  
                __ptext1185 01E7                  __ptext1177 0191                  __ptext1194 00E2  
                __ptext1186 0079                  __ptext1178 0037                  __ptext1195 07DA  
                __ptext1187 07BC                  __ptext1179 00FE                  __ptext1196 0C20  
                __ptext1188 032F                  __ptext1197 038D                  __ptext1189 022C  
                __ptext1198 039A                  __ptext1199 02F2                     ?_strcmp 0053  
     __size_of_DisplaySugar 0026       __size_of_DisplayStock 0042          __size_of_uart_init 0010  
                   DelayS@i 0056                   ?_lcd_init 0070     __size_of_gsm_read_line2 0021  
          _DisplayAmnt$1127 0064                     _DelayMs 03A8                  ??_ReadAmnt 0076  
                 ?_gsm_init 0070                   ?_paramter 0070             __size_of_DelayS 000E  
     __size_of_eeprom_write 001F                _DisplaySugar 0011                _DisplayStock 0037  
                   ___awdiv 0348                     ___lbdiv 03B9                     ___awmod 02F2  
                   ___lbmod 0E84             __size_of___wmul 0019                     ___lwdiv 0FA2  
                   ___lwmod 0F7E   __size_of_LoadStockToArray 00DE                   ?_transmit 0070  
           __size_of_enable 000D             __size_of_lcdcmd 0017             __size_of_memcmp 0036  
         __end_of_lcdstring 025F                     _lcddata 032F             __size_of_strcmp 001E  
              __size_of_ISR 0010                     _lcdport 025F                     _receive 0182  
          ___awmod@dividend 0055                     lcdcmd@a 0057                     lcdcmd@y 0055  
                   lcdcmd@z 0056                     _startup 0191                  ??_lcd_init 0058  
                 DelayS@cnt 0055        end_of_initialization 0CAA                     memcmp@n 0056  
                   init_ram 0C42                  ??_gsm_init 0076                _eeprom_write 0C6D  
                ??_paramter 0076           __end_of_uart_init 0C3E                   _RFID_read 07BC  
              ?_DisplayAmnt 0061                ?_DisplayRise 0058            ?_DisplayKerosene 0058  
           DisplayAmnt@Amnt 0061                __pstringtext 1000                  ??_transmit 0076  
                   strcmp@r 0057        __size_of_softreceive 0021            ___lbmod@dividend 0055  
     _LoadStockToArray$1128 005F                 ___lbmod@rem 0057               ??_eeprom_read 0053  
                 i1_receive 0D3C              __end_of_DelayS 03A8                  ?_RFID_read 0070  
           DisplayRise@Rise 0058        __size_of_usartstring 001C              __end_of___wmul 0E2F  
            __end_of_enable 039A              __end_of_lcdcmd 0243              __end_of_memcmp 0D0B  
          _delayus_variable 0077              __end_of_strcmp 0C6D         start_initialization 0C8C  
               __end_of_ISR 0D1B                  lcdstring@a 0058                   _ReadStock 0D5E  
            _gsm_read_line2 0D1B                   _SendStock 0079                    ??_DelayS 0076  
                ?i1_receive 0070           __size_of_ReadAmnt 0077                   _RiseArray 0046  
       DisplayRise@Location 0059                   _RiseStock 0022                    ??___wmul 0076  
       __end_of_eeprom_read 0E16                    ??_enable 0053                    ??_lcdcmd 0076  
          _LoadStockToArray 0EA0                 __pdataBANK1 00A0                   _User1Rise 002F  
                 _User2Rise 0032                   _User3Rise 0035                    ??_memcmp 0058  
                  ??_strcmp 0055         DisplayAmnt@Location 0063                 __pbssCOMMON 0077  
    __end_of_gsm_read_line2 0D3C               __pcstackBANK0 0053                  ?_ReadStock 0070  
                RFID_read@i 0056            eeprom_write@addr 0062                    ?_DelayMs 0070  
         __size_of_lcd_init 0045                  ?_SendStock 0070           __size_of_gsm_init 0084  
          ___lwdiv@dividend 005A                 ??_RFID_read 0076           __size_of_paramter 001A  
                  ?___awdiv 0059                    ?___lbdiv 0053                    ?___awmod 0053  
                  ?___lbmod 0053        __size_of_DisplayAmnt 007D                    ?___lwdiv 0058  
                  ?___lwmod 0053        __size_of_DisplayRise 0026           __size_of_transmit 0006  
                  ?_lcddata 0070                    ?_lcdport 0070                    ?_receive 0070  
                 _lcdstring 0243             ?_gsm_read_line2 0070            ___lwdiv@quotient 005C  
                  ?_startup 0070           interrupt_function 0004                   _rfid_flag 03B0  
            ___wmul@product 005A                    DelayMs@i 0054                 ??i1_receive 0070  
               _eeprom_read 0DF8                   _uart_init 0C2E                 __stringbase 1012  
         ___wmul@multiplier 0056                  ?_lcdstring 0058                 ??_ReadStock 0076  
             _User1Kerosene 002E                    _ReadAmnt 0D81               _User2Kerosene 0031  
          __size_of_DelayMs 0011               _User3Kerosene 0034                 ??_SendStock 0076  
             usartstring@st 0054        gsm_read_line2@buffer 0071                   init_fetch 0C3E  
             ??_softreceive 0053                  ?_uart_init 0070                    _User1amt 0028  
                  _User2amt 002A                    _User3amt 002C            __size_of___awdiv 0045  
          __size_of___lbdiv 001B            __size_of___awmod 003D            __size_of___lbmod 001C  
          __size_of___lwdiv 002A            __size_of___lwmod 0024    __size_of_DisplayKerosene 0028  
          __size_of_lcddata 0019            __size_of_lcdport 0016            __size_of_receive 0009  
           ___lwdiv@divisor 0058             ___lwdiv@counter 005E                    _lcd_init 01E7  
          __size_of_startup 0056    __end_of_LoadStockToArray 0F7E                    _gsm_init 00FE  
             __size_of_main 03D4                    _paramter 0D44               ??_usartstring 0076  
                  clear_ram 0C18                    _transmit 018B                    lcddata@a 0057  
                  lcddata@y 0055                    lcddata@z 0056                    lcdport@a 0053  
       __end_of_softreceive 07FB                  DelayMs@cnt 0053                 ??_lcdstring 0076  
                  memcmp@s1 0053                    memcmp@s2 0055                    intlevel1 0000  
          ___lwmod@dividend 0055                   stringcode 100A               ?_DisplaySugar 0058  
             ?_DisplayStock 0070                 ??_uart_init 0076         __end_of_usartstring 00FE  
          ??_gsm_read_line2 0070          gsm_read_line2@flag 0070                    strcmp@s1 0058  
                  strcmp@s2 0053             ___lwmod@divisor 0053             ___lwmod@counter 0057  
                  stringtab 1000              _sms_indication 03B1           _SoftWareUart_Init 0C20  
         ??_DisplayKerosene 0076        DisplaySugar@Location 0059          ?_SoftWareUart_Init 0070  
             ?_eeprom_write 0061                ?_eeprom_read 0070     DisplayKerosene@Kerosene 0058  
   DisplayKerosene@Location 0059               ??_DisplayAmnt 0076         ??_SoftWareUart_Init 0053  
             ??_DisplayRise 0076              ??_DisplaySugar 0076              ??_DisplayStock 0076  
