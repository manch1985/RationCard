

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Fri Mar 04 00:19:48 2016

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	idataBANK1,global,class=CODE,delta=2
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text749,local,class=CODE,delta=2
    20                           	psect	text755,local,class=CODE,delta=2
    21                           	psect	text758,local,class=CODE,delta=2
    22                           	psect	text762,local,class=CODE,delta=2
    23                           	psect	text769,local,class=CODE,delta=2
    24                           	psect	text770,local,class=CODE,delta=2
    25                           	psect	text773,local,class=CODE,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text774,local,class=CODE,delta=2
    28                           	psect	pa_nodes,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  000A                     	;#
    31                           
    32                           	psect	config
    33  2007  2CE2               	dw	11490	;#
    34                           
    35                           	psect	eeprom_data
    36  0000  000A 0000 0032     	db	10,0,50,10,8,0,0,0	;#
      +       000A 0008 0000     
      +       0000 0000          
    37  0008  000A 0000 001E     	db	10,0,30,8,6,0,0,0	;#
      +       0008 0006 0000     
      +       0000 0000          
    38  0010  000A 0000 0014     	db	10,0,20,4,5,0,0,0	;#
      +       0004 0005 0000     
      +       0000 0000          
    39  0018  000A 0000 00FF     	db	10,0,255,200,200,0,0,0	;#
      +       00C8 00C8 0000     
      +       0000 0000          
    40                           
    41                           	psect	idataBANK0
    42  0000                     __pidataBANK0:	
    43                           
    44                           	psect	idataBANK1
    45  0000                     __pidataBANK1:	
    46                           
    47                           	psect	stringtext
    48  0700                     __pstringtext:	
    49  0700                     stringtab:	
    50                           ;	global	stringtab,__stringbase
    51                           
    52                           
    53                           ;	String table - string pointers are 2 bytes each
    54  0700  1BFF               	btfsc	btemp+1,7
    55  0701  2F0A               	ljmp	stringcode
    56  0702  1383               	bcf	3,7
    57  0703  187F               	btfsc	btemp+1,0
    58  0704  1783               	bsf	3,7
    59  0705  0800               	movf	0,w
    60  0706  0A84               	incf	4,f
    61  0707  1903               	skipnz
    62  0708  0AFF               	incf	btemp+1,f
    63  0709  0008               	return
    64  070A                     stringcode:	
    65  070A  087F               	movf	btemp+1,w
    66  070B  397F               	andlw	127
    67  070C  008A               	movwf	10
    68  070D  0804               	movf	4,w
    69  070E  0A84               	incf	4,f
    70  070F  1903               	skipnz
    71  0710  0AFF               	incf	btemp+1,f
    72  0711  0082               	movwf	2
    73  0712                     __stringbase:	
    74  0712                     _digit:	
    75  0712  3430               	retlw	48
    76  0713  3431               	retlw	49
    77  0714  3432               	retlw	50
    78  0715  3433               	retlw	51
    79  0716  3434               	retlw	52
    80  0717  3435               	retlw	53
    81  0718  3436               	retlw	54
    82  0719  3437               	retlw	55
    83  071A  3438               	retlw	56
    84  071B  3439               	retlw	57
    85  071C  3400               	retlw	0
    86  0007                     _PORTC	set	7
    87  0008                     _PORTD	set	8
    88  001A                     _RCREG	set	26
    89  0018                     _RCSTA	set	24
    90  0038                     _RC0	set	56
    91  0039                     _RC1	set	57
    92  0040                     _RD0	set	64
    93  0041                     _RD1	set	65
    94  0042                     _RD2	set	66
    95  0043                     _RD3	set	67
    96  0044                     _RD4	set	68
    97  0045                     _RD5	set	69
    98  0046                     _RD6	set	70
    99  0047                     _RD7	set	71
   100  0099                     _SPBRG	set	153
   101  0087                     _TRISC	set	135
   102  0088                     _TRISD	set	136
   103  0098                     _TXSTA	set	152
   104  0440                     _TRISD0	set	1088
   105  0441                     _TRISD1	set	1089
   106  010D                     _EEADR	set	269
   107  010C                     _EEDATA	set	268
   108  0188                     _ANSEL	set	392
   109  0189                     _ANSELH	set	393
   110  018C                     _EECON1	set	396
   111  0C60                     _RD	set	3168
   112  0C61                     _WR	set	3169
   113  071D                     STR_12:	
   114  071D  346D               	retlw	109	;'m'
   115  071E  346F               	retlw	111	;'o'
   116  071F  3469               	retlw	105	;'i'
   117  0720  3473               	retlw	115	;'s'
   118  0721  3474               	retlw	116	;'t'
   119  0722  3465               	retlw	101	;'e'
   120  0723  3472               	retlw	114	;'r'
   121  0724  3420               	retlw	32	;' '
   122  0725  346C               	retlw	108	;'l'
   123  0726  3465               	retlw	101	;'e'
   124  0727  3476               	retlw	118	;'v'
   125  0728  3465               	retlw	101	;'e'
   126  0729  346C               	retlw	108	;'l'
   127  072A  3420               	retlw	32	;' '
   128  072B  3468               	retlw	104	;'h'
   129  072C  3469               	retlw	105	;'i'
   130  072D  3467               	retlw	103	;'g'
   131  072E  3468               	retlw	104	;'h'
   132  072F  3420               	retlw	32	;' '
   133  0730  346D               	retlw	109	;'m'
   134  0731  346F               	retlw	111	;'o'
   135  0732  3474               	retlw	116	;'t'
   136  0733  3465               	retlw	101	;'e'
   137  0734  3472               	retlw	114	;'r'
   138  0735  3420               	retlw	32	;' '
   139  0736  344F               	retlw	79	;'O'
   140  0737  3446               	retlw	70	;'F'
   141  0738  3446               	retlw	70	;'F'
   142  0739  3400               	retlw	0
   143  073A                     STR_10:	
   144  073A  346D               	retlw	109	;'m'
   145  073B  346F               	retlw	111	;'o'
   146  073C  3469               	retlw	105	;'i'
   147  073D  3473               	retlw	115	;'s'
   148  073E  3474               	retlw	116	;'t'
   149  073F  3465               	retlw	101	;'e'
   150  0740  3472               	retlw	114	;'r'
   151  0741  3420               	retlw	32	;' '
   152  0742  346C               	retlw	108	;'l'
   153  0743  3465               	retlw	101	;'e'
   154  0744  3476               	retlw	118	;'v'
   155  0745  3465               	retlw	101	;'e'
   156  0746  346C               	retlw	108	;'l'
   157  0747  3420               	retlw	32	;' '
   158  0748  346C               	retlw	108	;'l'
   159  0749  346F               	retlw	111	;'o'
   160  074A  3477               	retlw	119	;'w'
   161  074B  3420               	retlw	32	;' '
   162  074C  346D               	retlw	109	;'m'
   163  074D  346F               	retlw	111	;'o'
   164  074E  3474               	retlw	116	;'t'
   165  074F  3465               	retlw	101	;'e'
   166  0750  3472               	retlw	114	;'r'
   167  0751  3420               	retlw	32	;' '
   168  0752  344F               	retlw	79	;'O'
   169  0753  344E               	retlw	78	;'N'
   170  0754  3400               	retlw	0
   171  0755                     STR_9:	
   172  0755  3441               	retlw	65	;'A'
   173  0756  3454               	retlw	84	;'T'
   174  0757  342B               	retlw	43	;'+'
   175  0758  3443               	retlw	67	;'C'
   176  0759  344D               	retlw	77	;'M'
   177  075A  3447               	retlw	71	;'G'
   178  075B  3453               	retlw	83	;'S'
   179  075C  343D               	retlw	61	;'='
   180  075D  3422               	retlw	34	;'"'
   181  075E  342B               	retlw	43	;'+'
   182  075F  3439               	retlw	57	;'9'
   183  0760  3431               	retlw	49	;'1'
   184  0761  3439               	retlw	57	;'9'
   185  0762  3437               	retlw	55	;'7'
   186  0763  3439               	retlw	57	;'9'
   187  0764  3430               	retlw	48	;'0'
   188  0765  3430               	retlw	48	;'0'
   189  0766  3438               	retlw	56	;'8'
   190  0767  3430               	retlw	48	;'0'
   191  0768  3435               	retlw	53	;'5'
   192  0769  3431               	retlw	49	;'1'
   193  076A  3430               	retlw	48	;'0'
   194  076B  3422               	retlw	34	;'"'
   195  076C  3400               	retlw	0
   196  076D                     STR_21:	
   197  076D  3453               	retlw	83	;'S'
   198  076E  3455               	retlw	85	;'U'
   199  076F  3447               	retlw	71	;'G'
   200  0770  3441               	retlw	65	;'A'
   201  0771  3452               	retlw	82	;'R'
   202  0772  343A               	retlw	58	;':'
   203  0773  3420               	retlw	32	;' '
   204  0774  3420               	retlw	32	;' '
   205  0775  3420               	retlw	32	;' '
   206  0776  3420               	retlw	32	;' '
   207  0777  344B               	retlw	75	;'K'
   208  0778  3467               	retlw	103	;'g'
   209  0779  3420               	retlw	32	;' '
   210  077A  3420               	retlw	32	;' '
   211  077B  3420               	retlw	32	;' '
   212  077C  3420               	retlw	32	;' '
   213  077D  3420               	retlw	32	;' '
   214  077E  3420               	retlw	32	;' '
   215  077F  3420               	retlw	32	;' '
   216  0780  3420               	retlw	32	;' '
   217  0781  3420               	retlw	32	;' '
   218  0782  3400               	retlw	0
   219  0783                     STR_22:	
   220  0783  344B               	retlw	75	;'K'
   221  0784  3445               	retlw	69	;'E'
   222  0785  3452               	retlw	82	;'R'
   223  0786  344F               	retlw	79	;'O'
   224  0787  3453               	retlw	83	;'S'
   225  0788  3445               	retlw	69	;'E'
   226  0789  344E               	retlw	78	;'N'
   227  078A  3445               	retlw	69	;'E'
   228  078B  343A               	retlw	58	;':'
   229  078C  3420               	retlw	32	;' '
   230  078D  3420               	retlw	32	;' '
   231  078E  3420               	retlw	32	;' '
   232  078F  3420               	retlw	32	;' '
   233  0790  3420               	retlw	32	;' '
   234  0791  344C               	retlw	76	;'L'
   235  0792  3474               	retlw	116	;'t'
   236  0793  3473               	retlw	115	;'s'
   237  0794  3420               	retlw	32	;' '
   238  0795  3420               	retlw	32	;' '
   239  0796  3420               	retlw	32	;' '
   240  0797  3420               	retlw	32	;' '
   241  0798  3400               	retlw	0
   242  0799                     STR_30:	
   243  0799  3452               	retlw	82	;'R'
   244  079A  3449               	retlw	73	;'I'
   245  079B  3453               	retlw	83	;'S'
   246  079C  3445               	retlw	69	;'E'
   247  079D  343A               	retlw	58	;':'
   248  079E  3420               	retlw	32	;' '
   249  079F  3420               	retlw	32	;' '
   250  07A0  3420               	retlw	32	;' '
   251  07A1  344B               	retlw	75	;'K'
   252  07A2  3467               	retlw	103	;'g'
   253  07A3  3420               	retlw	32	;' '
   254  07A4  3420               	retlw	32	;' '
   255  07A5  3420               	retlw	32	;' '
   256  07A6  3420               	retlw	32	;' '
   257  07A7  3420               	retlw	32	;' '
   258  07A8  3420               	retlw	32	;' '
   259  07A9  3420               	retlw	32	;' '
   260  07AA  3420               	retlw	32	;' '
   261  07AB  3420               	retlw	32	;' '
   262  07AC  3420               	retlw	32	;' '
   263  07AD  3400               	retlw	0
   264  07AE                     STR_31:	
   265  07AE  3453               	retlw	83	;'S'
   266  07AF  3455               	retlw	85	;'U'
   267  07B0  3447               	retlw	71	;'G'
   268  07B1  3441               	retlw	65	;'A'
   269  07B2  3452               	retlw	82	;'R'
   270  07B3  343A               	retlw	58	;':'
   271  07B4  3420               	retlw	32	;' '
   272  07B5  3420               	retlw	32	;' '
   273  07B6  3420               	retlw	32	;' '
   274  07B7  344B               	retlw	75	;'K'
   275  07B8  3467               	retlw	103	;'g'
   276  07B9  3420               	retlw	32	;' '
   277  07BA  3420               	retlw	32	;' '
   278  07BB  3420               	retlw	32	;' '
   279  07BC  3420               	retlw	32	;' '
   280  07BD  3420               	retlw	32	;' '
   281  07BE  3420               	retlw	32	;' '
   282  07BF  3420               	retlw	32	;' '
   283  07C0  3420               	retlw	32	;' '
   284  07C1  3420               	retlw	32	;' '
   285  07C2  3400               	retlw	0
   286  07C3                     STR_29:	
   287  07C3  3455               	retlw	85	;'U'
   288  07C4  3453               	retlw	83	;'S'
   289  07C5  3445               	retlw	69	;'E'
   290  07C6  3452               	retlw	82	;'R'
   291  07C7  3431               	retlw	49	;'1'
   292  07C8  3420               	retlw	32	;' '
   293  07C9  3441               	retlw	65	;'A'
   294  07CA  344D               	retlw	77	;'M'
   295  07CB  344F               	retlw	79	;'O'
   296  07CC  3455               	retlw	85	;'U'
   297  07CD  344E               	retlw	78	;'N'
   298  07CE  3454               	retlw	84	;'T'
   299  07CF  343A               	retlw	58	;':'
   300  07D0  3420               	retlw	32	;' '
   301  07D1  3420               	retlw	32	;' '
   302  07D2  3420               	retlw	32	;' '
   303  07D3  3420               	retlw	32	;' '
   304  07D4  3420               	retlw	32	;' '
   305  07D5  3420               	retlw	32	;' '
   306  07D6  3420               	retlw	32	;' '
   307  07D7  3400               	retlw	0
   308  07D8                     STR_33:	
   309  07D8  3455               	retlw	85	;'U'
   310  07D9  3453               	retlw	83	;'S'
   311  07DA  3445               	retlw	69	;'E'
   312  07DB  3452               	retlw	82	;'R'
   313  07DC  3432               	retlw	50	;'2'
   314  07DD  3420               	retlw	32	;' '
   315  07DE  3441               	retlw	65	;'A'
   316  07DF  344D               	retlw	77	;'M'
   317  07E0  344F               	retlw	79	;'O'
   318  07E1  3455               	retlw	85	;'U'
   319  07E2  344E               	retlw	78	;'N'
   320  07E3  3454               	retlw	84	;'T'
   321  07E4  343A               	retlw	58	;':'
   322  07E5  3420               	retlw	32	;' '
   323  07E6  3420               	retlw	32	;' '
   324  07E7  3420               	retlw	32	;' '
   325  07E8  3420               	retlw	32	;' '
   326  07E9  3420               	retlw	32	;' '
   327  07EA  3420               	retlw	32	;' '
   328  07EB  3420               	retlw	32	;' '
   329  07EC  3400               	retlw	0
   330  07ED                     STR_37:	
   331  07ED  3455               	retlw	85	;'U'
   332  07EE  3453               	retlw	83	;'S'
   333  07EF  3445               	retlw	69	;'E'
   334  07F0  3452               	retlw	82	;'R'
   335  07F1  3433               	retlw	51	;'3'
   336  07F2  3420               	retlw	32	;' '
   337  07F3  3441               	retlw	65	;'A'
   338  07F4  344D               	retlw	77	;'M'
   339  07F5  344F               	retlw	79	;'O'
   340  07F6  3455               	retlw	85	;'U'
   341  07F7  344E               	retlw	78	;'N'
   342  07F8  3454               	retlw	84	;'T'
   343  07F9  343A               	retlw	58	;':'
   344  07FA  3420               	retlw	32	;' '
   345  07FB  3420               	retlw	32	;' '
   346  07FC  3420               	retlw	32	;' '
   347  07FD  3420               	retlw	32	;' '
   348  07FE  3420               	retlw	32	;' '
   349  07FF  3420               	retlw	32	;' '
   350  0800  3420               	retlw	32	;' '
   351  0801  3400               	retlw	0
   352  0802                     STR_20:	
   353  0802  3452               	retlw	82	;'R'
   354  0803  3449               	retlw	73	;'I'
   355  0804  3453               	retlw	83	;'S'
   356  0805  3445               	retlw	69	;'E'
   357  0806  343A               	retlw	58	;':'
   358  0807  3420               	retlw	32	;' '
   359  0808  3420               	retlw	32	;' '
   360  0809  3420               	retlw	32	;' '
   361  080A  3420               	retlw	32	;' '
   362  080B  3420               	retlw	32	;' '
   363  080C  3420               	retlw	32	;' '
   364  080D  344B               	retlw	75	;'K'
   365  080E  3467               	retlw	103	;'g'
   366  080F  3420               	retlw	32	;' '
   367  0810  3420               	retlw	32	;' '
   368  0811  3420               	retlw	32	;' '
   369  0812  3420               	retlw	32	;' '
   370  0813  3420               	retlw	32	;' '
   371  0814  3420               	retlw	32	;' '
   372  0815  3420               	retlw	32	;' '
   373  0816  3400               	retlw	0
   374  0817                     STR_32:	
   375  0817  344B               	retlw	75	;'K'
   376  0818  3445               	retlw	69	;'E'
   377  0819  3452               	retlw	82	;'R'
   378  081A  344F               	retlw	79	;'O'
   379  081B  3453               	retlw	83	;'S'
   380  081C  3445               	retlw	69	;'E'
   381  081D  344E               	retlw	78	;'N'
   382  081E  3445               	retlw	69	;'E'
   383  081F  343A               	retlw	58	;':'
   384  0820  3420               	retlw	32	;' '
   385  0821  3420               	retlw	32	;' '
   386  0822  3420               	retlw	32	;' '
   387  0823  344C               	retlw	76	;'L'
   388  0824  3474               	retlw	116	;'t'
   389  0825  3473               	retlw	115	;'s'
   390  0826  3420               	retlw	32	;' '
   391  0827  3420               	retlw	32	;' '
   392  0828  3420               	retlw	32	;' '
   393  0829  3420               	retlw	32	;' '
   394  082A  3420               	retlw	32	;' '
   395  082B  3400               	retlw	0
   396  082C                     STR_19:	
   397  082C  3420               	retlw	32	;' '
   398  082D  3420               	retlw	32	;' '
   399  082E  3420               	retlw	32	;' '
   400  082F  3420               	retlw	32	;' '
   401  0830  3453               	retlw	83	;'S'
   402  0831  3454               	retlw	84	;'T'
   403  0832  344F               	retlw	79	;'O'
   404  0833  3443               	retlw	67	;'C'
   405  0834  344B               	retlw	75	;'K'
   406  0835  3420               	retlw	32	;' '
   407  0836  3444               	retlw	68	;'D'
   408  0837  3445               	retlw	69	;'E'
   409  0838  3454               	retlw	84	;'T'
   410  0839  3441               	retlw	65	;'A'
   411  083A  3449               	retlw	73	;'I'
   412  083B  344C               	retlw	76	;'L'
   413  083C  3453               	retlw	83	;'S'
   414  083D  3420               	retlw	32	;' '
   415  083E  3420               	retlw	32	;' '
   416  083F  3420               	retlw	32	;' '
   417  0840  3400               	retlw	0
   418  0841                     STR_14:	
   419  0841  3443               	retlw	67	;'C'
   420  0842  3472               	retlw	114	;'r'
   421  0843  346F               	retlw	111	;'o'
   422  0844  3470               	retlw	112	;'p'
   423  0845  3420               	retlw	32	;' '
   424  0846  3463               	retlw	99	;'c'
   425  0847  3472               	retlw	114	;'r'
   426  0848  346F               	retlw	111	;'o'
   427  0849  3473               	retlw	115	;'s'
   428  084A  3473               	retlw	115	;'s'
   429  084B  3465               	retlw	101	;'e'
   430  084C  3464               	retlw	100	;'d'
   431  084D  3420               	retlw	32	;' '
   432  084E  3473               	retlw	115	;'s'
   433  084F  3474               	retlw	116	;'t'
   434  0850  3461               	retlw	97	;'a'
   435  0851  3467               	retlw	103	;'g'
   436  0852  3465               	retlw	101	;'e'
   437  0853  3431               	retlw	49	;'1'
   438  0854  3400               	retlw	0
   439  0855                     STR_16:	
   440  0855  3443               	retlw	67	;'C'
   441  0856  3472               	retlw	114	;'r'
   442  0857  346F               	retlw	111	;'o'
   443  0858  3470               	retlw	112	;'p'
   444  0859  3420               	retlw	32	;' '
   445  085A  3463               	retlw	99	;'c'
   446  085B  3472               	retlw	114	;'r'
   447  085C  346F               	retlw	111	;'o'
   448  085D  3473               	retlw	115	;'s'
   449  085E  3473               	retlw	115	;'s'
   450  085F  3465               	retlw	101	;'e'
   451  0860  3464               	retlw	100	;'d'
   452  0861  3420               	retlw	32	;' '
   453  0862  3473               	retlw	115	;'s'
   454  0863  3474               	retlw	116	;'t'
   455  0864  3461               	retlw	97	;'a'
   456  0865  3467               	retlw	103	;'g'
   457  0866  3465               	retlw	101	;'e'
   458  0867  3432               	retlw	50	;'2'
   459  0868  3400               	retlw	0
   460  0869                     STR_18:	
   461  0869  3443               	retlw	67	;'C'
   462  086A  3472               	retlw	114	;'r'
   463  086B  346F               	retlw	111	;'o'
   464  086C  3470               	retlw	112	;'p'
   465  086D  3420               	retlw	32	;' '
   466  086E  3463               	retlw	99	;'c'
   467  086F  3472               	retlw	114	;'r'
   468  0870  346F               	retlw	111	;'o'
   469  0871  3473               	retlw	115	;'s'
   470  0872  3473               	retlw	115	;'s'
   471  0873  3465               	retlw	101	;'e'
   472  0874  3464               	retlw	100	;'d'
   473  0875  3420               	retlw	32	;' '
   474  0876  3473               	retlw	115	;'s'
   475  0877  3474               	retlw	116	;'t'
   476  0878  3461               	retlw	97	;'a'
   477  0879  3467               	retlw	103	;'g'
   478  087A  3465               	retlw	101	;'e'
   479  087B  3433               	retlw	51	;'3'
   480  087C  3400               	retlw	0
   481  087D                     STR_7:	
   482  087D  3441               	retlw	65	;'A'
   483  087E  3454               	retlw	84	;'T'
   484  087F  342B               	retlw	43	;'+'
   485  0880  3443               	retlw	67	;'C'
   486  0881  344E               	retlw	78	;'N'
   487  0882  344D               	retlw	77	;'M'
   488  0883  3449               	retlw	73	;'I'
   489  0884  343D               	retlw	61	;'='
   490  0885  3432               	retlw	50	;'2'
   491  0886  342C               	retlw	44	;','
   492  0887  3432               	retlw	50	;'2'
   493  0888  342C               	retlw	44	;','
   494  0889  3430               	retlw	48	;'0'
   495  088A  342C               	retlw	44	;','
   496  088B  3430               	retlw	48	;'0'
   497  088C  342C               	retlw	44	;','
   498  088D  3430               	retlw	48	;'0'
   499  088E  340D               	retlw	13
   500  088F  3400               	retlw	0
   501  0890                     STR_26:	
   502  0890  3453               	retlw	83	;'S'
   503  0891  344D               	retlw	77	;'M'
   504  0892  3441               	retlw	65	;'A'
   505  0893  3452               	retlw	82	;'R'
   506  0894  3454               	retlw	84	;'T'
   507  0895  3420               	retlw	32	;' '
   508  0896  3443               	retlw	67	;'C'
   509  0897  3441               	retlw	65	;'A'
   510  0898  3452               	retlw	82	;'R'
   511  0899  3444               	retlw	68	;'D'
   512  089A  3420               	retlw	32	;' '
   513  089B  3420               	retlw	32	;' '
   514  089C  3420               	retlw	32	;' '
   515  089D  3420               	retlw	32	;' '
   516  089E  3420               	retlw	32	;' '
   517  089F  3420               	retlw	32	;' '
   518  08A0  3420               	retlw	32	;' '
   519  08A1  3400               	retlw	0
   520  08A2                     STR_24:	
   521  08A2  3420               	retlw	32	;' '
   522  08A3  3420               	retlw	32	;' '
   523  08A4  3420               	retlw	32	;' '
   524  08A5  3443               	retlw	67	;'C'
   525  08A6  3441               	retlw	65	;'A'
   526  08A7  3452               	retlw	82	;'R'
   527  08A8  3444               	retlw	68	;'D'
   528  08A9  3420               	retlw	32	;' '
   529  08AA  3453               	retlw	83	;'S'
   530  08AB  3459               	retlw	89	;'Y'
   531  08AC  3453               	retlw	83	;'S'
   532  08AD  3454               	retlw	84	;'T'
   533  08AE  3445               	retlw	69	;'E'
   534  08AF  344D               	retlw	77	;'M'
   535  08B0  3420               	retlw	32	;' '
   536  08B1  3420               	retlw	32	;' '
   537  08B2  3420               	retlw	32	;' '
   538  08B3  3400               	retlw	0
   539  08B4                     STR_25:	
   540  08B4  3450               	retlw	80	;'P'
   541  08B5  344C               	retlw	76	;'L'
   542  08B6  3445               	retlw	69	;'E'
   543  08B7  3441               	retlw	65	;'A'
   544  08B8  3453               	retlw	83	;'S'
   545  08B9  3445               	retlw	69	;'E'
   546  08BA  3420               	retlw	32	;' '
   547  08BB  3454               	retlw	84	;'T'
   548  08BC  3441               	retlw	65	;'A'
   549  08BD  3450               	retlw	80	;'P'
   550  08BE  3420               	retlw	32	;' '
   551  08BF  3459               	retlw	89	;'Y'
   552  08C0  344F               	retlw	79	;'O'
   553  08C1  3455               	retlw	85	;'U'
   554  08C2  3452               	retlw	82	;'R'
   555  08C3  3420               	retlw	32	;' '
   556  08C4  3420               	retlw	32	;' '
   557  08C5  3400               	retlw	0
   558  08C6                     STR_23:	
   559  08C6  3441               	retlw	65	;'A'
   560  08C7  3455               	retlw	85	;'U'
   561  08C8  3454               	retlw	84	;'T'
   562  08C9  344F               	retlw	79	;'O'
   563  08CA  344D               	retlw	77	;'M'
   564  08CB  3441               	retlw	65	;'A'
   565  08CC  3454               	retlw	84	;'T'
   566  08CD  3449               	retlw	73	;'I'
   567  08CE  3443               	retlw	67	;'C'
   568  08CF  3420               	retlw	32	;' '
   569  08D0  3452               	retlw	82	;'R'
   570  08D1  3441               	retlw	65	;'A'
   571  08D2  3454               	retlw	84	;'T'
   572  08D3  3449               	retlw	73	;'I'
   573  08D4  344F               	retlw	79	;'O'
   574  08D5  344E               	retlw	78	;'N'
   575  08D6  3420               	retlw	32	;' '
   576  08D7  3400               	retlw	0
   577  08D8                     STR_2:	
   578  08D8  3450               	retlw	80	;'P'
   579  08D9  344C               	retlw	76	;'L'
   580  08DA  3453               	retlw	83	;'S'
   581  08DB  3420               	retlw	32	;' '
   582  08DC  3457               	retlw	87	;'W'
   583  08DD  3441               	retlw	65	;'A'
   584  08DE  3449               	retlw	73	;'I'
   585  08DF  3454               	retlw	84	;'T'
   586  08E0  342E               	retlw	46	;'.'
   587  08E1  342E               	retlw	46	;'.'
   588  08E2  342E               	retlw	46	;'.'
   589  08E3  342E               	retlw	46	;'.'
   590  08E4  342E               	retlw	46	;'.'
   591  08E5  342E               	retlw	46	;'.'
   592  08E6  342E               	retlw	46	;'.'
   593  08E7  342E               	retlw	46	;'.'
   594  08E8  3400               	retlw	0
   595  08E9                     STR_1:	
   596  08E9  3447               	retlw	71	;'G'
   597  08EA  3453               	retlw	83	;'S'
   598  08EB  344D               	retlw	77	;'M'
   599  08EC  3420               	retlw	32	;' '
   600  08ED  3449               	retlw	73	;'I'
   601  08EE  344E               	retlw	78	;'N'
   602  08EF  3449               	retlw	73	;'I'
   603  08F0  3454               	retlw	84	;'T'
   604  08F1  3449               	retlw	73	;'I'
   605  08F2  3441               	retlw	65	;'A'
   606  08F3  344C               	retlw	76	;'L'
   607  08F4  3449               	retlw	73	;'I'
   608  08F5  345A               	retlw	90	;'Z'
   609  08F6  3449               	retlw	73	;'I'
   610  08F7  344E               	retlw	78	;'N'
   611  08F8  3447               	retlw	71	;'G'
   612  08F9  3400               	retlw	0
   613  08FA                     STR_6:	
   614  08FA  3441               	retlw	65	;'A'
   615  08FB  3454               	retlw	84	;'T'
   616  08FC  342B               	retlw	43	;'+'
   617  08FD  3443               	retlw	67	;'C'
   618  08FE  344D               	retlw	77	;'M'
   619  08FF  3447               	retlw	71	;'G'
   620  0900  3446               	retlw	70	;'F'
   621  0901  343D               	retlw	61	;'='
   622  0902  3431               	retlw	49	;'1'
   623  0903  340D               	retlw	13
   624  0904  3400               	retlw	0
   625  0905                     STR_5:	
   626  0905  3441               	retlw	65	;'A'
   627  0906  3454               	retlw	84	;'T'
   628  0907  342B               	retlw	43	;'+'
   629  0908  3443               	retlw	67	;'C'
   630  0909  3453               	retlw	83	;'S'
   631  090A  3444               	retlw	68	;'D'
   632  090B  3448               	retlw	72	;'H'
   633  090C  343D               	retlw	61	;'='
   634  090D  3431               	retlw	49	;'1'
   635  090E  340D               	retlw	13
   636  090F  3400               	retlw	0
   637  0910                     STR_4:	
   638  0910  3441               	retlw	65	;'A'
   639  0911  3454               	retlw	84	;'T'
   640  0912  342B               	retlw	43	;'+'
   641  0913  3443               	retlw	67	;'C'
   642  0914  3450               	retlw	80	;'P'
   643  0915  3449               	retlw	73	;'I'
   644  0916  344E               	retlw	78	;'N'
   645  0917  343F               	retlw	63	;'?'
   646  0918  340D               	retlw	13
   647  0919  3400               	retlw	0
   648  091A                     STR_8:	
   649  091A  3447               	retlw	71	;'G'
   650  091B  3453               	retlw	83	;'S'
   651  091C  344D               	retlw	77	;'M'
   652  091D  3420               	retlw	32	;' '
   653  091E  3452               	retlw	82	;'R'
   654  091F  3445               	retlw	69	;'E'
   655  0920  3441               	retlw	65	;'A'
   656  0921  3444               	retlw	68	;'D'
   657  0922  3459               	retlw	89	;'Y'
   658  0923  3400               	retlw	0
   659  0924                     STR_3:	
   660  0924  3441               	retlw	65	;'A'
   661  0925  3454               	retlw	84	;'T'
   662  0926  340D               	retlw	13
   663  0927  3400               	retlw	0
   664  0799                     
   665                           	psect	cinit
   666  05C3                     start_initialization:	
   667                           
   668                           ; Clear objects allocated to BITCOMMON
   669  05C3  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   670                           
   671                           ; Clear objects allocated to COMMON
   672  05C4  01FA               	clrf	__pbssCOMMON& (0+127)
   673                           
   674                           ; Clear objects allocated to BANK0
   675  05C5  1383               	bcf	3,7	;select IRP bank0
   676  05C6  3020               	movlw	low __pbssBANK0
   677  05C7  0084               	movwf	4
   678  05C8  3046               	movlw	low (__pbssBANK0+38)
   679  05C9  120A  118A  2695   	fcall	clear_ram
      +       120A  118A         
   680                           
   681                           ; Initialize objects allocated to BANK1
   682  05CE  1683               	bsf	3,5	;RP0=1, select bank1
   683                           
   684                           ;initializer for _User3
   685  05CF  3031               	movlw	49
   686  05D0  00A0               	movwf	__pdataBANK1& (0+127)
   687  05D1  3042               	movlw	66
   688  05D2  00A1               	movwf	(__pdataBANK1+1)& (0+127)
   689  05D3  3030               	movlw	48
   690  05D4  00A2               	movwf	(__pdataBANK1+2)& (0+127)
   691  05D5  00A3               	movwf	(__pdataBANK1+3)& (0+127)
   692  05D6  3033               	movlw	51
   693  05D7  00A4               	movwf	(__pdataBANK1+4)& (0+127)
   694  05D8  3043               	movlw	67
   695  05D9  00A5               	movwf	(__pdataBANK1+5)& (0+127)
   696  05DA  3035               	movlw	53
   697  05DB  00A6               	movwf	(__pdataBANK1+6)& (0+127)
   698  05DC  3042               	movlw	66
   699  05DD  00A7               	movwf	(__pdataBANK1+7)& (0+127)
   700  05DE  3046               	movlw	70
   701  05DF  00A8               	movwf	(__pdataBANK1+8)& (0+127)
   702  05E0  3043               	movlw	67
   703  05E1  00A9               	movwf	(__pdataBANK1+9)& (0+127)
   704  05E2  3038               	movlw	56
   705  05E3  00AA               	movwf	(__pdataBANK1+10)& (0+127)
   706  05E4  3031               	movlw	49
   707  05E5  00AB               	movwf	(__pdataBANK1+11)& (0+127)
   708  05E6  01AC               	clrf	(__pdataBANK1+12)& (0+127)
   709                           
   710                           ; Initialize objects allocated to BANK0
   711  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   712                           
   713                           ;initializer for _User1
   714  05E8  00C6               	movwf	__pdataBANK0& (0+127)
   715  05E9  3043               	movlw	67
   716  05EA  00C7               	movwf	(__pdataBANK0+1)& (0+127)
   717  05EB  3030               	movlw	48
   718  05EC  00C8               	movwf	(__pdataBANK0+2)& (0+127)
   719  05ED  00C9               	movwf	(__pdataBANK0+3)& (0+127)
   720  05EE  3038               	movlw	56
   721  05EF  00CA               	movwf	(__pdataBANK0+4)& (0+127)
   722  05F0  3032               	movlw	50
   723  05F1  00CB               	movwf	(__pdataBANK0+5)& (0+127)
   724  05F2  3043               	movlw	67
   725  05F3  00CC               	movwf	(__pdataBANK0+6)& (0+127)
   726  05F4  3045               	movlw	69
   727  05F5  00CD               	movwf	(__pdataBANK0+7)& (0+127)
   728  05F6  3036               	movlw	54
   729  05F7  00CE               	movwf	(__pdataBANK0+8)& (0+127)
   730  05F8  3039               	movlw	57
   731  05F9  00CF               	movwf	(__pdataBANK0+9)& (0+127)
   732  05FA  3033               	movlw	51
   733  05FB  00D0               	movwf	(__pdataBANK0+10)& (0+127)
   734  05FC  3039               	movlw	57
   735  05FD  00D1               	movwf	(__pdataBANK0+11)& (0+127)
   736  05FE  01D2               	clrf	(__pdataBANK0+12)& (0+127)
   737                           
   738                           ;initializer for _User2
   739  05FF  3031               	movlw	49
   740  0600  00D3               	movwf	(__pdataBANK0+13)& (0+127)
   741  0601  3042               	movlw	66
   742  0602  00D4               	movwf	(__pdataBANK0+14)& (0+127)
   743  0603  3030               	movlw	48
   744  0604  00D5               	movwf	(__pdataBANK0+15)& (0+127)
   745  0605  00D6               	movwf	(__pdataBANK0+16)& (0+127)
   746  0606  3033               	movlw	51
   747  0607  00D7               	movwf	(__pdataBANK0+17)& (0+127)
   748  0608  3043               	movlw	67
   749  0609  00D8               	movwf	(__pdataBANK0+18)& (0+127)
   750  060A  3035               	movlw	53
   751  060B  00D9               	movwf	(__pdataBANK0+19)& (0+127)
   752  060C  3042               	movlw	66
   753  060D  00DA               	movwf	(__pdataBANK0+20)& (0+127)
   754  060E  3046               	movlw	70
   755  060F  00DB               	movwf	(__pdataBANK0+21)& (0+127)
   756  0610  3043               	movlw	67
   757  0611  00DC               	movwf	(__pdataBANK0+22)& (0+127)
   758  0612  3038               	movlw	56
   759  0613  00DD               	movwf	(__pdataBANK0+23)& (0+127)
   760  0614  3030               	movlw	48
   761  0615  00DE               	movwf	(__pdataBANK0+24)& (0+127)
   762  0616  01DF               	clrf	(__pdataBANK0+25)& (0+127)
   763  0617                     end_of_initialization:	
   764                           ;End of C runtime variable initialization code
   765                           
   766  0617  0183               	clrf	3
   767  0618  120A  118A  2B05   	ljmp	_main	;jump to C main() function
   768                           
   769                           	psect	bitbssCOMMON
   770  03C8                     __pbitbssCOMMON:	
   771  03C8                     _rfid_flag:	
   772  03C8                     	ds	1
   773                           
   774                           	psect	bssCOMMON
   775  007A                     __pbssCOMMON:	
   776  007A                     _User1Rise:	
   777  007A                     	ds	1
   778                           
   779                           	psect	bssBANK0
   780  0020                     __pbssBANK0:	
   781  0020                     _KeroseneStock:	
   782  0020                     	ds	2
   783  0022                     _RiseStock:	
   784  0022                     	ds	2
   785  0024                     _SugarStock:	
   786  0024                     	ds	2
   787  0026                     _User:	
   788  0026                     	ds	2
   789  0028                     _User1amt:	
   790  0028                     	ds	2
   791  002A                     _User2amt:	
   792  002A                     	ds	2
   793  002C                     _User3amt:	
   794  002C                     	ds	2
   795  002E                     _User1Kerosene:	
   796  002E                     	ds	1
   797  002F                     _User1Sugar:	
   798  002F                     	ds	1
   799  0030                     _User2Kerosene:	
   800  0030                     	ds	1
   801  0031                     _User2Rise:	
   802  0031                     	ds	1
   803  0032                     _User2Sugar:	
   804  0032                     	ds	1
   805  0033                     _User3Kerosene:	
   806  0033                     	ds	1
   807  0034                     _User3Rise:	
   808  0034                     	ds	1
   809  0035                     _User3Sugar:	
   810  0035                     	ds	1
   811  0036                     _delayus_variable:	
   812  0036                     	ds	1
   813  0037                     _card_store:	
   814  0037                     	ds	15
   815                           
   816                           	psect	dataBANK0
   817  0046                     __pdataBANK0:	
   818  0046                     _User1:	
   819  0046                     	ds	13
   820  0053                     _User2:	
   821  0053                     	ds	13
   822                           
   823                           	psect	dataBANK1
   824  00A0                     __pdataBANK1:	
   825  00A0                     _User3:	
   826  00A0                     	ds	13
   827                           
   828                           	psect	clrtext
   829  0695                     clear_ram:	
   830                           ;	Called with FSR containing the base address, and
   831                           ;	W with the last address+1
   832                           
   833  0695  0064               	clrwdt	;clear the watchdog before getting into this loop
   834  0696                     clrloop:	
   835  0696  0180               	clrf	0	;clear RAM location pointed to by FSR
   836  0697  0A84               	incf	4,f	;increment pointer
   837  0698  0604               	xorwf	4,w	;XOR with final address
   838  0699  1903               	btfsc	3,2	;have we reached the end yet?
   839  069A  3400               	retlw	0	;all done for this memory range, return
   840  069B  0604               	xorwf	4,w	;XOR again to restore value
   841  069C  2E96               	goto	clrloop	;do the next byte
   842                           
   843                           	psect	cstackCOMMON
   844  0070                     __pcstackCOMMON:	
   845  0070                     ?_enable:	
   846  0070                     ?_lcdport:	
   847                           ; 0 bytes @ 0x0
   848                           
   849  0070                     ?_lcdcmd:	
   850                           ; 0 bytes @ 0x0
   851                           
   852  0070                     ?_lcddata:	
   853                           ; 0 bytes @ 0x0
   854                           
   855  0070                     ?_lcd_init:	
   856                           ; 0 bytes @ 0x0
   857                           
   858  0070                     ?_SoftWareUart_Init:	
   859                           ; 0 bytes @ 0x0
   860                           
   861  0070                     ?_ISR:	
   862                           ; 0 bytes @ 0x0
   863                           
   864  0070                     ??_ISR:	
   865                           ; 0 bytes @ 0x0
   866                           
   867  0070                     ?_RFID_read:	
   868                           ; 0 bytes @ 0x0
   869                           
   870  0070                     ?_ReadAmnt:	
   871                           ; 0 bytes @ 0x0
   872                           
   873  0070                     ?_ReadStock:	
   874                           ; 0 bytes @ 0x0
   875                           
   876  0070                     ?_DisplayStock:	
   877                           ; 0 bytes @ 0x0
   878                           
   879  0070                     ?_uart_init:	
   880                           ; 0 bytes @ 0x0
   881                           
   882  0070                     ?_paramter:	
   883                           ; 0 bytes @ 0x0
   884                           
   885  0070                     ?_startup:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  0070                     ?_main:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  0070                     ?_eeprom_read:	
   892                           ; 0 bytes @ 0x0
   893                           
   894  0070                     ?_softreceive:	
   895                           ; 1 bytes @ 0x0
   896                           
   897                           
   898                           ; 1 bytes @ 0x0
   899  0070                     	ds	2
   900  0072                     ??_eeprom_read:	
   901  0072                     ??_enable:	
   902                           ; 0 bytes @ 0x2
   903                           
   904  0072                     ??_lcdport:	
   905                           ; 0 bytes @ 0x2
   906                           
   907  0072                     ??_SoftWareUart_Init:	
   908                           ; 0 bytes @ 0x2
   909                           
   910  0072                     ??_softreceive:	
   911                           ; 0 bytes @ 0x2
   912                           
   913  0072                     ??_uart_init:	
   914                           ; 0 bytes @ 0x2
   915                           
   916  0072                     ?___lbdiv:	
   917                           ; 0 bytes @ 0x2
   918                           
   919  0072                     ?___lbmod:	
   920                           ; 1 bytes @ 0x2
   921                           
   922  0072                     ?_strcmp:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0072                     ?___awmod:	
   926                           ; 2 bytes @ 0x2
   927                           
   928  0072                     lcdport@a:	
   929                           ; 2 bytes @ 0x2
   930                           
   931  0072                     strcmp@s2:	
   932                           ; 1 bytes @ 0x2
   933                           
   934  0072                     ___lbdiv@divisor:	
   935                           ; 1 bytes @ 0x2
   936                           
   937  0072                     ___lbmod@divisor:	
   938                           ; 1 bytes @ 0x2
   939                           
   940  0072                     ___awmod@divisor:	
   941                           ; 1 bytes @ 0x2
   942                           
   943                           
   944                           ; 2 bytes @ 0x2
   945  0072                     	ds	1
   946  0073                     ??___lbdiv:	
   947  0073                     ??___lbmod:	
   948                           ; 0 bytes @ 0x3
   949                           
   950  0073                     softreceive@Data:	
   951                           ; 0 bytes @ 0x3
   952                           
   953  0073                     ___lbdiv@dividend:	
   954                           ; 1 bytes @ 0x3
   955                           
   956                           
   957                           ; 1 bytes @ 0x3
   958  0073                     	ds	1
   959  0074                     ??_strcmp:	
   960  0074                     ??_lcdcmd:	
   961                           ; 0 bytes @ 0x4
   962                           
   963  0074                     ??_lcddata:	
   964                           ; 0 bytes @ 0x4
   965                           
   966  0074                     lcdcmd@y:	
   967                           ; 0 bytes @ 0x4
   968                           
   969  0074                     lcddata@y:	
   970                           ; 1 bytes @ 0x4
   971                           
   972  0074                     softreceive@mask:	
   973                           ; 1 bytes @ 0x4
   974                           
   975  0074                     eeprom_read@addr:	
   976                           ; 1 bytes @ 0x4
   977                           
   978  0074                     ___lbdiv@counter:	
   979                           ; 1 bytes @ 0x4
   980                           
   981  0074                     ___lbmod@dividend:	
   982                           ; 1 bytes @ 0x4
   983                           
   984  0074                     ___awmod@dividend:	
   985                           ; 1 bytes @ 0x4
   986                           
   987                           
   988                           ; 2 bytes @ 0x4
   989  0074                     	ds	1
   990  0075                     ??_RFID_read:	
   991  0075                     ?___wmul:	
   992                           ; 0 bytes @ 0x5
   993                           
   994  0075                     lcdcmd@z:	
   995                           ; 2 bytes @ 0x5
   996                           
   997  0075                     lcddata@z:	
   998                           ; 1 bytes @ 0x5
   999                           
  1000  0075                     ___lbdiv@quotient:	
  1001                           ; 1 bytes @ 0x5
  1002                           
  1003  0075                     ___lbmod@counter:	
  1004                           ; 1 bytes @ 0x5
  1005                           
  1006  0075                     RFID_read@i:	
  1007                           ; 1 bytes @ 0x5
  1008                           
  1009  0075                     ___wmul@multiplier:	
  1010                           ; 2 bytes @ 0x5
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x5
  1014  0075                     	ds	1
  1015  0076                     ??___awmod:	
  1016  0076                     lcdcmd@a:	
  1017                           ; 0 bytes @ 0x6
  1018                           
  1019  0076                     lcddata@a:	
  1020                           ; 1 bytes @ 0x6
  1021                           
  1022  0076                     strcmp@r:	
  1023                           ; 1 bytes @ 0x6
  1024                           
  1025  0076                     ___lbmod@rem:	
  1026                           ; 1 bytes @ 0x6
  1027                           
  1028  0076                     ___awmod@counter:	
  1029                           ; 1 bytes @ 0x6
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  0076                     	ds	1
  1034  0077                     ??_lcd_init:	
  1035  0077                     ?_lcdstring:	
  1036                           ; 0 bytes @ 0x7
  1037                           
  1038  0077                     ?_DisplaySugar:	
  1039                           ; 0 bytes @ 0x7
  1040                           
  1041  0077                     ?_DisplayRise:	
  1042                           ; 0 bytes @ 0x7
  1043                           
  1044  0077                     ?_DisplayKerosene:	
  1045                           ; 0 bytes @ 0x7
  1046                           
  1047  0077                     DisplaySugar@Sugar:	
  1048                           ; 0 bytes @ 0x7
  1049                           
  1050  0077                     DisplayRise@Rise:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053  0077                     DisplayKerosene@Kerosene:	
  1054                           ; 1 bytes @ 0x7
  1055                           
  1056  0077                     strcmp@s1:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0077                     ___awmod@sign:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062  0077                     lcdstring@a:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065  0077                     ___wmul@multiplicand:	
  1066                           ; 2 bytes @ 0x7
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x7
  1070  0077                     	ds	1
  1071  0078                     ??_DisplayAmnt:	
  1072  0078                     ??_DisplaySugar:	
  1073                           ; 0 bytes @ 0x8
  1074                           
  1075  0078                     ??_DisplayRise:	
  1076                           ; 0 bytes @ 0x8
  1077                           
  1078  0078                     ??_DisplayKerosene:	
  1079                           ; 0 bytes @ 0x8
  1080                           
  1081  0078                     ??___awdiv:	
  1082                           ; 0 bytes @ 0x8
  1083                           
  1084  0078                     DisplaySugar@Location:	
  1085                           ; 0 bytes @ 0x8
  1086                           
  1087  0078                     DisplayRise@Location:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090  0078                     DisplayKerosene@Location:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x8
  1095  0078                     	ds	1
  1096  0079                     ??_lcdstring:	
  1097  0079                     ??_ReadAmnt:	
  1098                           ; 0 bytes @ 0x9
  1099                           
  1100  0079                     ??_ReadStock:	
  1101                           ; 0 bytes @ 0x9
  1102                           
  1103  0079                     ??_DisplayStock:	
  1104                           ; 0 bytes @ 0x9
  1105                           
  1106  0079                     ??_paramter:	
  1107                           ; 0 bytes @ 0x9
  1108                           
  1109  0079                     ??___wmul:	
  1110                           ; 0 bytes @ 0x9
  1111                           
  1112                           
  1113                           	psect	cstackBANK0
  1114  0060                     __pcstackBANK0:	
  1115                           ; 0 bytes @ 0x9
  1116                           
  1117  0060                     ??_startup:	
  1118  0060                     ?___awdiv:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0060                     ___wmul@product:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124  0060                     ___awdiv@divisor:	
  1125                           ; 2 bytes @ 0x0
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0x0
  1129  0060                     	ds	2
  1130  0062                     ___awdiv@dividend:	
  1131                           
  1132                           ; 2 bytes @ 0x2
  1133  0062                     	ds	2
  1134  0064                     ___awdiv@counter:	
  1135                           
  1136                           ; 1 bytes @ 0x4
  1137  0064                     	ds	1
  1138  0065                     ___awdiv@sign:	
  1139                           
  1140                           ; 1 bytes @ 0x5
  1141  0065                     	ds	1
  1142  0066                     ___awdiv@quotient:	
  1143                           
  1144                           ; 2 bytes @ 0x6
  1145  0066                     	ds	2
  1146  0068                     ?_DisplayAmnt:	
  1147  0068                     DisplayAmnt@Amnt:	
  1148                           ; 0 bytes @ 0x8
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x8
  1152  0068                     	ds	2
  1153  006A                     DisplayAmnt@Location:	
  1154                           
  1155                           ; 1 bytes @ 0xA
  1156  006A                     	ds	1
  1157  006B                     _DisplayAmnt$1039:	
  1158                           
  1159                           ; 2 bytes @ 0xB
  1160  006B                     	ds	2
  1161  006D                     ??_main:	
  1162                           
  1163                           ; 0 bytes @ 0xD
  1164  006D                     	ds	3
  1165                           
  1166                           	psect	maintext
  1167  0305                     __pmaintext:	
  1168 ;;Data sizes: Strings 523, constant 11, data 39, bss 39, persistent 0 stack 0
  1169 ;;Auto spaces:   Size  Autos    Used
  1170 ;; COMMON          14      9      11
  1171 ;; BANK0           80     16      80
  1172 ;; BANK1           80      0      13
  1173 ;; BANK3           96      0       0
  1174 ;; BANK2           96      0       0
  1175 ;;
  1176 ;; Pointer list with targets:
  1177 ;; ?_strcmp	int  size(1) Largest target is 0
  1178 ;;
  1179 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1180 ;;
  1181 ;; ?___awmod	int  size(1) Largest target is 0
  1182 ;;
  1183 ;; ?___awdiv	int  size(1) Largest target is 0
  1184 ;;
  1185 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 13
  1186 ;;		 -> User3(BANK1[13]), User2(BANK0[13]), User1(BANK0[13]), 
  1187 ;;
  1188 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 15
  1189 ;;		 -> card_store(BANK0[15]), 
  1190 ;;
  1191 ;; lcdstring@a	PTR const unsigned char  size(2) Largest target is 22
  1192 ;;		 -> STR_40(CODE[21]), STR_39(CODE[21]), STR_38(CODE[21]), STR_37(CODE[21]), 
  1193 ;;		 -> STR_36(CODE[21]), STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), 
  1194 ;;		 -> STR_32(CODE[21]), STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), 
  1195 ;;		 -> STR_28(CODE[18]), STR_27(CODE[18]), STR_26(CODE[18]), STR_25(CODE[18]), 
  1196 ;;		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[22]), STR_21(CODE[22]), 
  1197 ;;		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_8(CODE[10]), STR_2(CODE[17]), 
  1198 ;;		 -> STR_1(CODE[17]), 
  1199 ;;
  1200 ;;
  1201 ;; Critical Paths under _main in COMMON
  1202 ;;
  1203 ;;   _main->_lcd_init
  1204 ;;   _main->_lcdstring
  1205 ;;   _main->_DisplayRise
  1206 ;;   _main->_DisplaySugar
  1207 ;;   _main->_DisplayKerosene
  1208 ;;   _startup->_lcdstring
  1209 ;;   _DisplayStock->_lcdstring
  1210 ;;   _DisplayKerosene->_lcdcmd
  1211 ;;   _DisplayKerosene->_lcddata
  1212 ;;   _DisplayKerosene->___lbmod
  1213 ;;   _DisplayRise->_lcdcmd
  1214 ;;   _DisplayRise->_lcddata
  1215 ;;   _DisplayRise->___lbmod
  1216 ;;   _DisplaySugar->_lcdcmd
  1217 ;;   _DisplaySugar->_lcddata
  1218 ;;   _DisplaySugar->___lbmod
  1219 ;;   _DisplayAmnt->___awmod
  1220 ;;   _lcdstring->_lcddata
  1221 ;;   _lcd_init->_lcdcmd
  1222 ;;   _RFID_read->_softreceive
  1223 ;;   _lcddata->_enable
  1224 ;;   _lcdcmd->_enable
  1225 ;;   _paramter->___wmul
  1226 ;;   _ReadStock->___wmul
  1227 ;;   _ReadAmnt->___wmul
  1228 ;;   ___awdiv->___awmod
  1229 ;;   ___wmul->_eeprom_read
  1230 ;;
  1231 ;; Critical Paths under _ISR in COMMON
  1232 ;;
  1233 ;;   None.
  1234 ;;
  1235 ;; Critical Paths under _main in BANK0
  1236 ;;
  1237 ;;   _main->_DisplayAmnt
  1238 ;;   _DisplayStock->_DisplayAmnt
  1239 ;;   _DisplayAmnt->___awdiv
  1240 ;;   _paramter->___wmul
  1241 ;;   _ReadStock->___wmul
  1242 ;;   _ReadAmnt->___wmul
  1243 ;;
  1244 ;; Critical Paths under _ISR in BANK0
  1245 ;;
  1246 ;;   None.
  1247 ;;
  1248 ;; Critical Paths under _main in BANK1
  1249 ;;
  1250 ;;   None.
  1251 ;;
  1252 ;; Critical Paths under _ISR in BANK1
  1253 ;;
  1254 ;;   None.
  1255 ;;
  1256 ;; Critical Paths under _main in BANK3
  1257 ;;
  1258 ;;   None.
  1259 ;;
  1260 ;; Critical Paths under _ISR in BANK3
  1261 ;;
  1262 ;;   None.
  1263 ;;
  1264 ;; Critical Paths under _main in BANK2
  1265 ;;
  1266 ;;   None.
  1267 ;;
  1268 ;; Critical Paths under _ISR in BANK2
  1269 ;;
  1270 ;;   None.
  1271 ;;
  1272 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1273 ;;
  1274 ;;
  1275 ;;Call Graph Tables:
  1276 ;;
  1277 ;; ---------------------------------------------------------------------------------
  1278 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (0) _main                                                 3     3      0    7027
  1281 ;;                                             13 BANK0      3     3      0
  1282 ;;                          _uart_init
  1283 ;;                           _lcd_init
  1284 ;;                           _paramter
  1285 ;;                  _SoftWareUart_Init
  1286 ;;                            _startup
  1287 ;;                          _lcdstring
  1288 ;;                             _lcdcmd
  1289 ;;                          _RFID_read
  1290 ;;                             _strcmp
  1291 ;;                           _ReadAmnt
  1292 ;;                        _DisplayAmnt
  1293 ;;                        _DisplayRise
  1294 ;;                       _DisplaySugar
  1295 ;;                    _DisplayKerosene
  1296 ;;                          _ReadStock
  1297 ;;                       _DisplayStock
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (1) _startup                                              3     3      0     405
  1300 ;;                                              0 BANK0      3     3      0
  1301 ;;                             _lcdcmd
  1302 ;;                          _lcdstring
  1303 ;; ---------------------------------------------------------------------------------
  1304 ;; (1) _DisplayStock                                         0     0      0    1695
  1305 ;;                             _lcdcmd
  1306 ;;                          _lcdstring
  1307 ;;                        _DisplayAmnt
  1308 ;; ---------------------------------------------------------------------------------
  1309 ;; (1) _DisplayKerosene                                      2     1      1     747
  1310 ;;                                              7 COMMON     2     1      1
  1311 ;;                             _lcdcmd
  1312 ;;                            ___lbdiv
  1313 ;;                            _lcddata
  1314 ;;                            ___lbmod
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (1) _DisplayRise                                          2     1      1     747
  1317 ;;                                              7 COMMON     2     1      1
  1318 ;;                             _lcdcmd
  1319 ;;                            ___lbdiv
  1320 ;;                            _lcddata
  1321 ;;                            ___lbmod
  1322 ;; ---------------------------------------------------------------------------------
  1323 ;; (1) _DisplaySugar                                         2     1      1     747
  1324 ;;                                              7 COMMON     2     1      1
  1325 ;;                             _lcdcmd
  1326 ;;                            ___lbdiv
  1327 ;;                            _lcddata
  1328 ;;                            ___lbmod
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (2) _DisplayAmnt                                          5     3      2    1290
  1331 ;;                                              8 BANK0      5     3      2
  1332 ;;                             _lcdcmd
  1333 ;;                            ___awdiv
  1334 ;;                            _lcddata
  1335 ;;                            ___awmod
  1336 ;; ---------------------------------------------------------------------------------
  1337 ;; (2) _lcdstring                                            2     0      2     225
  1338 ;;                                              7 COMMON     2     0      2
  1339 ;;                            _lcddata
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (1) _lcd_init                                             2     2      0     268
  1342 ;;                                              7 COMMON     2     2      0
  1343 ;;                            _lcdport
  1344 ;;                             _lcdcmd
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (1) _RFID_read                                            2     2      0     160
  1347 ;;                                              5 COMMON     2     2      0
  1348 ;;                        _softreceive
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (3) _lcddata                                              3     3      0     180
  1351 ;;                                              4 COMMON     3     3      0
  1352 ;;                            _lcdport
  1353 ;;                             _enable
  1354 ;; ---------------------------------------------------------------------------------
  1355 ;; (3) _lcdcmd                                               3     3      0     180
  1356 ;;                                              4 COMMON     3     3      0
  1357 ;;                            _lcdport
  1358 ;;                             _enable
  1359 ;; ---------------------------------------------------------------------------------
  1360 ;; (1) _paramter                                             0     0      0     158
  1361 ;;                        _eeprom_read
  1362 ;;                             ___wmul
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (1) _ReadStock                                            0     0      0     158
  1365 ;;                        _eeprom_read
  1366 ;;                             ___wmul
  1367 ;; ---------------------------------------------------------------------------------
  1368 ;; (1) _ReadAmnt                                             0     0      0     158
  1369 ;;                        _eeprom_read
  1370 ;;                             ___wmul
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (2) _softreceive                                          3     3      0      92
  1373 ;;                                              2 COMMON     3     3      0
  1374 ;; ---------------------------------------------------------------------------------
  1375 ;; (1) _SoftWareUart_Init                                    1     1      0       0
  1376 ;;                                              2 COMMON     1     1      0
  1377 ;; ---------------------------------------------------------------------------------
  1378 ;; (4) _enable                                               2     2      0       0
  1379 ;;                                              2 COMMON     2     2      0
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (3) ___awmod                                              6     2      4     296
  1382 ;;                                              2 COMMON     6     2      4
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (3) ___awdiv                                              8     4      4     445
  1385 ;;                                              0 BANK0      8     4      4
  1386 ;;                            ___awmod (ARG)
  1387 ;; ---------------------------------------------------------------------------------
  1388 ;; (2) ___lbmod                                              5     4      1     159
  1389 ;;                                              2 COMMON     5     4      1
  1390 ;; ---------------------------------------------------------------------------------
  1391 ;; (2) ___lbdiv                                              4     3      1     162
  1392 ;;                                              2 COMMON     4     3      1
  1393 ;; ---------------------------------------------------------------------------------
  1394 ;; (2) ___wmul                                               6     2      4     136
  1395 ;;                                              5 COMMON     4     0      4
  1396 ;;                                              0 BANK0      2     2      0
  1397 ;;                        _eeprom_read (ARG)
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (1) _strcmp                                               6     4      2      89
  1400 ;;                                              2 COMMON     6     4      2
  1401 ;; ---------------------------------------------------------------------------------
  1402 ;; (1) _uart_init                                            0     0      0       0
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (2) _eeprom_read                                          3     3      0      22
  1405 ;;                                              2 COMMON     3     3      0
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (4) _lcdport                                              1     1      0      88
  1408 ;;                                              2 COMMON     1     1      0
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; Estimated maximum stack depth 4
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1413 ;; ---------------------------------------------------------------------------------
  1414 ;; (5) _ISR                                                  2     2      0       0
  1415 ;;                                              0 COMMON     2     2      0
  1416 ;; ---------------------------------------------------------------------------------
  1417 ;; Estimated maximum stack depth 5
  1418 ;; ---------------------------------------------------------------------------------
  1419 ;; Call Graph Graphs:
  1420 ;; _main (ROOT)
  1421 ;;   _uart_init
  1422 ;;   _lcd_init
  1423 ;;     _lcdport
  1424 ;;     _lcdcmd
  1425 ;;       _lcdport
  1426 ;;       _enable
  1427 ;;   _paramter
  1428 ;;     _eeprom_read
  1429 ;;     ___wmul
  1430 ;;       _eeprom_read (ARG)
  1431 ;;   _SoftWareUart_Init
  1432 ;;   _startup
  1433 ;;     _lcdcmd
  1434 ;;       _lcdport
  1435 ;;       _enable
  1436 ;;     _lcdstring
  1437 ;;       _lcddata
  1438 ;;         _lcdport
  1439 ;;         _enable
  1440 ;;   _lcdstring
  1441 ;;     _lcddata
  1442 ;;       _lcdport
  1443 ;;       _enable
  1444 ;;   _lcdcmd
  1445 ;;     _lcdport
  1446 ;;     _enable
  1447 ;;   _RFID_read
  1448 ;;     _softreceive
  1449 ;;   _strcmp
  1450 ;;   _ReadAmnt
  1451 ;;     _eeprom_read
  1452 ;;     ___wmul
  1453 ;;       _eeprom_read (ARG)
  1454 ;;   _DisplayAmnt
  1455 ;;     _lcdcmd
  1456 ;;       _lcdport
  1457 ;;       _enable
  1458 ;;     ___awdiv
  1459 ;;       ___awmod (ARG)
  1460 ;;     _lcddata
  1461 ;;       _lcdport
  1462 ;;       _enable
  1463 ;;     ___awmod
  1464 ;;   _DisplayRise
  1465 ;;     _lcdcmd
  1466 ;;       _lcdport
  1467 ;;       _enable
  1468 ;;     ___lbdiv
  1469 ;;     _lcddata
  1470 ;;       _lcdport
  1471 ;;       _enable
  1472 ;;     ___lbmod
  1473 ;;   _DisplaySugar
  1474 ;;     _lcdcmd
  1475 ;;       _lcdport
  1476 ;;       _enable
  1477 ;;     ___lbdiv
  1478 ;;     _lcddata
  1479 ;;       _lcdport
  1480 ;;       _enable
  1481 ;;     ___lbmod
  1482 ;;   _DisplayKerosene
  1483 ;;     _lcdcmd
  1484 ;;       _lcdport
  1485 ;;       _enable
  1486 ;;     ___lbdiv
  1487 ;;     _lcddata
  1488 ;;       _lcdport
  1489 ;;       _enable
  1490 ;;     ___lbmod
  1491 ;;   _ReadStock
  1492 ;;     _eeprom_read
  1493 ;;     ___wmul
  1494 ;;       _eeprom_read (ARG)
  1495 ;;   _DisplayStock
  1496 ;;     _lcdcmd
  1497 ;;       _lcdport
  1498 ;;       _enable
  1499 ;;     _lcdstring
  1500 ;;       _lcddata
  1501 ;;         _lcdport
  1502 ;;         _enable
  1503 ;;     _DisplayAmnt
  1504 ;;       _lcdcmd
  1505 ;;         _lcdport
  1506 ;;         _enable
  1507 ;;       ___awdiv
  1508 ;;         ___awmod (ARG)
  1509 ;;       _lcddata
  1510 ;;         _lcdport
  1511 ;;         _enable
  1512 ;;       ___awmod
  1513 ;;
  1514 ;; _ISR (ROOT)
  1515 ;;
  1516 ;; Address spaces:
  1517 ;;Name               Size   Autos  Total    Cost      Usage
  1518 ;;BANK3               60      0       0       9        0.0%
  1519 ;;BITBANK3            60      0       0       8        0.0%
  1520 ;;SFR3                 0      0       0       4        0.0%
  1521 ;;BITSFR3              0      0       0       4        0.0%
  1522 ;;BANK2               60      0       0      11        0.0%
  1523 ;;BITBANK2            60      0       0      10        0.0%
  1524 ;;SFR2                 0      0       0       5        0.0%
  1525 ;;BITSFR2              0      0       0       5        0.0%
  1526 ;;SFR1                 0      0       0       2        0.0%
  1527 ;;BITSFR1              0      0       0       2        0.0%
  1528 ;;BANK1               50      0       D       7       16.3%
  1529 ;;BITBANK1            50      0       0       6        0.0%
  1530 ;;CODE                 0      0       0       0        0.0%
  1531 ;;DATA                 0      0      6C      12        0.0%
  1532 ;;ABS                  0      0      68       3        0.0%
  1533 ;;NULL                 0      0       0       0        0.0%
  1534 ;;STACK                0      0       4       2        0.0%
  1535 ;;BANK0               50     10      50       5      100.0%
  1536 ;;BITBANK0            50      0       0       4        0.0%
  1537 ;;SFR0                 0      0       0       1        0.0%
  1538 ;;BITSFR0              0      0       0       1        0.0%
  1539 ;;COMMON               E      9       B       1       78.6%
  1540 ;;BITCOMMON            E      0       1       0        7.1%
  1541 ;;EEDATA             100      0       0       0        0.0%
  1542                           
  1543                           
  1544 ;; *************** function _main *****************
  1545 ;; Defined at:
  1546 ;;		line 155 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;		None               void
  1553 ;; Registers used:
  1554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 17F/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0
  1562 ;;      Temps:          0       3       0       0       0
  1563 ;;      Totals:         0       3       0       0       0
  1564 ;;Total ram usage:        3 bytes
  1565 ;; Hardware stack levels required when called:    5
  1566 ;; This function calls:
  1567 ;;		_uart_init
  1568 ;;		_lcd_init
  1569 ;;		_paramter
  1570 ;;		_SoftWareUart_Init
  1571 ;;		_startup
  1572 ;;		_lcdstring
  1573 ;;		_lcdcmd
  1574 ;;		_RFID_read
  1575 ;;		_strcmp
  1576 ;;		_ReadAmnt
  1577 ;;		_DisplayAmnt
  1578 ;;		_DisplayRise
  1579 ;;		_DisplaySugar
  1580 ;;		_DisplayKerosene
  1581 ;;		_ReadStock
  1582 ;;		_DisplayStock
  1583 ;; This function is called by:
  1584 ;;		Startup code after reset
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587  0305                     _main:	
  1588                           
  1589                           ;Main.c: 156: ANSEL=0x00;
  1590                           
  1591                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1592  0305  1683               	bsf	3,5	;RP0=1, select bank3
  1593  0306  1703               	bsf	3,6	;RP1=1, select bank3
  1594  0307  0188               	clrf	8	;volatile
  1595                           
  1596                           ;Main.c: 157: ANSELH=0x00;
  1597  0308  0189               	clrf	9	;volatile
  1598                           
  1599                           ;Main.c: 158: TRISD=0X01;
  1600  0309  3001               	movlw	1
  1601  030A  1303               	bcf	3,6	;RP1=0, select bank1
  1602  030B  0088               	movwf	8	;volatile
  1603                           
  1604                           ;Main.c: 159: PORTD=0X00;
  1605  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1606  030D  0188               	clrf	8	;volatile
  1607                           
  1608                           ;Main.c: 160: TRISC=0X0F;
  1609  030E  300F               	movlw	15
  1610  030F  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0310  0087               	movwf	7	;volatile
  1612                           
  1613                           ;Main.c: 161: PORTC=0X00;
  1614  0311  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0312  0187               	clrf	7	;volatile
  1616                           
  1617                           ;Main.c: 162: uart_init();
  1618  0313  120A  118A  2677   	fcall	_uart_init
      +       120A  118A         
  1619                           
  1620                           ;Main.c: 163: lcd_init();
  1621  0318  120A  118A  2107   	fcall	_lcd_init
      +       120A  118A         
  1622                           
  1623                           ;Main.c: 164: paramter();
  1624  031D  120A  118A  24D6   	fcall	_paramter
      +       120A  118A         
  1625                           
  1626                           ;Main.c: 165: SoftWareUart_Init();
  1627  0322  120A  118A  2687   	fcall	_SoftWareUart_Init
      +       120A  118A         
  1628                           
  1629                           ;Main.c: 166: startup();
  1630  0327  120A  118A  20B1   	fcall	_startup
      +       120A  118A         
  1631  032C                     l2986:	
  1632                           
  1633                           ;Main.c: 170: {
  1634                           ;Main.c: 171: if(!RC0)
  1635  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1636  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1637  032E  1807               	btfsc	7,0
  1638  032F  2B55               	goto	l2998
  1639                           
  1640                           ;Main.c: 172: {
  1641                           ;Main.c: 173: lcdstring("PLEASE TAP YOUR  ");
  1642  0330  30B4               	movlw	low (STR_25| (0+32768))
  1643  0331  00F7               	movwf	?_lcdstring
  1644  0332  3088               	movlw	high (STR_25| (0+32768))
  1645  0333  00F8               	movwf	?_lcdstring+1
  1646  0334  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1647                           
  1648                           ;Main.c: 174: lcdcmd(0xC0);
  1649  0339  30C0               	movlw	192
  1650  033A  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1651                           
  1652                           ;Main.c: 175: lcdstring("SMART CARD       ");
  1653  033F  3090               	movlw	low (STR_26| (0+32768))
  1654  0340  00F7               	movwf	?_lcdstring
  1655  0341  3088               	movlw	high (STR_26| (0+32768))
  1656  0342  00F8               	movwf	?_lcdstring+1
  1657  0343  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1658                           
  1659                           ;Main.c: 176: _delay((unsigned long)((200)*(20000000/4000.0)));
  1660  0348  3006               	movlw	6
  1661  0349  00EF               	movwf	??_main+2
  1662  034A  300E               	movlw	14
  1663  034B  00EE               	movwf	??_main+1
  1664  034C  30B0               	movlw	176
  1665  034D  00ED               	movwf	??_main
  1666  034E                     u977:	
  1667  034E  0BED               	decfsz	??_main,f
  1668  034F  2B4E               	goto	u977
  1669  0350  0BEE               	decfsz	??_main+1,f
  1670  0351  2B4E               	goto	u977
  1671  0352  0BEF               	decfsz	??_main+2,f
  1672  0353  2B4E               	goto	u977
  1673                           
  1674                           ;Main.c: 177: rfid_flag=0;
  1675  0354  1079               	bcf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  1676  0355                     l2998:	
  1677                           
  1678                           ;Main.c: 178: }
  1679                           ;Main.c: 179: RFID_read();
  1680  0355  120A  118A  261B   	fcall	_RFID_read
      +       120A  118A         
  1681                           
  1682                           ;Main.c: 182: if(strcmp(card_store,User1)==0)
  1683  035A  3046               	movlw	_User1& (0+255)
  1684  035B  00F2               	movwf	?_strcmp
  1685  035C  3037               	movlw	_card_store& (0+255)
  1686  035D  120A  118A  2659   	fcall	_strcmp
      +       120A  118A         
  1687  0362  0873               	movf	?_strcmp+1,w
  1688  0363  0472               	iorwf	?_strcmp,w
  1689  0364  1D03               	skipz
  1690  0365  2B6D               	goto	l3006
  1691                           
  1692                           ;Main.c: 183: {
  1693                           ;Main.c: 184: User=1;
  1694  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0368  01A6               	clrf	_User
  1697  0369  0AA6               	incf	_User,f
  1698  036A                     L1:	
  1699  036A  01A7               	clrf	_User+1
  1700                           
  1701                           ;Main.c: 185: card_store[0]=0;
  1702  036B  01B7               	clrf	_card_store
  1703                           
  1704                           ;Main.c: 186: }
  1705  036C  2CAC               	goto	l3080
  1706  036D                     l3006:	
  1707                           
  1708                           ;Main.c: 187: else if(strcmp(card_store,User2)==0)
  1709  036D  3053               	movlw	_User2& (0+255)
  1710  036E  00F2               	movwf	?_strcmp
  1711  036F  3037               	movlw	_card_store& (0+255)
  1712  0370  120A  118A  2659   	fcall	_strcmp
      +       120A  118A         
  1713  0375  0873               	movf	?_strcmp+1,w
  1714  0376  0472               	iorwf	?_strcmp,w
  1715  0377  1D03               	skipz
  1716  0378  2B7B               	goto	l3012
  1717                           
  1718                           ;Main.c: 188: {
  1719                           ;Main.c: 189: User=2;
  1720  0379  3002               	movlw	2
  1721  037A  2B88               	goto	L3
  1722  037B                     l3012:	
  1723                           
  1724                           ;Main.c: 192: else if(strcmp(card_store,User3)==0)
  1725  037B  30A0               	movlw	_User3& (0+255)
  1726  037C  00F2               	movwf	?_strcmp
  1727  037D  3037               	movlw	_card_store& (0+255)
  1728  037E  120A  118A  2659   	fcall	_strcmp
      +       120A  118A         
  1729  0383  0873               	movf	?_strcmp+1,w
  1730  0384  0472               	iorwf	?_strcmp,w
  1731  0385  1D03               	skipz
  1732  0386  2CAC               	goto	l3080
  1733                           
  1734                           ;Main.c: 193: {
  1735                           ;Main.c: 194: User=3;
  1736  0387  3003               	movlw	3
  1737  0388                     L3:	
  1738  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1740  038A  00A6               	movwf	_User
  1741  038B  2B6A               	goto	L1
  1742  038C                     l3018:	
  1743                           ;Main.c: 196: }
  1744                           ;Main.c: 198: switch(User)
  1745                           
  1746                           
  1747                           ;Main.c: 201: {
  1748                           ;Main.c: 202: ReadAmnt();
  1749  038C  120A  118A  2513   	fcall	_ReadAmnt
      +       120A  118A         
  1750                           
  1751                           ;Main.c: 203: lcdcmd(0x80);
  1752  0391  3080               	movlw	128
  1753  0392  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1754                           
  1755                           ;Main.c: 204: lcdstring("USER1 AMOUNT:       ");
  1756  0397  30C3               	movlw	low (STR_29| (0+32768))
  1757  0398  00F7               	movwf	?_lcdstring
  1758  0399  3087               	movlw	high (STR_29| (0+32768))
  1759  039A  00F8               	movwf	?_lcdstring+1
  1760  039B  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1761                           
  1762                           ;Main.c: 205: DisplayAmnt(0X8D,User1amt);
  1763  03A0  0829               	movf	_User1amt+1,w
  1764  03A1  00E9               	movwf	?_DisplayAmnt+1
  1765  03A2  0828               	movf	_User1amt,w
  1766  03A3  00E8               	movwf	?_DisplayAmnt
  1767  03A4  308D               	movlw	141
  1768  03A5  120A  118A  217E   	fcall	_DisplayAmnt
      +       120A  118A         
  1769                           
  1770                           ;Main.c: 206: lcdcmd(0xC0);
  1771  03AA  30C0               	movlw	192
  1772  03AB  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1773                           
  1774                           ;Main.c: 207: lcdstring("RISE:   Kg          ");
  1775  03B0  3099               	movlw	low (STR_30| (0+32768))
  1776  03B1  00F7               	movwf	?_lcdstring
  1777  03B2  3087               	movlw	high (STR_30| (0+32768))
  1778  03B3  00F8               	movwf	?_lcdstring+1
  1779  03B4  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1780                           
  1781                           ;Main.c: 208: DisplayRise(0XC5,User1Rise);
  1782  03B9  087A               	movf	_User1Rise,w
  1783  03BA  00F7               	movwf	?_DisplayRise
  1784  03BB  30C5               	movlw	197
  1785  03BC  120A  118A  202F   	fcall	_DisplayRise
      +       120A  118A         
  1786                           
  1787                           ;Main.c: 209: lcdcmd(0x94);
  1788  03C1  3094               	movlw	148
  1789  03C2  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1790                           
  1791                           ;Main.c: 210: lcdstring("SUGAR:   Kg         ");
  1792  03C7  30AE               	movlw	low (STR_31| (0+32768))
  1793  03C8  00F7               	movwf	?_lcdstring
  1794  03C9  3087               	movlw	high (STR_31| (0+32768))
  1795  03CA  00F8               	movwf	?_lcdstring+1
  1796  03CB  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1797                           
  1798                           ;Main.c: 211: DisplaySugar(0x9A,User1Sugar);
  1799  03D0  082F               	movf	_User1Sugar,w
  1800  03D1  00F7               	movwf	?_DisplaySugar
  1801  03D2  309A               	movlw	154
  1802  03D3  120A  118A  204F   	fcall	_DisplaySugar
      +       120A  118A         
  1803                           
  1804                           ;Main.c: 212: lcdcmd(0xD4);
  1805  03D8  30D4               	movlw	212
  1806  03D9  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1807                           
  1808                           ;Main.c: 213: lcdstring("KEROSENE:   Lts     ");
  1809  03DE  3017               	movlw	low (STR_32| (0+32768))
  1810  03DF  00F7               	movwf	?_lcdstring
  1811  03E0  3088               	movlw	high (STR_32| (0+32768))
  1812  03E1  00F8               	movwf	?_lcdstring+1
  1813  03E2  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1814                           
  1815                           ;Main.c: 214: DisplayKerosene(0XDD,User1Kerosene);
  1816  03E7  082E               	movf	_User1Kerosene,w
  1817  03E8                     L2:	
  1818  03E8  00F7               	movwf	?_DisplayKerosene
  1819  03E9  30DD               	movlw	221
  1820  03EA  120A  118A  200F   	fcall	_DisplayKerosene
      +       120A  118A         
  1821                           
  1822                           ;Main.c: 215: User=0;
  1823  03EF  01A6               	clrf	_User
  1824  03F0  01A7               	clrf	_User+1
  1825                           
  1826                           ;Main.c: 216: break;
  1827  03F1  2CBC               	goto	l3082
  1828  03F2                     l3038:	
  1829                           
  1830                           ;Main.c: 219: {
  1831                           ;Main.c: 220: ReadAmnt();
  1832  03F2  120A  118A  2513   	fcall	_ReadAmnt
      +       120A  118A         
  1833                           
  1834                           ;Main.c: 221: lcdcmd(0x80);
  1835  03F7  3080               	movlw	128
  1836  03F8  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1837                           
  1838                           ;Main.c: 222: lcdstring("USER2 AMOUNT:       ");
  1839  03FD  30D8               	movlw	low (STR_33| (0+32768))
  1840  03FE  00F7               	movwf	?_lcdstring
  1841  03FF  3087               	movlw	high (STR_33| (0+32768))
  1842  0400  00F8               	movwf	?_lcdstring+1
  1843  0401  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1844                           
  1845                           ;Main.c: 223: DisplayAmnt(0X8D,User2amt);
  1846  0406  082B               	movf	_User2amt+1,w
  1847  0407  00E9               	movwf	?_DisplayAmnt+1
  1848  0408  082A               	movf	_User2amt,w
  1849  0409  00E8               	movwf	?_DisplayAmnt
  1850  040A  308D               	movlw	141
  1851  040B  120A  118A  217E   	fcall	_DisplayAmnt
      +       120A  118A         
  1852                           
  1853                           ;Main.c: 224: lcdcmd(0xC0);
  1854  0410  30C0               	movlw	192
  1855  0411  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1856                           
  1857                           ;Main.c: 225: lcdstring("RISE:   Kg          ");
  1858  0416  3099               	movlw	low (STR_30| (0+32768))
  1859  0417  00F7               	movwf	?_lcdstring
  1860  0418  3087               	movlw	high (STR_30| (0+32768))
  1861  0419  00F8               	movwf	?_lcdstring+1
  1862  041A  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1863                           
  1864                           ;Main.c: 226: DisplayRise(0XC5,User2Rise);
  1865  041F  0831               	movf	_User2Rise,w
  1866  0420  00F7               	movwf	?_DisplayRise
  1867  0421  30C5               	movlw	197
  1868  0422  120A  118A  202F   	fcall	_DisplayRise
      +       120A  118A         
  1869                           
  1870                           ;Main.c: 227: lcdcmd(0x94);
  1871  0427  3094               	movlw	148
  1872  0428  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1873                           
  1874                           ;Main.c: 228: lcdstring("SUGAR:   Kg         ");
  1875  042D  30AE               	movlw	low (STR_31| (0+32768))
  1876  042E  00F7               	movwf	?_lcdstring
  1877  042F  3087               	movlw	high (STR_31| (0+32768))
  1878  0430  00F8               	movwf	?_lcdstring+1
  1879  0431  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1880                           
  1881                           ;Main.c: 229: DisplaySugar(0x9A,User2Sugar);
  1882  0436  0832               	movf	_User2Sugar,w
  1883  0437  00F7               	movwf	?_DisplaySugar
  1884  0438  309A               	movlw	154
  1885  0439  120A  118A  204F   	fcall	_DisplaySugar
      +       120A  118A         
  1886                           
  1887                           ;Main.c: 230: lcdcmd(0xD4);
  1888  043E  30D4               	movlw	212
  1889  043F  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1890                           
  1891                           ;Main.c: 231: lcdstring("KEROSENE:   Lts     ");
  1892  0444  3017               	movlw	low (STR_32| (0+32768))
  1893  0445  00F7               	movwf	?_lcdstring
  1894  0446  3088               	movlw	high (STR_32| (0+32768))
  1895  0447  00F8               	movwf	?_lcdstring+1
  1896  0448  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1897                           
  1898                           ;Main.c: 232: DisplayKerosene(0XDD,User2Kerosene);
  1899  044D  0830               	movf	_User2Kerosene,w
  1900  044E  2BE8               	goto	L2
  1901  044F                     l3058:	
  1902                           
  1903                           ;Main.c: 237: {
  1904                           ;Main.c: 238: ReadAmnt();
  1905  044F  120A  118A  2513   	fcall	_ReadAmnt
      +       120A  118A         
  1906                           
  1907                           ;Main.c: 239: lcdcmd(0x80);
  1908  0454  3080               	movlw	128
  1909  0455  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1910                           
  1911                           ;Main.c: 240: lcdstring("USER3 AMOUNT:       ");
  1912  045A  30ED               	movlw	low (STR_37| (0+32768))
  1913  045B  00F7               	movwf	?_lcdstring
  1914  045C  3087               	movlw	high (STR_37| (0+32768))
  1915  045D  00F8               	movwf	?_lcdstring+1
  1916  045E  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1917                           
  1918                           ;Main.c: 241: DisplayAmnt(0X8D,User3amt);
  1919  0463  082D               	movf	_User3amt+1,w
  1920  0464  00E9               	movwf	?_DisplayAmnt+1
  1921  0465  082C               	movf	_User3amt,w
  1922  0466  00E8               	movwf	?_DisplayAmnt
  1923  0467  308D               	movlw	141
  1924  0468  120A  118A  217E   	fcall	_DisplayAmnt
      +       120A  118A         
  1925                           
  1926                           ;Main.c: 242: lcdcmd(0xC0);
  1927  046D  30C0               	movlw	192
  1928  046E  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1929                           
  1930                           ;Main.c: 243: lcdstring("RISE:   Kg          ");
  1931  0473  3099               	movlw	low (STR_30| (0+32768))
  1932  0474  00F7               	movwf	?_lcdstring
  1933  0475  3087               	movlw	high (STR_30| (0+32768))
  1934  0476  00F8               	movwf	?_lcdstring+1
  1935  0477  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1936                           
  1937                           ;Main.c: 244: DisplayRise(0XC5,User3Rise);
  1938  047C  0834               	movf	_User3Rise,w
  1939  047D  00F7               	movwf	?_DisplayRise
  1940  047E  30C5               	movlw	197
  1941  047F  120A  118A  202F   	fcall	_DisplayRise
      +       120A  118A         
  1942                           
  1943                           ;Main.c: 245: lcdcmd(0x94);
  1944  0484  3094               	movlw	148
  1945  0485  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1946                           
  1947                           ;Main.c: 246: lcdstring("SUGAR:   Kg         ");
  1948  048A  30AE               	movlw	low (STR_31| (0+32768))
  1949  048B  00F7               	movwf	?_lcdstring
  1950  048C  3087               	movlw	high (STR_31| (0+32768))
  1951  048D  00F8               	movwf	?_lcdstring+1
  1952  048E  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1953                           
  1954                           ;Main.c: 247: DisplaySugar(0x9A,User3Sugar);
  1955  0493  0835               	movf	_User3Sugar,w
  1956  0494  00F7               	movwf	?_DisplaySugar
  1957  0495  309A               	movlw	154
  1958  0496  120A  118A  204F   	fcall	_DisplaySugar
      +       120A  118A         
  1959                           
  1960                           ;Main.c: 248: lcdcmd(0xD4);
  1961  049B  30D4               	movlw	212
  1962  049C  120A  118A  214C   	fcall	_lcdcmd
      +       120A  118A         
  1963                           
  1964                           ;Main.c: 249: lcdstring("KEROSENE:   Lts     ");
  1965  04A1  3017               	movlw	low (STR_32| (0+32768))
  1966  04A2  00F7               	movwf	?_lcdstring
  1967  04A3  3088               	movlw	high (STR_32| (0+32768))
  1968  04A4  00F8               	movwf	?_lcdstring+1
  1969  04A5  120A  118A  2162   	fcall	_lcdstring
      +       120A  118A         
  1970                           
  1971                           ;Main.c: 250: DisplayKerosene(0XDD,User3Kerosene);
  1972  04AA  0833               	movf	_User3Kerosene,w
  1973  04AB  2BE8               	goto	L2
  1974  04AC                     l3080:	
  1975                           
  1976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1977                           ; Switch size 1, requested type "space"
  1978                           ; Number of cases is 1, Range of values is 0 to 0
  1979                           ; switch strategies available:
  1980                           ; Name         Bytes Cycles
  1981                           ; simple_byte     4     3 (average)
  1982                           ; direct_byte    22    19 (fixed)
  1983                           ;	Chosen strategy is simple_byte
  1984  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1985  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1986  04AE  0827               	movf	_User+1,w
  1987  04AF  3A00               	xorlw	0	; case 0
  1988  04B0  1D03               	btfss	3,2
  1989  04B1  2CBC               	goto	l3082
  1990                           
  1991                           ; Switch size 1, requested type "space"
  1992                           ; Number of cases is 3, Range of values is 1 to 3
  1993                           ; switch strategies available:
  1994                           ; Name         Bytes Cycles
  1995                           ; simple_byte    10     6 (average)
  1996                           ; direct_byte    31    22 (fixed)
  1997                           ;	Chosen strategy is simple_byte
  1998  04B2  0826               	movf	_User,w
  1999  04B3  3A01               	xorlw	1	; case 1
  2000  04B4  1903               	skipnz
  2001  04B5  2B8C               	goto	l3018
  2002  04B6  3A03               	xorlw	3	; case 2
  2003  04B7  1903               	skipnz
  2004  04B8  2BF2               	goto	l3038
  2005  04B9  3A01               	xorlw	1	; case 3
  2006  04BA  1903               	skipnz
  2007  04BB  2C4F               	goto	l3058
  2008  04BC                     l3082:	
  2009                           
  2010                           ;Main.c: 268: ReadStock();
  2011  04BC  120A  118A  24F0   	fcall	_ReadStock
      +       120A  118A         
  2012                           
  2013                           ;Main.c: 269: if(RC1)
  2014  04C1  1C87               	btfss	7,1
  2015  04C2  2CC8               	goto	l3088
  2016                           
  2017                           ;Main.c: 270: DisplayStock();
  2018  04C3  120A  118A  206F   	fcall	_DisplayStock
      +       120A  118A         
  2019  04C8                     l3088:	
  2020                           
  2021                           ;Main.c: 271: _delay((unsigned long)((500)*(20000000/4000.0)));
  2022  04C8  300D               	movlw	13
  2023  04C9  00EF               	movwf	??_main+2
  2024  04CA  30A3               	movlw	163
  2025  04CB  00EE               	movwf	??_main+1
  2026  04CC  30BD               	movlw	189
  2027  04CD  00ED               	movwf	??_main
  2028  04CE                     u987:	
  2029  04CE  0BED               	decfsz	??_main,f
  2030  04CF  2CCE               	goto	u987
  2031  04D0  0BEE               	decfsz	??_main+1,f
  2032  04D1  2CCE               	goto	u987
  2033  04D2  0BEF               	decfsz	??_main+2,f
  2034  04D3  2CCE               	goto	u987
  2035  04D4  0064               	clrwdt
  2036  04D5  2B2C               	goto	l2986
  2037  04D6                     __end_of_main:	
  2038                           
  2039                           	psect	text749
  2040  000F                     __ptext749:	
  2041 ;; =============== function _DisplayStock ends ============
  2042                           
  2043                           
  2044 ;; *************** function _DisplayKerosene *****************
  2045 ;; Defined at:
  2046 ;;		line 118 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  Location        1    wreg     unsigned char 
  2049 ;;  Kerosene        1    7[COMMON] unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  Location        1    8[COMMON] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;		None               void
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 60/0
  2058 ;;		On exit  : 60/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         1       0       0       0       0
  2062 ;;      Locals:         1       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0
  2064 ;;      Totals:         2       0       0       0       0
  2065 ;;Total ram usage:        2 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    3
  2068 ;; This function calls:
  2069 ;;		_lcdcmd
  2070 ;;		___lbdiv
  2071 ;;		_lcddata
  2072 ;;		___lbmod
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077  000F                     _DisplayKerosene:	
  2078                           
  2079                           ; Regs used in _DisplayKerosene: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2080                           ;DisplayKerosene@Location stored from wreg
  2081  000F  00F8               	movwf	DisplayKerosene@Location
  2082                           
  2083                           ;Main.c: 119: lcdcmd(Location);
  2084  0010  214C  120A  118A   	fcall	_lcdcmd
  2085                           
  2086                           ;Main.c: 120: lcddata(digit[Kerosene/10]);
  2087  0013  300A               	movlw	10
  2088  0014  00F2               	movwf	?___lbdiv
  2089  0015  0877               	movf	DisplayKerosene@Kerosene,w
  2090  0016  22B6  120A  118A   	fcall	___lbdiv
  2091  0019  22ED               	fcall	PL2	;call to abstracted procedure
  2092  001A  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2093  001F  2230  120A  118A   	fcall	_lcddata
  2094                           
  2095                           ;Main.c: 121: lcddata(digit[Kerosene%10]);
  2096  0022  300A               	movlw	10
  2097  0023  00F2               	movwf	?___lbmod
  2098  0024  0877               	movf	DisplayKerosene@Kerosene,w
  2099  0025  22D1  120A  118A   	fcall	___lbmod
  2100  0028  22ED               	fcall	PL2	;call to abstracted procedure
  2101  0029  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2102  002E  2A30               	ljmp	_lcddata
  2103  002F                     __end_of_DisplayKerosene:	
  2104  002F                     __ptext750:	
  2105 ;; =============== function _DisplayKerosene ends ============
  2106                           
  2107                           
  2108 ;; *************** function _DisplayRise *****************
  2109 ;; Defined at:
  2110 ;;		line 112 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  Location        1    wreg     unsigned char 
  2113 ;;  Rise            1    7[COMMON] unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  Location        1    8[COMMON] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;		None               void
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 60/0
  2122 ;;		On exit  : 60/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         1       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0
  2128 ;;      Totals:         2       0       0       0       0
  2129 ;;Total ram usage:        2 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    3
  2132 ;; This function calls:
  2133 ;;		_lcdcmd
  2134 ;;		___lbdiv
  2135 ;;		_lcddata
  2136 ;;		___lbmod
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141  002F                     _DisplayRise:	
  2142                           
  2143                           ; Regs used in _DisplayRise: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2144                           ;DisplayRise@Location stored from wreg
  2145  002F  00F8               	movwf	DisplayRise@Location
  2146                           
  2147                           ;Main.c: 113: lcdcmd(Location);
  2148  0030  214C  120A  118A   	fcall	_lcdcmd
  2149                           
  2150                           ;Main.c: 114: lcddata(digit[Rise/10]);
  2151  0033  300A               	movlw	10
  2152  0034  00F2               	movwf	?___lbdiv
  2153  0035  0877               	movf	DisplayRise@Rise,w
  2154  0036  22B6  120A  118A   	fcall	___lbdiv
  2155  0039  22ED               	fcall	PL2	;call to abstracted procedure
  2156  003A  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2157  003F  2230  120A  118A   	fcall	_lcddata
  2158                           
  2159                           ;Main.c: 115: lcddata(digit[Rise%10]);
  2160  0042  300A               	movlw	10
  2161  0043  00F2               	movwf	?___lbmod
  2162  0044  0877               	movf	DisplayRise@Rise,w
  2163  0045  22D1  120A  118A   	fcall	___lbmod
  2164  0048  22ED               	fcall	PL2	;call to abstracted procedure
  2165  0049  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2166  004E  2A30               	ljmp	_lcddata
  2167  004F                     __end_of_DisplayRise:	
  2168  004F                     __ptext751:	
  2169 ;; =============== function _DisplayRise ends ============
  2170                           
  2171                           
  2172 ;; *************** function _DisplaySugar *****************
  2173 ;; Defined at:
  2174 ;;		line 106 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  Location        1    wreg     unsigned char 
  2177 ;;  Sugar           1    7[COMMON] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  Location        1    8[COMMON] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 60/0
  2186 ;;		On exit  : 60/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         1       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         2       0       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    3
  2196 ;; This function calls:
  2197 ;;		_lcdcmd
  2198 ;;		___lbdiv
  2199 ;;		_lcddata
  2200 ;;		___lbmod
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205  004F                     _DisplaySugar:	
  2206                           
  2207                           ; Regs used in _DisplaySugar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2208                           ;DisplaySugar@Location stored from wreg
  2209  004F  00F8               	movwf	DisplaySugar@Location
  2210                           
  2211                           ;Main.c: 107: lcdcmd(Location);
  2212  0050  214C  120A  118A   	fcall	_lcdcmd
  2213                           
  2214                           ;Main.c: 108: lcddata(digit[Sugar/10]);
  2215  0053  300A               	movlw	10
  2216  0054  00F2               	movwf	?___lbdiv
  2217  0055  0877               	movf	DisplaySugar@Sugar,w
  2218  0056  22B6  120A  118A   	fcall	___lbdiv
  2219  0059  22ED               	fcall	PL2	;call to abstracted procedure
  2220  005A  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2221  005F  2230  120A  118A   	fcall	_lcddata
  2222                           
  2223                           ;Main.c: 109: lcddata(digit[Sugar%10]);
  2224  0062  300A               	movlw	10
  2225  0063  00F2               	movwf	?___lbmod
  2226  0064  0877               	movf	DisplaySugar@Sugar,w
  2227  0065  22D1  120A  118A   	fcall	___lbmod
  2228  0068  22ED               	fcall	PL2	;call to abstracted procedure
  2229  0069  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2230  006E  2A30               	ljmp	_lcddata
  2231  006F                     __end_of_DisplaySugar:	
  2232  006F                     __ptext748:	
  2233 ;; =============== function _startup ends ============
  2234                           
  2235                           
  2236 ;; *************** function _DisplayStock *****************
  2237 ;; Defined at:
  2238 ;;		line 92 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;		None               void
  2245 ;; Registers used:
  2246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 60/0
  2249 ;;		On exit  : 60/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0
  2255 ;;      Totals:         0       0       0       0       0
  2256 ;;Total ram usage:        0 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    4
  2259 ;; This function calls:
  2260 ;;		_lcdcmd
  2261 ;;		_lcdstring
  2262 ;;		_DisplayAmnt
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267  006F                     _DisplayStock:	
  2268                           
  2269                           ;Main.c: 93: lcdcmd(0x80);
  2270                           
  2271                           ; Regs used in _DisplayStock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2272  006F  3080               	movlw	128
  2273  0070  214C  120A  118A   	fcall	_lcdcmd
  2274                           
  2275                           ;Main.c: 94: lcdstring("    STOCK DETAILS   ");
  2276  0073  302C               	movlw	low (STR_19| (0+32768))
  2277  0074  00F7               	movwf	?_lcdstring
  2278  0075  3088               	movlw	high (STR_19| (0+32768))
  2279  0076  00F8               	movwf	?_lcdstring+1
  2280  0077  2162  120A  118A   	fcall	_lcdstring
  2281                           
  2282                           ;Main.c: 95: lcdcmd(0xC0);
  2283  007A  30C0               	movlw	192
  2284  007B  214C  120A  118A   	fcall	_lcdcmd
  2285                           
  2286                           ;Main.c: 96: lcdstring("RISE:      Kg       ");
  2287  007E  3002               	movlw	low (STR_20| (0+32768))
  2288  007F  00F7               	movwf	?_lcdstring
  2289  0080  3088               	movlw	high (STR_20| (0+32768))
  2290  0081  00F8               	movwf	?_lcdstring+1
  2291  0082  2162  120A  118A   	fcall	_lcdstring
  2292                           
  2293                           ;Main.c: 97: DisplayAmnt(0XC5,RiseStock);
  2294  0085  0823               	movf	_RiseStock+1,w
  2295  0086  00E9               	movwf	?_DisplayAmnt+1
  2296  0087  0822               	movf	_RiseStock,w
  2297  0088  00E8               	movwf	?_DisplayAmnt
  2298  0089  30C5               	movlw	197
  2299  008A  217E  120A  118A   	fcall	_DisplayAmnt
  2300                           
  2301                           ;Main.c: 98: lcdcmd(0x94);
  2302  008D  3094               	movlw	148
  2303  008E  214C  120A  118A   	fcall	_lcdcmd
  2304                           
  2305                           ;Main.c: 99: lcdstring("SUGAR:    Kg         ");
  2306  0091  306D               	movlw	low (STR_21| (0+32768))
  2307  0092  00F7               	movwf	?_lcdstring
  2308  0093  3087               	movlw	high (STR_21| (0+32768))
  2309  0094  00F8               	movwf	?_lcdstring+1
  2310  0095  2162  120A  118A   	fcall	_lcdstring
  2311                           
  2312                           ;Main.c: 100: DisplayAmnt(0x9A,SugarStock);
  2313  0098  0825               	movf	_SugarStock+1,w
  2314  0099  00E9               	movwf	?_DisplayAmnt+1
  2315  009A  0824               	movf	_SugarStock,w
  2316  009B  00E8               	movwf	?_DisplayAmnt
  2317  009C  309A               	movlw	154
  2318  009D  217E  120A  118A   	fcall	_DisplayAmnt
  2319                           
  2320                           ;Main.c: 101: lcdcmd(0xD4);
  2321  00A0  30D4               	movlw	212
  2322  00A1  214C  120A  118A   	fcall	_lcdcmd
  2323                           
  2324                           ;Main.c: 102: lcdstring("KEROSENE:     Lts    ");
  2325  00A4  3083               	movlw	low (STR_22| (0+32768))
  2326  00A5  00F7               	movwf	?_lcdstring
  2327  00A6  3087               	movlw	high (STR_22| (0+32768))
  2328  00A7  00F8               	movwf	?_lcdstring+1
  2329  00A8  2162  120A  118A   	fcall	_lcdstring
  2330                           
  2331                           ;Main.c: 103: DisplayAmnt(0XDD,KeroseneStock);
  2332  00AB  0821               	movf	_KeroseneStock+1,w
  2333  00AC  00E9               	movwf	?_DisplayAmnt+1
  2334  00AD  0820               	movf	_KeroseneStock,w
  2335  00AE  00E8               	movwf	?_DisplayAmnt
  2336  00AF  30DD               	movlw	221
  2337  00B0  297E               	ljmp	_DisplayAmnt
  2338  00B1                     __end_of_DisplayStock:	
  2339  00B1                     __ptext747:	
  2340 ;; =============== function _main ends ============
  2341                           
  2342                           
  2343 ;; *************** function _startup *****************
  2344 ;; Defined at:
  2345 ;;		line 139 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;		None               void
  2352 ;; Registers used:
  2353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/40
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       3       0       0       0
  2362 ;;      Totals:         0       3       0       0       0
  2363 ;;Total ram usage:        3 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    4
  2366 ;; This function calls:
  2367 ;;		_lcdcmd
  2368 ;;		_lcdstring
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373  00B1                     _startup:	
  2374                           
  2375                           ;Main.c: 140: lcdcmd(0x80);
  2376                           
  2377                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2378  00B1  3080               	movlw	128
  2379  00B2  214C  120A  118A   	fcall	_lcdcmd
  2380                           
  2381                           ;Main.c: 141: lcdstring("AUTOMATIC RATION ");
  2382  00B5  30C6               	movlw	low (STR_23| (0+32768))
  2383  00B6  00F7               	movwf	?_lcdstring
  2384  00B7  3088               	movlw	high (STR_23| (0+32768))
  2385  00B8  00F8               	movwf	?_lcdstring+1
  2386  00B9  2162  120A  118A   	fcall	_lcdstring
  2387                           
  2388                           ;Main.c: 142: lcdcmd(0xC0);
  2389  00BC  30C0               	movlw	192
  2390  00BD  214C  120A  118A   	fcall	_lcdcmd
  2391                           
  2392                           ;Main.c: 143: lcdstring("   CARD SYSTEM   ");
  2393  00C0  30A2               	movlw	low (STR_24| (0+32768))
  2394  00C1  00F7               	movwf	?_lcdstring
  2395  00C2  3088               	movlw	high (STR_24| (0+32768))
  2396  00C3  00F8               	movwf	?_lcdstring+1
  2397  00C4  2162  120A  118A   	fcall	_lcdstring
  2398                           
  2399                           ;Main.c: 144: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2400  00C7  301A               	movlw	26
  2401  00C8  00E2               	movwf	??_startup+2
  2402  00C9  3045               	movlw	69
  2403  00CA  00E1               	movwf	??_startup+1
  2404  00CB  307E               	movlw	126
  2405  00CC  00E0               	movwf	??_startup
  2406  00CD                     u997:	
  2407  00CD  0BE0               	decfsz	??_startup,f
  2408  00CE  28CD               	goto	u997
  2409  00CF  0BE1               	decfsz	??_startup+1,f
  2410  00D0  28CD               	goto	u997
  2411  00D1  0BE2               	decfsz	??_startup+2,f
  2412  00D2  28CD               	goto	u997
  2413                           
  2414                           ;Main.c: 145: lcdcmd(0x01);
  2415  00D3  3001               	movlw	1
  2416  00D4  214C  120A  118A   	fcall	_lcdcmd
  2417                           
  2418                           ;Main.c: 146: _delay((unsigned long)((500)*(20000000/4000.0)));
  2419  00D7  300D               	movlw	13
  2420  00D8  00E2               	movwf	??_startup+2
  2421  00D9  30A3               	movlw	163
  2422  00DA  00E1               	movwf	??_startup+1
  2423  00DB  30BD               	movlw	189
  2424  00DC  00E0               	movwf	??_startup
  2425  00DD                     u1007:	
  2426  00DD  0BE0               	decfsz	??_startup,f
  2427  00DE  28DD               	goto	u1007
  2428  00DF  0BE1               	decfsz	??_startup+1,f
  2429  00E0  28DD               	goto	u1007
  2430  00E1  0BE2               	decfsz	??_startup+2,f
  2431  00E2  28DD               	goto	u1007
  2432  00E3  0064               	clrwdt
  2433                           
  2434                           ;Main.c: 147: lcdcmd(0x80);
  2435  00E4  3080               	movlw	128
  2436  00E5  214C  120A  118A   	fcall	_lcdcmd
  2437                           
  2438                           ;Main.c: 148: lcdstring("PLEASE TAP YOUR  ");
  2439  00E8  30B4               	movlw	low (STR_25| (0+32768))
  2440  00E9  00F7               	movwf	?_lcdstring
  2441  00EA  3088               	movlw	high (STR_25| (0+32768))
  2442  00EB  00F8               	movwf	?_lcdstring+1
  2443  00EC  2162  120A  118A   	fcall	_lcdstring
  2444                           
  2445                           ;Main.c: 149: lcdcmd(0xC0);
  2446  00EF  30C0               	movlw	192
  2447  00F0  214C  120A  118A   	fcall	_lcdcmd
  2448                           
  2449                           ;Main.c: 150: lcdstring("SMART CARD       ");
  2450  00F3  3090               	movlw	low (STR_26| (0+32768))
  2451  00F4  00F7               	movwf	?_lcdstring
  2452  00F5  3088               	movlw	high (STR_26| (0+32768))
  2453  00F6  00F8               	movwf	?_lcdstring+1
  2454  00F7  2162  120A  118A   	fcall	_lcdstring
  2455                           
  2456                           ;Main.c: 151: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2457  00FA  301A               	movlw	26
  2458  00FB  00E2               	movwf	??_startup+2
  2459  00FC  3045               	movlw	69
  2460  00FD  00E1               	movwf	??_startup+1
  2461  00FE  307E               	movlw	126
  2462  00FF  00E0               	movwf	??_startup
  2463  0100                     u1017:	
  2464  0100  0BE0               	decfsz	??_startup,f
  2465  0101  2900               	goto	u1017
  2466  0102  0BE1               	decfsz	??_startup+1,f
  2467  0103  2900               	goto	u1017
  2468  0104  0BE2               	decfsz	??_startup+2,f
  2469  0105  2900               	goto	u1017
  2470  0106  0008               	return
  2471  0107                     __end_of_startup:	
  2472  0107                     __ptext754:	
  2473 ;; =============== function _lcdstring ends ============
  2474                           
  2475                           
  2476 ;; *************** function _lcd_init *****************
  2477 ;; Defined at:
  2478 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 17F/0
  2489 ;;		On exit  : 60/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          2       0       0       0       0
  2495 ;;      Totals:         2       0       0       0       0
  2496 ;;Total ram usage:        2 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    3
  2499 ;; This function calls:
  2500 ;;		_lcdport
  2501 ;;		_lcdcmd
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506  0107                     _lcd_init:	
  2507                           
  2508                           ;lcd.c: 72: lcdport(0x00);
  2509                           
  2510                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2511  0107  3000               	movlw	0
  2512  0108  228E  120A  118A   	fcall	_lcdport
  2513                           
  2514                           ;lcd.c: 73: _delay((unsigned long)((20)*(20000000/4000.0)));
  2515  010B  3082               	movlw	130
  2516  010C  00F8               	movwf	??_lcd_init+1
  2517  010D  30DD               	movlw	221
  2518  010E  00F7               	movwf	??_lcd_init
  2519  010F                     u1027:	
  2520  010F  0BF7               	decfsz	??_lcd_init,f
  2521  0110  290F               	goto	u1027
  2522  0111  0BF8               	decfsz	??_lcd_init+1,f
  2523  0112  290F               	goto	u1027
  2524  0113  2914               	nop2
  2525                           
  2526                           ;lcd.c: 74: lcdcmd(0x03);
  2527  0114  3003               	movlw	3
  2528  0115  214C  120A  118A   	fcall	_lcdcmd
  2529                           
  2530                           ;lcd.c: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
  2531  0118  3021               	movlw	33
  2532  0119  00F8               	movwf	??_lcd_init+1
  2533  011A  3076               	movlw	118
  2534  011B  00F7               	movwf	??_lcd_init
  2535  011C                     u1037:	
  2536  011C  0BF7               	decfsz	??_lcd_init,f
  2537  011D  291C               	goto	u1037
  2538  011E  0BF8               	decfsz	??_lcd_init+1,f
  2539  011F  291C               	goto	u1037
  2540  0120  0064               	clrwdt
  2541                           
  2542                           ;lcd.c: 76: lcdcmd(0x03);
  2543  0121  3003               	movlw	3
  2544  0122  214C  120A  118A   	fcall	_lcdcmd
  2545                           
  2546                           ;lcd.c: 77: _delay((unsigned long)((11)*(20000000/4000.0)));
  2547  0125  3048               	movlw	72
  2548  0126  00F8               	movwf	??_lcd_init+1
  2549  0127  306C               	movlw	108
  2550  0128  00F7               	movwf	??_lcd_init
  2551  0129                     u1047:	
  2552  0129  0BF7               	decfsz	??_lcd_init,f
  2553  012A  2929               	goto	u1047
  2554  012B  0BF8               	decfsz	??_lcd_init+1,f
  2555  012C  2929               	goto	u1047
  2556  012D  0064               	clrwdt
  2557                           
  2558                           ;lcd.c: 78: lcdcmd(0x03);
  2559  012E  3003               	movlw	3
  2560  012F  214C  120A  118A   	fcall	_lcdcmd
  2561                           
  2562                           ;lcd.c: 80: lcdcmd(0x02);
  2563  0132  3002               	movlw	2
  2564  0133  214C  120A  118A   	fcall	_lcdcmd
  2565                           
  2566                           ;lcd.c: 81: lcdcmd(0x02);
  2567  0136  3002               	movlw	2
  2568  0137  214C  120A  118A   	fcall	_lcdcmd
  2569                           
  2570                           ;lcd.c: 82: lcdcmd(0x28);
  2571  013A  3028               	movlw	40
  2572  013B  214C  120A  118A   	fcall	_lcdcmd
  2573                           
  2574                           ;lcd.c: 83: lcdcmd(0x00);
  2575  013E  3000               	movlw	0
  2576  013F  214C  120A  118A   	fcall	_lcdcmd
  2577                           
  2578                           ;lcd.c: 84: lcdcmd(0x0C);
  2579  0142  300C               	movlw	12
  2580  0143  214C  120A  118A   	fcall	_lcdcmd
  2581                           
  2582                           ;lcd.c: 85: lcdcmd(0x00);
  2583  0146  3000               	movlw	0
  2584  0147  214C  120A  118A   	fcall	_lcdcmd
  2585                           
  2586                           ;lcd.c: 86: lcdcmd(0x06);
  2587  014A  3006               	movlw	6
  2588  014B  294C               	ljmp	_lcdcmd
  2589  014C                     __end_of_lcd_init:	
  2590  014C                     __ptext757:	
  2591 ;; =============== function _lcddata ends ============
  2592                           
  2593                           
  2594 ;; *************** function _lcdcmd *****************
  2595 ;; Defined at:
  2596 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  a               1    wreg     unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  a               1    6[COMMON] unsigned char 
  2601 ;;  z               1    5[COMMON] unsigned char 
  2602 ;;  y               1    4[COMMON] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;		None               void
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 60/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2612 ;;      Params:         0       0       0       0       0
  2613 ;;      Locals:         3       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0
  2615 ;;      Totals:         3       0       0       0       0
  2616 ;;Total ram usage:        3 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    2
  2619 ;; This function calls:
  2620 ;;		_lcdport
  2621 ;;		_enable
  2622 ;; This function is called by:
  2623 ;;		_lcd_init
  2624 ;;		_DisplayAmnt
  2625 ;;		_DisplayStock
  2626 ;;		_DisplaySugar
  2627 ;;		_DisplayRise
  2628 ;;		_DisplayKerosene
  2629 ;;		_startup
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633  014C                     _lcdcmd:	
  2634                           
  2635                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+pclath+cstack]
  2636                           ;lcdcmd@a stored from wreg
  2637  014C  00F6               	movwf	lcdcmd@a
  2638                           
  2639                           ;lcd.c: 40: unsigned char y,z;
  2640                           ;lcd.c: 41: z=a>>4&0x0F;
  2641  014D  0E76               	swapf	lcdcmd@a,w
  2642  014E  390F               	andlw	15
  2643  014F  00F5               	movwf	lcdcmd@z
  2644  0150  300F               	movlw	15
  2645  0151  05F5               	andwf	lcdcmd@z,f
  2646                           
  2647                           ;lcd.c: 42: y=a&0x0F;
  2648  0152  0876               	movf	lcdcmd@a,w
  2649  0153  00F4               	movwf	lcdcmd@y
  2650  0154  300F               	movlw	15
  2651  0155  05F4               	andwf	lcdcmd@y,f
  2652                           
  2653                           ;lcd.c: 44: lcdport(z);
  2654  0156  0875               	movf	lcdcmd@z,w
  2655  0157  228E  120A  118A   	fcall	_lcdport
  2656                           
  2657                           ;lcd.c: 45: enable();
  2658  015A  22A8  120A  118A   	fcall	_enable
  2659                           
  2660                           ;lcd.c: 46: lcdport(y);
  2661  015D  0874               	movf	lcdcmd@y,w
  2662  015E  228E  120A  118A   	fcall	_lcdport
  2663                           
  2664                           ;lcd.c: 47: enable();
  2665  0161  2AA8               	ljmp	l2516
  2666  0162                     __end_of_lcdcmd:	
  2667  0162                     __ptext753:	
  2668 ;; =============== function _DisplayAmnt ends ============
  2669                           
  2670                           
  2671 ;; *************** function _lcdstring *****************
  2672 ;; Defined at:
  2673 ;;		line 90 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  a               2    7[COMMON] PTR const unsigned char 
  2676 ;;		 -> STR_40(21), STR_39(21), STR_38(21), STR_37(21), 
  2677 ;;		 -> STR_36(21), STR_35(21), STR_34(21), STR_33(21), 
  2678 ;;		 -> STR_32(21), STR_31(21), STR_30(21), STR_29(21), 
  2679 ;;		 -> STR_28(18), STR_27(18), STR_26(18), STR_25(18), 
  2680 ;;		 -> STR_24(18), STR_23(18), STR_22(22), STR_21(22), 
  2681 ;;		 -> STR_20(21), STR_19(21), STR_8(10), STR_2(17), 
  2682 ;;		 -> STR_1(17), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 60/0
  2691 ;;		On exit  : 60/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         2       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0
  2697 ;;      Totals:         2       0       0       0       0
  2698 ;;Total ram usage:        2 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    3
  2701 ;; This function calls:
  2702 ;;		_lcddata
  2703 ;; This function is called by:
  2704 ;;		_DisplayStock
  2705 ;;		_startup
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709  0162                     _lcdstring:	
  2710  0162                     l2618:	
  2711                           ;lcd.c: 91: while(*a)
  2712                           
  2713                           ; Regs used in _lcdstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2714                           
  2715  0162  0878               	movf	lcdstring@a+1,w
  2716  0163  00FF               	movwf	127
  2717  0164  0877               	movf	lcdstring@a,w
  2718  0165  0084               	movwf	4
  2719  0166  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2720  016B  3800               	iorlw	0
  2721  016C  1903               	btfsc	3,2
  2722  016D  0008               	return
  2723                           
  2724                           ;lcd.c: 92: {
  2725                           ;lcd.c: 93: lcddata(*a++);
  2726  016E  0878               	movf	lcdstring@a+1,w
  2727  016F  00FF               	movwf	127
  2728  0170  0877               	movf	lcdstring@a,w
  2729  0171  0084               	movwf	4
  2730  0172  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2731  0177  2230  120A  118A   	fcall	_lcddata
  2732  017A  0AF7               	incf	lcdstring@a,f
  2733  017B  1903               	skipnz
  2734  017C  0AF8               	incf	lcdstring@a+1,f
  2735  017D  2962               	goto	l2618
  2736  017E                     __end_of_lcdstring:	
  2737  017E                     __ptext752:	
  2738 ;; =============== function _DisplaySugar ends ============
  2739                           
  2740                           
  2741 ;; *************** function _DisplayAmnt *****************
  2742 ;; Defined at:
  2743 ;;		line 60 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  Location        1    wreg     unsigned char 
  2746 ;;  Amnt            2    8[BANK0 ] int 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  Location        1   10[BANK0 ] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;		None               void
  2751 ;; Registers used:
  2752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 60/0
  2755 ;;		On exit  : 60/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       2       0       0       0
  2759 ;;      Locals:         0       3       0       0       0
  2760 ;;      Temps:          0       0       0       0       0
  2761 ;;      Totals:         0       5       0       0       0
  2762 ;;Total ram usage:        5 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    3
  2765 ;; This function calls:
  2766 ;;		_lcdcmd
  2767 ;;		___awdiv
  2768 ;;		_lcddata
  2769 ;;		___awmod
  2770 ;; This function is called by:
  2771 ;;		_DisplayStock
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775  017E                     _DisplayAmnt:	
  2776                           
  2777                           ; Regs used in _DisplayAmnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2778                           ;DisplayAmnt@Location stored from wreg
  2779  017E  00EA               	movwf	DisplayAmnt@Location
  2780                           
  2781                           ;Main.c: 61: lcdcmd(Location);
  2782  017F  214C  120A  118A   	fcall	_lcdcmd
  2783                           
  2784                           ;Main.c: 62: lcddata(digit[Amnt/1000]);
  2785  0182  30E8               	movlw	232
  2786  0183  00E0               	movwf	?___awdiv
  2787  0184  3003               	movlw	3
  2788  0185  00E1               	movwf	?___awdiv+1
  2789  0186  0869               	movf	DisplayAmnt@Amnt+1,w
  2790  0187  00E3               	movwf	?___awdiv+3
  2791  0188  0868               	movf	DisplayAmnt@Amnt,w
  2792  0189  00E2               	movwf	?___awdiv+2
  2793  018A  2249  120A  118A   	fcall	___awdiv
  2794  018D  0860               	movf	?___awdiv,w
  2795  018E  22ED               	fcall	PL2	;call to abstracted procedure
  2796  018F  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2797  0194  2230  120A  118A   	fcall	_lcddata
  2798                           
  2799                           ;Main.c: 63: lcddata(digit[Amnt%1000/100]);
  2800  0197  3064               	movlw	100
  2801  0198  00E0               	movwf	?___awdiv
  2802  0199  01E1               	clrf	?___awdiv+1
  2803  019A  22F4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2804  019D  21F3  120A  118A   	fcall	___awmod
  2805  01A0  0873               	movf	?___awmod+1,w
  2806  01A1  00E3               	movwf	?___awdiv+3
  2807  01A2  0872               	movf	?___awmod,w
  2808  01A3  00E2               	movwf	?___awdiv+2
  2809  01A4  2249  120A  118A   	fcall	___awdiv
  2810  01A7  0860               	movf	?___awdiv,w
  2811  01A8  22ED               	fcall	PL2	;call to abstracted procedure
  2812  01A9  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2813  01AE  2230  120A  118A   	fcall	_lcddata
  2814                           
  2815                           ;Main.c: 64: lcddata(digit[Amnt%1000%100/10]);
  2816  01B1  300A               	movlw	10
  2817  01B2  00E0               	movwf	?___awdiv
  2818  01B3  01E1               	clrf	?___awdiv+1
  2819  01B4  22F4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2820  01B7  21F3  120A  118A   	fcall	___awmod
  2821  01BA  22FD  120A  118A   	fcall	PL5	;call to abstracted procedure
  2822  01BD  21F3  120A  118A   	fcall	___awmod
  2823  01C0  0873               	movf	?___awmod+1,w
  2824  01C1  00E3               	movwf	?___awdiv+3
  2825  01C2  0872               	movf	?___awmod,w
  2826  01C3  00E2               	movwf	?___awdiv+2
  2827  01C4  2249  120A  118A   	fcall	___awdiv
  2828  01C7  0860               	movf	?___awdiv,w
  2829  01C8  22ED               	fcall	PL2	;call to abstracted procedure
  2830  01C9  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2831  01CE  2230  120A  118A   	fcall	_lcddata
  2832                           
  2833                           ;Main.c: 65: lcddata(digit[Amnt%1000%100%10]);
  2834  01D1  22F4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2835  01D4  21F3  120A  118A   	fcall	___awmod
  2836  01D7  22FD  120A  118A   	fcall	PL5	;call to abstracted procedure
  2837  01DA  21F3  120A  118A   	fcall	___awmod
  2838  01DD  0873               	movf	?___awmod+1,w
  2839  01DE  00EC               	movwf	_DisplayAmnt$1039+1
  2840  01DF  0872               	movf	?___awmod,w
  2841  01E0  00EB               	movwf	_DisplayAmnt$1039
  2842                           
  2843                           ;Main.c: 65: lcddata(digit[Amnt%1000%100%10]);
  2844  01E1  300A               	movlw	10
  2845  01E2  00F2               	movwf	?___awmod
  2846  01E3  01F3               	clrf	?___awmod+1
  2847  01E4  086C               	movf	_DisplayAmnt$1039+1,w
  2848  01E5  00F5               	movwf	?___awmod+3
  2849  01E6  086B               	movf	_DisplayAmnt$1039,w
  2850  01E7  00F4               	movwf	?___awmod+2
  2851  01E8  21F3  120A  118A   	fcall	___awmod
  2852  01EB  0872               	movf	?___awmod,w
  2853  01EC  22ED               	fcall	PL2	;call to abstracted procedure
  2854  01ED  120A  118A  2700   	fcall	stringtab
      +       120A  118A         
  2855  01F2  2A30               	ljmp	_lcddata
  2856  01F3                     __end_of_DisplayAmnt:	
  2857  01F3                     __ptext764:	
  2858 ;; =============== function _enable ends ============
  2859                           
  2860                           
  2861 ;; *************** function ___awmod *****************
  2862 ;; Defined at:
  2863 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awmod.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  divisor         2    2[COMMON] int 
  2866 ;;  dividend        2    4[COMMON] int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  sign            1    7[COMMON] unsigned char 
  2869 ;;  counter         1    6[COMMON] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2    2[COMMON] int 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 60/0
  2876 ;;		On exit  : 60/0
  2877 ;;		Unchanged: FFF9F/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         4       0       0       0       0
  2880 ;;      Locals:         2       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0
  2882 ;;      Totals:         6       0       0       0       0
  2883 ;;Total ram usage:        6 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_DisplayAmnt
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892  01F3                     ___awmod:	
  2893                           
  2894                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2895  01F3  01F7               	clrf	___awmod@sign
  2896  01F4  1FF5               	btfss	___awmod@dividend+1,7
  2897  01F5  29FD               	goto	l2488
  2898  01F6  09F4               	comf	___awmod@dividend,f
  2899  01F7  09F5               	comf	___awmod@dividend+1,f
  2900  01F8  0AF4               	incf	___awmod@dividend,f
  2901  01F9  1903               	skipnz
  2902  01FA  0AF5               	incf	___awmod@dividend+1,f
  2903  01FB  01F7               	clrf	___awmod@sign
  2904  01FC  0AF7               	incf	___awmod@sign,f
  2905  01FD                     l2488:	
  2906  01FD  1FF3               	btfss	___awmod@divisor+1,7
  2907  01FE  2A04               	goto	l2492
  2908  01FF  09F2               	comf	___awmod@divisor,f
  2909  0200  09F3               	comf	___awmod@divisor+1,f
  2910  0201  0AF2               	incf	___awmod@divisor,f
  2911  0202  1903               	skipnz
  2912  0203  0AF3               	incf	___awmod@divisor+1,f
  2913  0204                     l2492:	
  2914  0204  0873               	movf	___awmod@divisor+1,w
  2915  0205  0472               	iorwf	___awmod@divisor,w
  2916  0206  1903               	skipnz
  2917  0207  2A23               	goto	l2508
  2918  0208  01F6               	clrf	___awmod@counter
  2919  0209                     L4:	
  2920  0209  0AF6               	incf	___awmod@counter,f
  2921  020A  1BF3               	btfsc	___awmod@divisor+1,7
  2922  020B  2A10               	goto	l2500
  2923  020C  1003               	clrc
  2924  020D  0DF2               	rlf	___awmod@divisor,f
  2925  020E  0DF3               	rlf	___awmod@divisor+1,f
  2926  020F  2A09               	goto	L4
  2927  0210                     l2500:	
  2928  0210  0873               	movf	___awmod@divisor+1,w
  2929  0211  0275               	subwf	___awmod@dividend+1,w
  2930  0212  1D03               	skipz
  2931  0213  2A16               	goto	u695
  2932  0214  0872               	movf	___awmod@divisor,w
  2933  0215  0274               	subwf	___awmod@dividend,w
  2934  0216                     u695:	
  2935  0216  1C03               	skipc
  2936  0217  2A1F               	goto	L5
  2937  0218  0872               	movf	___awmod@divisor,w
  2938  0219  02F4               	subwf	___awmod@dividend,f
  2939  021A  0873               	movf	___awmod@divisor+1,w
  2940  021B  1C03               	skipc
  2941  021C  03F5               	decf	___awmod@dividend+1,f
  2942  021D  02F5               	subwf	___awmod@dividend+1,f
  2943  021E  1003               	clrc
  2944  021F                     L5:	
  2945  021F  0CF3               	rrf	___awmod@divisor+1,f
  2946  0220  0CF2               	rrf	___awmod@divisor,f
  2947  0221  0BF6               	decfsz	___awmod@counter,f
  2948  0222  2A10               	goto	l2500
  2949  0223                     l2508:	
  2950  0223  0877               	movf	___awmod@sign,w
  2951  0224  1903               	btfsc	3,2
  2952  0225  2A2B               	goto	l2512
  2953  0226  09F4               	comf	___awmod@dividend,f
  2954  0227  09F5               	comf	___awmod@dividend+1,f
  2955  0228  0AF4               	incf	___awmod@dividend,f
  2956  0229  1903               	skipnz
  2957  022A  0AF5               	incf	___awmod@dividend+1,f
  2958  022B                     l2512:	
  2959  022B  0875               	movf	___awmod@dividend+1,w
  2960  022C  00F3               	movwf	?___awmod+1
  2961  022D  0874               	movf	___awmod@dividend,w
  2962  022E  00F2               	movwf	?___awmod
  2963  022F  0008               	return
  2964  0230                     __end_of___awmod:	
  2965  0230                     __ptext756:	
  2966 ;; =============== function _RFID_read ends ============
  2967                           
  2968                           
  2969 ;; *************** function _lcddata *****************
  2970 ;; Defined at:
  2971 ;;		line 51 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  a               1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  a               1    6[COMMON] unsigned char 
  2976 ;;  z               1    5[COMMON] unsigned char 
  2977 ;;  y               1    4[COMMON] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 60/0
  2984 ;;		On exit  : 60/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         3       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0
  2990 ;;      Totals:         3       0       0       0       0
  2991 ;;Total ram usage:        3 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		_lcdport
  2996 ;;		_enable
  2997 ;; This function is called by:
  2998 ;;		_lcdstring
  2999 ;;		_DisplayAmnt
  3000 ;;		_DisplaySugar
  3001 ;;		_DisplayRise
  3002 ;;		_DisplayKerosene
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005  0230                     _lcddata:	
  3006                           
  3007                           ; Regs used in _lcddata: [wreg+status,2+status,0+pclath+cstack]
  3008                           ;lcddata@a stored from wreg
  3009  0230  00F6               	movwf	lcddata@a
  3010                           
  3011                           ;lcd.c: 52: unsigned char y,z;
  3012                           ;lcd.c: 53: z=a>>4&0x0F;
  3013  0231  0E76               	swapf	lcddata@a,w
  3014  0232  390F               	andlw	15
  3015  0233  00F5               	movwf	lcddata@z
  3016  0234  300F               	movlw	15
  3017  0235  05F5               	andwf	lcddata@z,f
  3018                           
  3019                           ;lcd.c: 54: y=a&0x0F;
  3020  0236  0876               	movf	lcddata@a,w
  3021  0237  00F4               	movwf	lcddata@y
  3022  0238  300F               	movlw	15
  3023  0239  05F4               	andwf	lcddata@y,f
  3024                           
  3025                           ;lcd.c: 55: RD2=1;
  3026  023A  1508               	bsf	8,2
  3027                           
  3028                           ;lcd.c: 56: lcdport(z);
  3029  023B  0875               	movf	lcddata@z,w
  3030  023C  228E  120A  118A   	fcall	_lcdport
  3031                           
  3032                           ;lcd.c: 57: enable();
  3033  023F  22A8  120A  118A   	fcall	_enable
  3034                           
  3035                           ;lcd.c: 58: lcdport(y);
  3036  0242  0874               	movf	lcddata@y,w
  3037  0243  228E  120A  118A   	fcall	_lcdport
  3038                           
  3039                           ;lcd.c: 59: enable();
  3040  0246  22A8               	fcall	_enable
  3041                           
  3042                           ;lcd.c: 60: RD2 = 0;
  3043  0247  1108               	bcf	8,2
  3044  0248  0008               	return
  3045  0249                     __end_of_lcddata:	
  3046  0249                     __ptext765:	
  3047 ;; =============== function ___awmod ends ============
  3048                           
  3049                           
  3050 ;; *************** function ___awdiv *****************
  3051 ;; Defined at:
  3052 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  divisor         2    0[BANK0 ] int 
  3055 ;;  dividend        2    2[BANK0 ] int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  quotient        2    6[BANK0 ] int 
  3058 ;;  sign            1    5[BANK0 ] unsigned char 
  3059 ;;  counter         1    4[BANK0 ] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    0[BANK0 ] int 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 60/0
  3066 ;;		On exit  : 60/0
  3067 ;;		Unchanged: FFF9F/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       4       0       0       0
  3070 ;;      Locals:         0       4       0       0       0
  3071 ;;      Temps:          0       0       0       0       0
  3072 ;;      Totals:         0       8       0       0       0
  3073 ;;Total ram usage:        8 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_DisplayAmnt
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082  0249                     ___awdiv:	
  3083                           
  3084                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3085  0249  01E5               	clrf	___awdiv@sign
  3086  024A  1FE1               	btfss	___awdiv@divisor+1,7
  3087  024B  2A53               	goto	l2882
  3088  024C  09E0               	comf	___awdiv@divisor,f
  3089  024D  09E1               	comf	___awdiv@divisor+1,f
  3090  024E  0AE0               	incf	___awdiv@divisor,f
  3091  024F  1903               	skipnz
  3092  0250  0AE1               	incf	___awdiv@divisor+1,f
  3093  0251  01E5               	clrf	___awdiv@sign
  3094  0252  0AE5               	incf	___awdiv@sign,f
  3095  0253                     l2882:	
  3096  0253  1FE3               	btfss	___awdiv@dividend+1,7
  3097  0254  2A5C               	goto	l2888
  3098  0255  09E2               	comf	___awdiv@dividend,f
  3099  0256  09E3               	comf	___awdiv@dividend+1,f
  3100  0257  0AE2               	incf	___awdiv@dividend,f
  3101  0258  1903               	skipnz
  3102  0259  0AE3               	incf	___awdiv@dividend+1,f
  3103  025A  3001               	movlw	1
  3104  025B  06E5               	xorwf	___awdiv@sign,f
  3105  025C                     l2888:	
  3106  025C  01E6               	clrf	___awdiv@quotient
  3107  025D  01E7               	clrf	___awdiv@quotient+1
  3108  025E  0861               	movf	___awdiv@divisor+1,w
  3109  025F  0460               	iorwf	___awdiv@divisor,w
  3110  0260  1903               	skipnz
  3111  0261  2A81               	goto	l2910
  3112  0262  01E4               	clrf	___awdiv@counter
  3113  0263                     L6:	
  3114  0263  0AE4               	incf	___awdiv@counter,f
  3115  0264  1BE1               	btfsc	___awdiv@divisor+1,7
  3116  0265  2A6A               	goto	l2898
  3117  0266  1003               	clrc
  3118  0267  0DE0               	rlf	___awdiv@divisor,f
  3119  0268  0DE1               	rlf	___awdiv@divisor+1,f
  3120  0269  2A63               	goto	L6
  3121  026A                     l2898:	
  3122  026A  1003               	clrc
  3123  026B  0DE6               	rlf	___awdiv@quotient,f
  3124  026C  0DE7               	rlf	___awdiv@quotient+1,f
  3125  026D  0861               	movf	___awdiv@divisor+1,w
  3126  026E  0263               	subwf	___awdiv@dividend+1,w
  3127  026F  1D03               	skipz
  3128  0270  2A73               	goto	u895
  3129  0271  0860               	movf	___awdiv@divisor,w
  3130  0272  0262               	subwf	___awdiv@dividend,w
  3131  0273                     u895:	
  3132  0273  1C03               	skipc
  3133  0274  2A7D               	goto	L7
  3134  0275  0860               	movf	___awdiv@divisor,w
  3135  0276  02E2               	subwf	___awdiv@dividend,f
  3136  0277  0861               	movf	___awdiv@divisor+1,w
  3137  0278  1C03               	skipc
  3138  0279  03E3               	decf	___awdiv@dividend+1,f
  3139  027A  02E3               	subwf	___awdiv@dividend+1,f
  3140  027B  1466               	bsf	___awdiv@quotient,0
  3141  027C  1003               	clrc
  3142  027D                     L7:	
  3143  027D  0CE1               	rrf	___awdiv@divisor+1,f
  3144  027E  0CE0               	rrf	___awdiv@divisor,f
  3145  027F  0BE4               	decfsz	___awdiv@counter,f
  3146  0280  2A6A               	goto	l2898
  3147  0281                     l2910:	
  3148  0281  0865               	movf	___awdiv@sign,w
  3149  0282  1903               	btfsc	3,2
  3150  0283  2A89               	goto	l2914
  3151  0284  09E6               	comf	___awdiv@quotient,f
  3152  0285  09E7               	comf	___awdiv@quotient+1,f
  3153  0286  0AE6               	incf	___awdiv@quotient,f
  3154  0287  1903               	skipnz
  3155  0288  0AE7               	incf	___awdiv@quotient+1,f
  3156  0289                     l2914:	
  3157  0289  0867               	movf	___awdiv@quotient+1,w
  3158  028A  00E1               	movwf	?___awdiv+1
  3159  028B  0866               	movf	___awdiv@quotient,w
  3160  028C  00E0               	movwf	?___awdiv
  3161  028D  0008               	return
  3162  028E                     __end_of___awdiv:	
  3163  028E                     __ptext772:	
  3164 ;; =============== function _eeprom_read ends ============
  3165                           
  3166                           
  3167 ;; *************** function _lcdport *****************
  3168 ;; Defined at:
  3169 ;;		line 16 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  a               1    wreg     unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  a               1    2[COMMON] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 60/0
  3181 ;;		Unchanged: FFF9F/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0
  3186 ;;      Totals:         1       0       0       0       0
  3187 ;;Total ram usage:        1 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_lcdcmd
  3194 ;;		_lcddata
  3195 ;;		_lcd_init
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198  028E                     _lcdport:	
  3199                           
  3200                           ; Regs used in _lcdport: [wreg]
  3201                           ;lcdport@a stored from wreg
  3202  028E  00F2               	movwf	lcdport@a
  3203                           
  3204                           ;lcd.c: 17: if(a & 1)
  3205  028F  1C72               	btfss	lcdport@a,0
  3206  0290  2A95               	goto	l940
  3207                           
  3208                           ;lcd.c: 18: RD4 = 1;
  3209  0291  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0292  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0293  1608               	bsf	8,4
  3212  0294  2A98               	goto	l941
  3213  0295                     l940:	
  3214                           
  3215                           ;lcd.c: 19: else
  3216                           ;lcd.c: 20: RD4 = 0;
  3217  0295  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0296  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0297  1208               	bcf	8,4
  3220  0298                     l941:	
  3221                           
  3222                           ;lcd.c: 22: if(a & 2)
  3223  0298  1CF2               	btfss	lcdport@a,1
  3224  0299  2A9C               	goto	l942
  3225                           
  3226                           ;lcd.c: 23: RD5 = 1;
  3227  029A  1688               	bsf	8,5
  3228  029B  2A9D               	goto	l943
  3229  029C                     l942:	
  3230                           
  3231                           ;lcd.c: 24: else
  3232                           ;lcd.c: 25: RD5 = 0;
  3233  029C  1288               	bcf	8,5
  3234  029D                     l943:	
  3235                           
  3236                           ;lcd.c: 27: if(a & 4)
  3237  029D  1D72               	btfss	lcdport@a,2
  3238  029E  2AA1               	goto	l944
  3239                           
  3240                           ;lcd.c: 28: RD6 = 1;
  3241  029F  1708               	bsf	8,6
  3242  02A0  2AA2               	goto	l945
  3243  02A1                     l944:	
  3244                           
  3245                           ;lcd.c: 29: else
  3246                           ;lcd.c: 30: RD6 = 0;
  3247  02A1  1308               	bcf	8,6
  3248  02A2                     l945:	
  3249                           
  3250                           ;lcd.c: 32: if(a & 8)
  3251  02A2  1DF2               	btfss	lcdport@a,3
  3252  02A3  2AA6               	goto	l946
  3253                           
  3254                           ;lcd.c: 33: RD7 = 1;
  3255  02A4  1788               	bsf	8,7
  3256  02A5  0008               	return
  3257  02A6                     l946:	
  3258                           
  3259                           ;lcd.c: 34: else
  3260                           ;lcd.c: 35: RD7 = 0;
  3261  02A6  1388               	bcf	8,7
  3262  02A7  0008               	return
  3263  02A8                     __end_of_lcdport:	
  3264  02A8                     __ptext763:	
  3265 ;; =============== function _SoftWareUart_Init ends ============
  3266                           
  3267                           
  3268 ;; *************** function _enable *****************
  3269 ;; Defined at:
  3270 ;;		line 9 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;		None               void
  3277 ;; Registers used:
  3278 ;;		wreg
  3279 ;; Tracked objects:
  3280 ;;		On entry : 60/0
  3281 ;;		On exit  : 60/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0
  3286 ;;      Temps:          2       0       0       0       0
  3287 ;;      Totals:         2       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_lcdcmd
  3295 ;;		_lcddata
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298  02A8                     _enable:	
  3299  02A8                     l2516:	
  3300                           ; Regs used in _enable: [wreg]
  3301                           
  3302                           
  3303                           ;lcd.c: 10: RD3 = 1;
  3304  02A8  1588               	bsf	8,3
  3305                           
  3306                           ;lcd.c: 11: _delay((unsigned long)((4)*(20000000/4000.0)));
  3307  02A9  301A               	movlw	26
  3308  02AA  00F3               	movwf	??_enable+1
  3309  02AB  30F8               	movlw	248
  3310  02AC  00F2               	movwf	??_enable
  3311  02AD                     u1097:	
  3312  02AD  0BF2               	decfsz	??_enable,f
  3313  02AE  2AAD               	goto	u1097
  3314  02AF  0BF3               	decfsz	??_enable+1,f
  3315  02B0  2AAD               	goto	u1097
  3316  02B1  0064               	clrwdt
  3317                           
  3318                           ;lcd.c: 12: RD3 = 0;
  3319  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  3320  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  3321  02B4  1188               	bcf	8,3
  3322  02B5  0008               	return
  3323  02B6                     __end_of_enable:	
  3324  02B6                     __ptext767:	
  3325 ;; =============== function ___lbmod ends ============
  3326                           
  3327                           
  3328 ;; *************** function ___lbdiv *****************
  3329 ;; Defined at:
  3330 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbdiv.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  dividend        1    wreg     unsigned char 
  3333 ;;  divisor         1    2[COMMON] unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  dividend        1    3[COMMON] unsigned char 
  3336 ;;  quotient        1    5[COMMON] unsigned char 
  3337 ;;  counter         1    4[COMMON] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      unsigned char 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 60/0
  3344 ;;		On exit  : 60/0
  3345 ;;		Unchanged: FFF9F/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         1       0       0       0       0
  3348 ;;      Locals:         3       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         4       0       0       0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_DisplaySugar
  3358 ;;		_DisplayRise
  3359 ;;		_DisplayKerosene
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362  02B6                     ___lbdiv:	
  3363                           
  3364                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  3365                           ;___lbdiv@dividend stored from wreg
  3366  02B6  00F3               	movwf	___lbdiv@dividend
  3367  02B7  01F5               	clrf	___lbdiv@quotient
  3368  02B8  0872               	movf	___lbdiv@divisor,w
  3369  02B9  1903               	btfsc	3,2
  3370  02BA  2ACF               	goto	l2414
  3371  02BB  01F4               	clrf	___lbdiv@counter
  3372  02BC                     l2400:	
  3373  02BC  0AF4               	incf	___lbdiv@counter,f
  3374  02BD  1BF2               	btfsc	___lbdiv@divisor,7
  3375  02BE  2AC2               	goto	l1200
  3376  02BF  1003               	clrc
  3377  02C0  0DF2               	rlf	___lbdiv@divisor,f
  3378  02C1  2ABC               	goto	l2400
  3379  02C2                     l1200:	
  3380  02C2  1003               	clrc
  3381  02C3  0DF5               	rlf	___lbdiv@quotient,f
  3382  02C4  0872               	movf	___lbdiv@divisor,w
  3383  02C5  0273               	subwf	___lbdiv@dividend,w
  3384  02C6  1C03               	skipc
  3385  02C7  2ACC               	goto	L9
  3386  02C8  0872               	movf	___lbdiv@divisor,w
  3387  02C9  02F3               	subwf	___lbdiv@dividend,f
  3388  02CA  1475               	bsf	___lbdiv@quotient,0
  3389  02CB  1003               	clrc
  3390  02CC                     L9:	
  3391  02CC  0CF2               	rrf	___lbdiv@divisor,f
  3392  02CD  0BF4               	decfsz	___lbdiv@counter,f
  3393  02CE  2AC2               	goto	l1200
  3394  02CF                     l2414:	
  3395  02CF  0875               	movf	___lbdiv@quotient,w
  3396  02D0  0008               	return
  3397  02D1                     __end_of___lbdiv:	
  3398  02D1                     __ptext766:	
  3399 ;; =============== function ___awdiv ends ============
  3400                           
  3401                           
  3402 ;; *************** function ___lbmod *****************
  3403 ;; Defined at:
  3404 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbmod.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  dividend        1    wreg     unsigned char 
  3407 ;;  divisor         1    2[COMMON] unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  dividend        1    4[COMMON] unsigned char 
  3410 ;;  rem             1    6[COMMON] unsigned char 
  3411 ;;  counter         1    5[COMMON] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      unsigned char 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 60/0
  3418 ;;		On exit  : 60/0
  3419 ;;		Unchanged: FFF9F/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         1       0       0       0       0
  3422 ;;      Locals:         3       0       0       0       0
  3423 ;;      Temps:          1       0       0       0       0
  3424 ;;      Totals:         5       0       0       0       0
  3425 ;;Total ram usage:        5 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    1
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_DisplaySugar
  3432 ;;		_DisplayRise
  3433 ;;		_DisplayKerosene
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436  02D1                     ___lbmod:	
  3437                           
  3438                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3439                           ;___lbmod@dividend stored from wreg
  3440  02D1  00F4               	movwf	___lbmod@dividend
  3441  02D2  3008               	movlw	8
  3442  02D3  00F5               	movwf	___lbmod@counter
  3443  02D4  01F6               	clrf	___lbmod@rem
  3444  02D5                     l2422:	
  3445  02D5  0874               	movf	___lbmod@dividend,w
  3446  02D6  00F3               	movwf	??___lbmod
  3447  02D7  3007               	movlw	7
  3448  02D8  1003               	clrc
  3449  02D9                     L8:	
  3450  02D9  0CF3               	rrf	??___lbmod,f
  3451  02DA  3EFF               	addlw	-1
  3452  02DB  1003               	clrc
  3453  02DC  1D03               	skipz
  3454  02DD  2AD9               	goto	L8
  3455  02DE  0D76               	rlf	___lbmod@rem,w
  3456  02DF  0473               	iorwf	??___lbmod,w
  3457  02E0  00F6               	movwf	___lbmod@rem
  3458  02E1  1003               	clrc
  3459  02E2  0DF4               	rlf	___lbmod@dividend,f
  3460  02E3  0872               	movf	___lbmod@divisor,w
  3461  02E4  0276               	subwf	___lbmod@rem,w
  3462  02E5  1C03               	skipc
  3463  02E6  2AE9               	goto	l2430
  3464  02E7  0872               	movf	___lbmod@divisor,w
  3465  02E8  02F6               	subwf	___lbmod@rem,f
  3466  02E9                     l2430:	
  3467  02E9  0BF5               	decfsz	___lbmod@counter,f
  3468  02EA  2AD5               	goto	l2422
  3469  02EB  0876               	movf	___lbmod@rem,w
  3470  02EC  0008               	return
  3471  02ED                     __end_of___lbmod:	
  3472  02ED                     PL2:	
  3473  02ED  3E12               	addlw	low (_digit| (0+32768))
  3474  02EE  0084               	movwf	4
  3475  02EF  3087               	movlw	high (_digit| (0+32768))
  3476  02F0  1803               	skipnc
  3477  02F1  3E01               	addlw	1
  3478  02F2  00FF               	movwf	127
  3479  02F3  0008               	return
  3480  02F4                     PL3:	
  3481  02F4  0869               	movf	DisplayAmnt@Amnt+1,w
  3482  02F5  00F5               	movwf	?___awmod+3
  3483  02F6  0868               	movf	DisplayAmnt@Amnt,w
  3484  02F7  00F4               	movwf	?___awmod+2
  3485  02F8  30E8               	movlw	232
  3486  02F9  00F2               	movwf	?___awmod
  3487  02FA  3003               	movlw	3
  3488  02FB  00F3               	movwf	?___awmod+1
  3489  02FC  0008               	return
  3490  02FD                     PL5:	
  3491  02FD  0873               	movf	?___awmod+1,w
  3492  02FE  00F5               	movwf	?___awmod+3
  3493  02FF  0872               	movf	?___awmod,w
  3494  0300  00F4               	movwf	?___awmod+2
  3495  0301  3064               	movlw	100
  3496  0302  00F2               	movwf	?___awmod
  3497  0303  01F3               	clrf	?___awmod+1
  3498  0304  0008               	return
  3499                           
  3500                           	psect	text755
  3501  061B                     __ptext755:	
  3502 ;; =============== function _lcd_init ends ============
  3503                           
  3504                           
  3505 ;; *************** function _RFID_read *****************
  3506 ;; Defined at:
  3507 ;;		line 51 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  i               2    5[COMMON] int 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;		None               void
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       0       0       0
  3522 ;;      Locals:         2       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0
  3524 ;;      Totals:         2       0       0       0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    2
  3528 ;; This function calls:
  3529 ;;		_softreceive
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534  061B                     _RFID_read:	
  3535                           
  3536                           ;Main.c: 52: if(!rfid_flag)
  3537                           
  3538                           ; Regs used in _RFID_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3539  061B  1879               	btfsc	_rfid_flag/(0+8),_rfid_flag& (0+7)
  3540  061C  0008               	return
  3541                           
  3542                           ;Main.c: 53: {
  3543                           ;Main.c: 54: for(int i=0;i<12;i++)
  3544  061D  01F5               	clrf	RFID_read@i
  3545  061E  01F6               	clrf	RFID_read@i+1
  3546  061F                     l2596:	
  3547                           
  3548                           ;Main.c: 55: {card_store[i]=softreceive();}
  3549  061F  0875               	movf	RFID_read@i,w
  3550  0620  3E37               	addlw	_card_store& (0+255)
  3551  0621  0084               	movwf	4
  3552  0622  2637  120A  118A   	fcall	_softreceive
  3553  0625  1383               	bcf	3,7	;select IRP bank0
  3554  0626  0080               	movwf	0
  3555  0627  0AF5               	incf	RFID_read@i,f
  3556  0628  1903               	skipnz
  3557  0629  0AF6               	incf	RFID_read@i+1,f
  3558  062A  0876               	movf	RFID_read@i+1,w
  3559  062B  3A80               	xorlw	128
  3560  062C  00FF               	movwf	127
  3561  062D  3080               	movlw	128
  3562  062E  027F               	subwf	127,w
  3563  062F  1D03               	skipz
  3564  0630  2E33               	goto	u765
  3565  0631  300C               	movlw	12
  3566  0632  0275               	subwf	RFID_read@i,w
  3567  0633                     u765:	
  3568  0633  1C03               	skipc
  3569  0634  2E1F               	goto	l2596
  3570                           
  3571                           ;Main.c: 56: rfid_flag=1;
  3572  0635  1479               	bsf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  3573  0636  0008               	return
  3574  0637                     __end_of_RFID_read:	
  3575  0637                     __ptext761:	
  3576 ;; =============== function _ReadAmnt ends ============
  3577                           
  3578                           
  3579 ;; *************** function _softreceive *****************
  3580 ;; Defined at:
  3581 ;;		line 21 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  mask            1    4[COMMON] unsigned char 
  3586 ;;  Data            1    3[COMMON] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         2       0       0       0       0
  3598 ;;      Temps:          1       0       0       0       0
  3599 ;;      Totals:         3       0       0       0       0
  3600 ;;Total ram usage:        3 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_RFID_read
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609  0637                     _softreceive:	
  3610                           
  3611                           ;softuart.c: 22: char mask;
  3612                           ;softuart.c: 23: char Data;
  3613                           ;softuart.c: 24: Data=0;
  3614                           
  3615                           ; Regs used in _softreceive: [wreg+status,2+status,0]
  3616  0637  01F3               	clrf	softreceive@Data
  3617  0638                     l978:	
  3618                           ;softuart.c: 25: while(RD0);
  3619                           
  3620  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3622  063A  1808               	btfsc	8,0
  3623  063B  2E38               	goto	l978
  3624                           
  3625                           ;softuart.c: 26: _delay((unsigned long)(((((1000000/9600)-2)/2))*(20000000/4000000.0)));
  3626  063C  3054               	movlw	84
  3627  063D  00F2               	movwf	??_softreceive
  3628  063E                     u1057:	
  3629  063E  0BF2               	decfsz	??_softreceive,f
  3630  063F  2E3E               	goto	u1057
  3631  0640  2E41               	nop2	;nop
  3632                           
  3633                           ;softuart.c: 27: for(mask=0x01;mask!=0;mask=mask<<1)
  3634  0641  01F4               	clrf	softreceive@mask
  3635  0642  0AF4               	incf	softreceive@mask,f
  3636  0643                     l2536:	
  3637                           
  3638                           ;softuart.c: 28: {
  3639                           ;softuart.c: 29: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  3640  0643  30A9               	movlw	169
  3641  0644  00F2               	movwf	??_softreceive
  3642  0645                     u1067:	
  3643  0645  0BF2               	decfsz	??_softreceive,f
  3644  0646  2E45               	goto	u1067
  3645  0647  2E48               	nop2	;nop
  3646                           
  3647                           ;softuart.c: 30: if(RD0)Data=Data|mask;
  3648  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3650  064A  0874               	movf	softreceive@mask,w
  3651  064B  1808               	btfsc	8,0
  3652  064C  04F3               	iorwf	softreceive@Data,f
  3653  064D  1003               	clrc
  3654  064E  0DF4               	rlf	softreceive@mask,f
  3655  064F  08F4               	movf	softreceive@mask,f
  3656  0650  1D03               	skipz
  3657  0651  2E43               	goto	l2536
  3658                           
  3659                           ;softuart.c: 31: }
  3660                           ;softuart.c: 32: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  3661  0652  30A9               	movlw	169
  3662  0653  00F2               	movwf	??_softreceive
  3663  0654                     u1077:	
  3664  0654  0BF2               	decfsz	??_softreceive,f
  3665  0655  2E54               	goto	u1077
  3666  0656  2E57               	nop2	;nop
  3667                           
  3668                           ;softuart.c: 33: return Data;
  3669  0657  0873               	movf	softreceive@Data,w
  3670  0658  0008               	return
  3671  0659                     __end_of_softreceive:	
  3672                           
  3673                           	psect	text758
  3674  04D6                     __ptext758:	
  3675 ;; =============== function _lcdcmd ends ============
  3676                           
  3677                           
  3678 ;; *************** function _paramter *****************
  3679 ;; Defined at:
  3680 ;;		line 134 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 60/0
  3691 ;;		On exit  : 60/40
  3692 ;;		Unchanged: FFE00/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		_eeprom_read
  3703 ;;		___wmul
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708  04D6                     _paramter:	
  3709                           
  3710                           ;Main.c: 135: c1=(eeprom_read(0)*100)+eeprom_read(1);
  3711                           
  3712                           ; Regs used in _paramter: [wreg+status,2+status,0+pclath+cstack]
  3713  04D6  3000               	movlw	0
  3714  04D7  2589  120A  118A   	fcall	_eeprom_read
  3715  04DA  25BD  120A  118A   	fcall	PL4	;call to abstracted procedure
  3716  04DD  25A1  120A  118A   	fcall	___wmul
  3717  04E0  3001               	movlw	1
  3718  04E1  2589  120A  118A   	fcall	_eeprom_read
  3719                           
  3720                           ;Main.c: 136: c2=(eeprom_read(2)*100)+eeprom_read(3);
  3721  04E4  3002               	movlw	2
  3722  04E5  2589  120A  118A   	fcall	_eeprom_read
  3723  04E8  25BD  120A  118A   	fcall	PL4	;call to abstracted procedure
  3724  04EB  25A1  120A  118A   	fcall	___wmul
  3725  04EE  3003               	movlw	3
  3726  04EF  2D89               	ljmp	_eeprom_read
  3727  04F0                     __end_of_paramter:	
  3728  04F0                     __ptext759:	
  3729 ;; =============== function _paramter ends ============
  3730                           
  3731                           
  3732 ;; *************** function _ReadStock *****************
  3733 ;; Defined at:
  3734 ;;		line 85 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;		None               void
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 60/0
  3745 ;;		On exit  : 60/0
  3746 ;;		Unchanged: FFE00/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0
  3751 ;;      Totals:         0       0       0       0       0
  3752 ;;Total ram usage:        0 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    2
  3755 ;; This function calls:
  3756 ;;		_eeprom_read
  3757 ;;		___wmul
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762  04F0                     _ReadStock:	
  3763                           
  3764                           ;Main.c: 86: RiseStock=(eeprom_read(24)*100)+eeprom_read(25);
  3765                           
  3766                           ; Regs used in _ReadStock: [wreg+status,2+status,0+pclath+cstack]
  3767  04F0  3018               	movlw	24
  3768  04F1  2589  120A  118A   	fcall	_eeprom_read
  3769  04F4  25BD  120A  118A   	fcall	PL4	;call to abstracted procedure
  3770  04F7  25A1  120A  118A   	fcall	___wmul
  3771  04FA  0876               	movf	?___wmul+1,w
  3772  04FB  00A3               	movwf	_RiseStock+1
  3773  04FC  0875               	movf	?___wmul,w
  3774  04FD  00A2               	movwf	_RiseStock
  3775  04FE  3019               	movlw	25
  3776  04FF  2589  120A  118A   	fcall	_eeprom_read
  3777  0502  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0503  07A2               	addwf	_RiseStock,f
  3779  0504  1803               	skipnc
  3780  0505  0AA3               	incf	_RiseStock+1,f
  3781                           
  3782                           ;Main.c: 87: SugarStock=eeprom_read(26);
  3783  0506  301A               	movlw	26
  3784  0507  2589  120A  118A   	fcall	_eeprom_read
  3785  050A  1303               	bcf	3,6	;RP1=0, select bank0
  3786  050B  00A4               	movwf	_SugarStock
  3787  050C  01A5               	clrf	_SugarStock+1
  3788                           
  3789                           ;Main.c: 88: KeroseneStock=eeprom_read(27);
  3790  050D  301B               	movlw	27
  3791  050E  2589               	fcall	_eeprom_read
  3792  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0510  00A0               	movwf	_KeroseneStock
  3794  0511  01A1               	clrf	_KeroseneStock+1
  3795  0512  0008               	return
  3796  0513                     __end_of_ReadStock:	
  3797  0513                     __ptext760:	
  3798 ;; =============== function _ReadStock ends ============
  3799                           
  3800                           
  3801 ;; *************** function _ReadAmnt *****************
  3802 ;; Defined at:
  3803 ;;		line 69 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 160/0
  3814 ;;		On exit  : 60/0
  3815 ;;		Unchanged: FFE00/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    2
  3824 ;; This function calls:
  3825 ;;		_eeprom_read
  3826 ;;		___wmul
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831  0513                     _ReadAmnt:	
  3832                           
  3833                           ;Main.c: 70: User1amt=(eeprom_read(0)*100)+eeprom_read(1);
  3834                           
  3835                           ; Regs used in _ReadAmnt: [wreg+status,2+status,0+pclath+cstack]
  3836  0513  3000               	movlw	0
  3837  0514  2589  120A  118A   	fcall	_eeprom_read
  3838  0517  25BD  120A  118A   	fcall	PL4	;call to abstracted procedure
  3839  051A  25A1  120A  118A   	fcall	___wmul
  3840  051D  0876               	movf	?___wmul+1,w
  3841  051E  00A9               	movwf	_User1amt+1
  3842  051F  0875               	movf	?___wmul,w
  3843  0520  00A8               	movwf	_User1amt
  3844  0521  3001               	movlw	1
  3845  0522  2589  120A  118A   	fcall	_eeprom_read
  3846  0525  1303               	bcf	3,6	;RP1=0, select bank0
  3847  0526  07A8               	addwf	_User1amt,f
  3848  0527  1803               	skipnc
  3849  0528  0AA9               	incf	_User1amt+1,f
  3850                           
  3851                           ;Main.c: 71: User2amt=(eeprom_read(8)*100)+eeprom_read(15);
  3852  0529  3008               	movlw	8
  3853  052A  2589  120A  118A   	fcall	_eeprom_read
  3854  052D  25BD  120A  118A   	fcall	PL4	;call to abstracted procedure
  3855  0530  25A1  120A  118A   	fcall	___wmul
  3856  0533  0876               	movf	?___wmul+1,w
  3857  0534  00AB               	movwf	_User2amt+1
  3858  0535  0875               	movf	?___wmul,w
  3859  0536  00AA               	movwf	_User2amt
  3860  0537  300F               	movlw	15
  3861  0538  2589  120A  118A   	fcall	_eeprom_read
  3862  053B  1303               	bcf	3,6	;RP1=0, select bank0
  3863  053C  07AA               	addwf	_User2amt,f
  3864  053D  1803               	skipnc
  3865  053E  0AAB               	incf	_User2amt+1,f
  3866                           
  3867                           ;Main.c: 72: User3amt=(eeprom_read(16)*100)+eeprom_read(23);
  3868  053F  3010               	movlw	16
  3869  0540  2589  120A  118A   	fcall	_eeprom_read
  3870  0543  25BD  120A  118A   	fcall	PL4	;call to abstracted procedure
  3871  0546  25A1  120A  118A   	fcall	___wmul
  3872  0549  0876               	movf	?___wmul+1,w
  3873  054A  00AD               	movwf	_User3amt+1
  3874  054B  0875               	movf	?___wmul,w
  3875  054C  00AC               	movwf	_User3amt
  3876  054D  3017               	movlw	23
  3877  054E  2589  120A  118A   	fcall	_eeprom_read
  3878  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0552  07AC               	addwf	_User3amt,f
  3880  0553  1803               	skipnc
  3881  0554  0AAD               	incf	_User3amt+1,f
  3882                           
  3883                           ;Main.c: 73: User1Rise = eeprom_read(2);
  3884  0555  3002               	movlw	2
  3885  0556  2589  120A  118A   	fcall	_eeprom_read
  3886  0559  00FA               	movwf	_User1Rise
  3887                           
  3888                           ;Main.c: 74: User2Rise = eeprom_read(10);
  3889  055A  300A               	movlw	10
  3890  055B  2589  120A  118A   	fcall	_eeprom_read
  3891  055E  1303               	bcf	3,6	;RP1=0, select bank0
  3892  055F  00B1               	movwf	_User2Rise
  3893                           
  3894                           ;Main.c: 75: User3Rise = eeprom_read(18);
  3895  0560  3012               	movlw	18
  3896  0561  2589  120A  118A   	fcall	_eeprom_read
  3897  0564  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0565  00B4               	movwf	_User3Rise
  3899                           
  3900                           ;Main.c: 76: User1Kerosene = eeprom_read(4);
  3901  0566  3004               	movlw	4
  3902  0567  2589  120A  118A   	fcall	_eeprom_read
  3903  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3904  056B  00AE               	movwf	_User1Kerosene
  3905                           
  3906                           ;Main.c: 77: User2Kerosene = eeprom_read(12);
  3907  056C  300C               	movlw	12
  3908  056D  2589  120A  118A   	fcall	_eeprom_read
  3909  0570  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0571  00B0               	movwf	_User2Kerosene
  3911                           
  3912                           ;Main.c: 78: User3Kerosene = eeprom_read(20);
  3913  0572  3014               	movlw	20
  3914  0573  2589  120A  118A   	fcall	_eeprom_read
  3915  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0577  00B3               	movwf	_User3Kerosene
  3917                           
  3918                           ;Main.c: 79: User1Sugar = eeprom_read(3);
  3919  0578  3003               	movlw	3
  3920  0579  2589  120A  118A   	fcall	_eeprom_read
  3921  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3922  057D  00AF               	movwf	_User1Sugar
  3923                           
  3924                           ;Main.c: 80: User2Sugar = eeprom_read(11);
  3925  057E  300B               	movlw	11
  3926  057F  2589  120A  118A   	fcall	_eeprom_read
  3927  0582  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0583  00B2               	movwf	_User2Sugar
  3929                           
  3930                           ;Main.c: 81: User3Sugar = eeprom_read(19);
  3931  0584  3013               	movlw	19
  3932  0585  2589               	fcall	_eeprom_read
  3933  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0587  00B5               	movwf	_User3Sugar
  3935  0588  0008               	return
  3936  0589                     __end_of_ReadAmnt:	
  3937  0589                     __ptext771:	
  3938 ;; =============== function _uart_init ends ============
  3939                           
  3940                           
  3941 ;; *************** function _eeprom_read *****************
  3942 ;; Defined at:
  3943 ;;		line 8 in file "eeread.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  addr            1    wreg     unsigned char 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  addr            1    4[COMMON] unsigned char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      unsigned char 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 20/0
  3954 ;;		On exit  : 60/40
  3955 ;;		Unchanged: FFE00/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         0       0       0       0       0
  3958 ;;      Locals:         1       0       0       0       0
  3959 ;;      Temps:          2       0       0       0       0
  3960 ;;      Totals:         3       0       0       0       0
  3961 ;;Total ram usage:        3 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_ReadAmnt
  3968 ;;		_ReadStock
  3969 ;;		_paramter
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972  0589                     _eeprom_read:	
  3973                           
  3974                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3975                           ;eeprom_read@addr stored from wreg
  3976  0589  00F4               	movwf	eeprom_read@addr
  3977  058A                     l1151:	
  3978  058A  0064               	clrwdt	;#
  3979  058B  1683               	bsf	3,5	;RP0=1, select bank3
  3980  058C  1703               	bsf	3,6	;RP1=1, select bank3
  3981  058D  188C               	btfsc	12,1
  3982  058E  2D8A               	goto	l1151
  3983  058F  0874               	movf	eeprom_read@addr,w
  3984  0590  1283               	bcf	3,5	;RP0=0, select bank2
  3985  0591  008D               	movwf	13	;volatile
  3986  0592  303F               	movlw	63
  3987  0593  1683               	bsf	3,5	;RP0=1, select bank3
  3988  0594  058C               	andwf	12,f	;volatile
  3989  0595  140C               	bsf	12,0
  3990  0596  1003               	clrc
  3991  0597  180C               	btfsc	12,0
  3992  0598  1403               	setc
  3993  0599  3000               	movlw	0
  3994  059A  1803               	skipnc
  3995  059B  3001               	movlw	1
  3996  059C  00F2               	movwf	??_eeprom_read
  3997  059D  01F3               	clrf	??_eeprom_read+1
  3998  059E  1283               	bcf	3,5	;RP0=0, select bank2
  3999  059F  080C               	movf	12,w	;volatile
  4000  05A0  0008               	return
  4001  05A1                     __end_of_eeprom_read:	
  4002  05A1                     __ptext768:	
  4003 ;; =============== function ___lbdiv ends ============
  4004                           
  4005                           
  4006 ;; *************** function ___wmul *****************
  4007 ;; Defined at:
  4008 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  multiplier      2    5[COMMON] unsigned int 
  4011 ;;  multiplicand    2    7[COMMON] unsigned int 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  product         2    0[BANK0 ] unsigned int 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2    5[COMMON] unsigned int 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 60/40
  4020 ;;		On exit  : 60/0
  4021 ;;		Unchanged: FFF9F/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         4       0       0       0       0
  4024 ;;      Locals:         0       2       0       0       0
  4025 ;;      Temps:          0       0       0       0       0
  4026 ;;      Totals:         4       2       0       0       0
  4027 ;;Total ram usage:        6 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_ReadAmnt
  4034 ;;		_ReadStock
  4035 ;;		_paramter
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038  05A1                     ___wmul:	
  4039                           
  4040                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4041  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  4042  05A2  01E0               	clrf	___wmul@product
  4043  05A3  01E1               	clrf	___wmul@product+1
  4044  05A4                     l2860:	
  4045  05A4  1C75               	btfss	___wmul@multiplier,0
  4046  05A5  2DAD               	goto	l2864
  4047  05A6  0877               	movf	___wmul@multiplicand,w
  4048  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  4049  05A8  07E0               	addwf	___wmul@product,f
  4050  05A9  1803               	skipnc
  4051  05AA  0AE1               	incf	___wmul@product+1,f
  4052  05AB  0878               	movf	___wmul@multiplicand+1,w
  4053  05AC  07E1               	addwf	___wmul@product+1,f
  4054  05AD                     l2864:	
  4055  05AD  1003               	clrc
  4056  05AE  0DF7               	rlf	___wmul@multiplicand,f
  4057  05AF  0DF8               	rlf	___wmul@multiplicand+1,f
  4058  05B0  1003               	clrc
  4059  05B1  0CF6               	rrf	___wmul@multiplier+1,f
  4060  05B2  0CF5               	rrf	___wmul@multiplier,f
  4061  05B3  0876               	movf	___wmul@multiplier+1,w
  4062  05B4  0475               	iorwf	___wmul@multiplier,w
  4063  05B5  1D03               	skipz
  4064  05B6  2DA4               	goto	l2860
  4065  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  4066  05B8  0861               	movf	___wmul@product+1,w
  4067  05B9  00F6               	movwf	?___wmul+1
  4068  05BA  0860               	movf	___wmul@product,w
  4069  05BB  00F5               	movwf	?___wmul
  4070  05BC  0008               	return
  4071  05BD                     __end_of___wmul:	
  4072  05BD                     PL4:	
  4073  05BD  00F5               	movwf	?___wmul
  4074  05BE  01F6               	clrf	?___wmul+1
  4075  05BF  3064               	movlw	100
  4076  05C0  00F7               	movwf	?___wmul+2
  4077  05C1  01F8               	clrf	?___wmul+3
  4078  05C2  0008               	return
  4079                           
  4080                           	psect	text762
  4081  0687                     __ptext762:	
  4082 ;; =============== function _softreceive ends ============
  4083                           
  4084                           
  4085 ;; *************** function _SoftWareUart_Init *****************
  4086 ;; Defined at:
  4087 ;;		line 10 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;		None               void
  4094 ;; Registers used:
  4095 ;;		wreg
  4096 ;; Tracked objects:
  4097 ;;		On entry : 60/40
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         0       0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0
  4103 ;;      Temps:          1       0       0       0       0
  4104 ;;      Totals:         1       0       0       0       0
  4105 ;;Total ram usage:        1 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114  0687                     _SoftWareUart_Init:	
  4115                           
  4116                           ;softuart.c: 11: RD1=1;
  4117                           
  4118                           ; Regs used in _SoftWareUart_Init: [wreg]
  4119  0687  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0688  1488               	bsf	8,1
  4121                           
  4122                           ;softuart.c: 12: RD0=1;
  4123  0689  1408               	bsf	8,0
  4124                           
  4125                           ;softuart.c: 13: TRISD1=0;
  4126  068A  1683               	bsf	3,5	;RP0=1, select bank1
  4127  068B  1088               	bcf	8,1
  4128                           
  4129                           ;softuart.c: 14: TRISD0=1;
  4130  068C  1408               	bsf	8,0
  4131                           
  4132                           ;softuart.c: 15: RD1=1;
  4133  068D  1283               	bcf	3,5	;RP0=0, select bank0
  4134  068E  1488               	bsf	8,1
  4135                           
  4136                           ;softuart.c: 16: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  4137  068F  30A9               	movlw	169
  4138  0690  00F2               	movwf	??_SoftWareUart_Init
  4139  0691                     u1087:	
  4140  0691  0BF2               	decfsz	??_SoftWareUart_Init,f
  4141  0692  2E91               	goto	u1087
  4142  0693  2E94               	nop2	;nop
  4143  0694  0008               	return
  4144  0695                     __end_of_SoftWareUart_Init:	
  4145                           
  4146                           	psect	text769
  4147  0659                     __ptext769:	
  4148 ;; =============== function ___wmul ends ============
  4149                           
  4150                           
  4151 ;; *************** function _strcmp *****************
  4152 ;; Defined at:
  4153 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strcmp.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  s1              1    wreg     PTR const unsigned char 
  4156 ;;		 -> card_store(15), 
  4157 ;;  s2              1    2[COMMON] PTR const unsigned char 
  4158 ;;		 -> User3(13), User2(13), User1(13), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  s1              1    7[COMMON] PTR const unsigned char 
  4161 ;;		 -> card_store(15), 
  4162 ;;  r               1    6[COMMON] char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    2[COMMON] int 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 100/0
  4170 ;;		Unchanged: FFEFF/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         2       0       0       0       0
  4173 ;;      Locals:         2       0       0       0       0
  4174 ;;      Temps:          2       0       0       0       0
  4175 ;;      Totals:         6       0       0       0       0
  4176 ;;Total ram usage:        6 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    1
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185  0659                     _strcmp:	
  4186                           
  4187                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  4188                           ;strcmp@s1 stored from wreg
  4189  0659  00F7               	movwf	strcmp@s1
  4190  065A  2E61               	goto	l2370
  4191  065B                     l2372:	
  4192  065B  0877               	movf	strcmp@s1,w
  4193  065C  0AF7               	incf	strcmp@s1,f
  4194  065D  0084               	movwf	4
  4195  065E  0880               	movf	0,f
  4196  065F  1903               	btfsc	3,2
  4197  0660  2E71               	goto	l2374
  4198  0661                     l2370:	
  4199  0661  0872               	movf	strcmp@s2,w
  4200  0662  0AF2               	incf	strcmp@s2,f
  4201  0663  0084               	movwf	4
  4202  0664  1383               	bcf	3,7	;select IRP bank0
  4203  0665  0800               	movf	0,w
  4204  0666  00F4               	movwf	??_strcmp
  4205  0667  0877               	movf	strcmp@s1,w
  4206  0668  0084               	movwf	4
  4207  0669  0800               	movf	0,w
  4208  066A  00F5               	movwf	??_strcmp+1
  4209  066B  0874               	movf	??_strcmp,w
  4210  066C  0275               	subwf	??_strcmp+1,w
  4211  066D  00F6               	movwf	strcmp@r
  4212  066E  08F6               	movf	strcmp@r,f
  4213  066F  1903               	btfsc	3,2
  4214  0670  2E5B               	goto	l2372
  4215  0671                     l2374:	
  4216  0671  0876               	movf	strcmp@r,w
  4217  0672  00F2               	movwf	?_strcmp
  4218  0673  01F3               	clrf	?_strcmp+1
  4219  0674  1BF2               	btfsc	?_strcmp,7
  4220  0675  03F3               	decf	?_strcmp+1,f
  4221  0676  0008               	return
  4222  0677                     __end_of_strcmp:	
  4223                           
  4224                           	psect	text770
  4225  0677                     __ptext770:	
  4226 ;; =============== function _strcmp ends ============
  4227                           
  4228                           
  4229 ;; *************** function _uart_init *****************
  4230 ;; Defined at:
  4231 ;;		line 125 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, status,2
  4240 ;; Tracked objects:
  4241 ;;		On entry : 17F/0
  4242 ;;		On exit  : 17F/0
  4243 ;;		Unchanged: FFE80/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258  0677                     _uart_init:	
  4259                           
  4260                           ;Main.c: 126: PORTC=0xFF;
  4261                           
  4262                           ; Regs used in _uart_init: [wreg+status,2]
  4263  0677  30FF               	movlw	255
  4264  0678  0087               	movwf	7	;volatile
  4265                           
  4266                           ;Main.c: 127: TRISC=0x80;
  4267  0679  3080               	movlw	128
  4268  067A  1683               	bsf	3,5	;RP0=1, select bank1
  4269  067B  0087               	movwf	7	;volatile
  4270                           
  4271                           ;Main.c: 128: TXSTA=0X24;
  4272  067C  3024               	movlw	36
  4273  067D  0098               	movwf	24	;volatile
  4274                           
  4275                           ;Main.c: 129: RCSTA=0X90;
  4276  067E  3090               	movlw	144
  4277  067F  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0680  0098               	movwf	24	;volatile
  4279                           
  4280                           ;Main.c: 130: SPBRG=129;
  4281  0681  3081               	movlw	129
  4282  0682  1683               	bsf	3,5	;RP0=1, select bank1
  4283  0683  0099               	movwf	25	;volatile
  4284                           
  4285                           ;Main.c: 131: RCREG=0;
  4286  0684  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0685  019A               	clrf	26	;volatile
  4288  0686  0008               	return
  4289  0687                     __end_of_uart_init:	
  4290                           
  4291                           	psect	text773
  4292  069D                     __ptext773:	
  4293 ;; =============== function _lcdport ends ============
  4294                           
  4295                           
  4296 ;; *************** function _ISR *****************
  4297 ;; Defined at:
  4298 ;;		line 47 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;		None               void
  4305 ;; Registers used:
  4306 ;;		None
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: FFFFF/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4312 ;;      Params:         0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0
  4314 ;;      Temps:          2       0       0       0       0
  4315 ;;      Totals:         2       0       0       0       0
  4316 ;;Total ram usage:        2 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		Interrupt level 1
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324  069D                     _ISR:	
  4325  069D  0871               	movf	??_ISR+1,w
  4326  069E  008A               	movwf	10
  4327  069F  0870               	movf	??_ISR,w
  4328  06A0  0083               	movwf	3
  4329  06A1  0EFE               	swapf	126,f
  4330  06A2  0E7E               	swapf	126,w
  4331  06A3  0009               	retfie
  4332  06A4                     __end_of_ISR:	
  4333                           
  4334                           	psect	intentry
  4335  0004                     __pintentry:	
  4336                           ; Regs used in _ISR: []
  4337                           
  4338  0004                     interrupt_function:	
  4339  007E                     saved_w	set	btemp
  4340  0004  00FE               	movwf	btemp
  4341  0005  0803               	movf	3,w
  4342  0006  00F0               	movwf	??_ISR
  4343  0007  080A               	movf	10,w
  4344  0008  00F1               	movwf	??_ISR+1
  4345  0009  120A  118A  2E9D   	ljmp	_ISR
  4346                           
  4347                           	psect	text774
  4348  0000                     __ptext774:	
  4349 ;; =============== function _ISR ends ============
  4350                           
  4351  007E                     btemp	set	126	;btemp
  4352  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Fri Mar 04 00:19:48 2016

                         pc 0002                 _softreceive 0637                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 0065                          fsr 0004  
       ___wmul@multiplicand 0077                         l940 0295                         l941 0298  
                       l942 029C                         l943 029D                         l951 0000  
                       l944 02A1                         l960 0000                         l945 02A2  
                       l937 0000                         l946 02A6                         l954 0000  
                       l966 0000                         l975 0000                         l984 0000  
                       l978 0638                         _RC0 0038                         _RC1 0039  
                       _RD0 0040                         _RD1 0041                         _RD2 0042  
                       _RD3 0043                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _ISR 069D  
                       u765 0633                         u695 0216                         u895 0273  
                       u977 034E                         u987 04CE                         u997 00CD  
                       fsr0 0004                         indf 0000                ___awmod@sign 0077  
 __end_of_SoftWareUart_Init 0695                        ?_ISR 0070                        l1102 0000  
                      l1111 0000                        l1200 02C2                        l1120 0000  
                      l1105 0000                        l1114 0000                        l1203 0000  
                      l1108 0000                        l1117 0000                        l1151 058A  
                      l1320 0000                        l3000 0000                        l1153 0000  
                      l1161 0000                        l1209 0000                        l3020 0000  
                      l3012 037B                        l1173 0000                        l1093 0000  
                      l3030 0000                        l3022 0000                        l3006 036D  
                      l2400 02BC                        l1096 0000                        l3040 0000  
                      l3032 0000                        l3024 0000                        l3050 0000  
                      l3042 0000                        l3034 0000                        l3026 0000  
                      l3018 038C                        l1099 0000                        l2412 0000  
                      l2404 0000                        l2420 0000                        l2500 0210  
                      l3060 0000                        l3052 0000                        l3044 0000  
                      l3028 0000                        l2350 0000                        l2414 02CF  
                      l2430 02E9                        l2422 02D5                        l2510 0000  
                      l3070 0000                        l3062 0000                        l3054 0000  
                      l3046 0000                        l3038 03F2                        l2408 0000  
                      l2432 0000                        l2424 0000                        l2512 022B  
                      l2520 0000                        l2600 0000                        l3072 0000  
                      l3064 0000                        l3048 0000                        l3080 04AC  
                      l2370 0661                        l2426 0000                        l2418 0000  
                      l2506 0000                        l2522 0000                        l2530 0000  
                      l2610 0000                        l2602 0000                        l3074 0000  
                      l3066 0000                        l3058 044F                        l3082 04BC  
                      l2364 0000                        l2372 065B                        l1388 0000  
                      l2508 0223                        l2516 02A8                        l2524 0000  
                      l2604 0000                        l2612 0000                        l3084 0000  
                      l3068 0000                        l2366 0000                        l2374 0671  
                      l2518 0000                        l2526 0000                        l2606 0000  
                      l2630 0000                        l2368 0000                        l2480 0000  
                      l2544 0000                        l2536 0643                        l2560 0000  
                      l2608 0000                        l2616 0000                        l2632 0000  
                      l2640 0000                        l3088 04C8                        l2394 0000  
                      l2482 0000                        l2538 0000                        l2562 0000  
                      l2570 0000                        l2618 0162                        l2634 0000  
                      l2642 0000                        l2396 0000                        l2900 0000  
                      l2492 0204                        l2564 0000                        l2556 0000  
                      l2580 0000                        l2572 0000                        l2636 0000  
                      l2644 0000                        l2398 0000                        l2910 0281  
                      l2486 0000                        l2566 0000                        l2558 0000  
                      l2582 0000                        l2574 0000                        l2638 0000  
                      l2646 0000                        l2912 0000                        l2904 0000  
                      l2488 01FD                        l2920 0000                        l2568 0000  
                      l2584 0000                        l2576 0000                        l2914 0289  
                      l2922 0000                        l2586 0000                        l2578 0000  
                      l2930 0000                        l2860 05A4                        l2908 0000  
                      l2596 061F                        l2588 0000                        l2932 0000  
                      l2924 0000                        l2940 0000                        l2918 0000  
                      l2598 0000                        l2926 0000                        l2942 0000  
                      l2934 0000                        l2950 0000                        l2864 05AD  
                      l2880 0000                        l2928 0000                        l2944 0000  
                      l2936 0000                        l2960 0000                        l2952 0000  
                      l2866 0000                        l2858 0000                        l2890 0000  
                      l2882 0253                        l2874 0000                        l2946 0000  
                      l2938 0000                        l2962 0000                        l2954 0000  
                      l2970 0000                        l2868 0000                        l2876 0000  
                      l2964 0000                        l2956 0000                        l2948 0000  
                      l2980 0000                        l2972 0000                        l2886 0000  
                      l2966 0000                        l2958 0000                        l2990 0000  
                      l2982 0000                        l2974 0000                        l2888 025C  
                      l2992 0000                        l2984 0000                        l2976 0000  
                      l2968 0000                        l2898 026A                        l2994 0000  
                      l2986 032C                        l2978 0000                        l2996 0000  
                      l2998 0355                        STR_1 08E9                        STR_2 08D8  
                      STR_3 0924                        STR_4 0910                        STR_5 0905  
                      STR_6 08FA                        STR_7 087D                        STR_8 091A  
                      STR_9 0755                        u1007 00DD                        u1017 0100  
                      u1027 010F                        u1037 011C                        u1047 0129  
                      u1057 063E                        u1067 0645                        u1077 0654  
                      u1087 0691                        u1097 02AD                        _User 0026  
                      _main 0305                        btemp 007E                        start 000C  
                     ??_ISR 0070         __end_of_DisplayAmnt 01F3         __end_of_DisplayRise 004F  
        __size_of_RFID_read 001C                       ?_main 0070             __end_of___awdiv 028E  
           __end_of___lbdiv 02D1                       _EEADR 010D                       STR_10 073A  
                     STR_20 0802                       STR_12 071D                       STR_21 076D  
                     STR_14 0841                       STR_30 0799                       STR_22 0783  
                     STR_23 08C6                       STR_31 07AE                       STR_40 0817  
                     STR_24 08A2                       STR_16 0855                       STR_32 0817  
                     STR_25 08B4                       STR_33 07D8                       STR_34 0799  
                     STR_26 0890                       STR_18 0869                       STR_35 07AE  
                     STR_27 08B4                       STR_19 082C                       STR_28 0890  
                     STR_36 0817             __end_of___awmod 0230                       STR_37 07ED  
                     STR_29 07C3                       STR_38 0799                       STR_39 07AE  
           __end_of___lbmod 02ED                       _ANSEL 0188             ___awdiv@divisor 0060  
           ___awdiv@counter 0064                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099                       _PORTC 0007                       _PORTD 0008  
                     _TRISC 0087                       _TRISD 0088                       _TXSTA 0098  
                     _User1 0046                       _User2 0053                       _User3 00A0  
           __end_of_lcddata 0249             __end_of_lcdport 02A8                       _digit 0712  
            __pbitbssCOMMON 03C8                       pclath 000A                       status 0003  
           __end_of_startup 0107                       wtemp0 007E             ___lbdiv@divisor 0072  
           ___lbdiv@counter 0074                __end_of_main 04D6            __end_of_ReadAmnt 0589  
                    ??_main 006D               _KeroseneStock 0020  __size_of_SoftWareUart_Init 000E  
      __end_of_DisplaySugar 006F        __end_of_DisplayStock 00B1                      _EEDATA 010C  
                    _EECON1 018C            ___awdiv@dividend 0062                      _ANSELH 0189  
                    i1l1084 0000           __end_of_RFID_read 0637                      _TRISD0 0440  
                    _TRISD1 0441          __size_of_ReadStock 0023        __size_of_eeprom_read 0018  
               _DisplayAmnt 017E            __end_of_lcd_init 014C                 _DisplayRise 002F  
                    ___wmul 05A1                   ??___awdiv 0078                   ??___lbdiv 0073  
                 ??___awmod 0076                   ??___lbmod 0073                      _enable 02A8  
                    _lcdcmd 014C            ___awdiv@quotient 0066             ___awmod@divisor 0072  
          __end_of_paramter 04F0             ___awmod@counter 0076             _DisplayKerosene 000F  
                 ??_lcddata 0074                      _strcmp 0659                      clrloop 0696  
                 ??_lcdport 0072                  _User1Sugar 002F                  _User2Sugar 0032  
                _User3Sugar 0035                      saved_w 007E                  _SugarStock 0024  
                 ??_startup 0060            ___lbdiv@dividend 0073             ___lbmod@divisor 0072  
         DisplaySugar@Sugar 0077             ___lbmod@counter 0075             eeprom_read@addr 0074  
            __pcstackCOMMON 0070                __pidataBANK0 0000                __pidataBANK1 0000  
              ?_softreceive 0070            ___lbdiv@quotient 0075           __end_of_ReadStock 0513  
           softreceive@Data 0073             softreceive@mask 0074                  __pbssBANK0 0020  
                _card_store 0037          __size_of_lcdstring 001C                   ?_ReadAmnt 0070  
                __pmaintext 0305     __end_of_DisplayKerosene 002F                     ?___wmul 0075  
                __pintentry 0004                     ?_enable 0070                     ?_lcdcmd 0070  
                   ?_strcmp 0072       __size_of_DisplaySugar 0020       __size_of_DisplayStock 0042  
        __size_of_uart_init 0010                   ?_lcd_init 0070            _DisplayAmnt$1039 006B  
                ??_ReadAmnt 0079                   ?_paramter 0070                _DisplaySugar 004F  
              _DisplayStock 006F                     ___awdiv 0249                     ___lbdiv 02B6  
                   ___awmod 01F3                     ___lbmod 02D1             __size_of___wmul 001C  
           __size_of_enable 000E             __size_of_lcdcmd 0016           __end_of_lcdstring 017E  
                   _lcddata 0230             __size_of_strcmp 001E                __size_of_ISR 0007  
                   _lcdport 028E            ___awmod@dividend 0074                     lcdcmd@a 0076  
                   lcdcmd@y 0074                     lcdcmd@z 0075                     _startup 00B1  
                ??_lcd_init 0077        end_of_initialization 0617                  ??_paramter 0079  
         __end_of_uart_init 0687                   _RFID_read 061B                ?_DisplayAmnt 0068  
              ?_DisplayRise 0077            ?_DisplayKerosene 0077             DisplayAmnt@Amnt 0068  
              __pstringtext 0700                     strcmp@r 0076        __size_of_softreceive 0022  
          ___lbmod@dividend 0074                 ___lbmod@rem 0076               ??_eeprom_read 0072  
                ?_RFID_read 0070             DisplayRise@Rise 0077              __end_of___wmul 05BD  
            __end_of_enable 02B6              __end_of_lcdcmd 0162            _delayus_variable 0036  
            __end_of_strcmp 0677         start_initialization 05C3                 __end_of_ISR 06A4  
                lcdstring@a 0077                   _ReadStock 04F0           __size_of_ReadAmnt 0076  
       DisplayRise@Location 0078                   _RiseStock 0022                    ??___wmul 0079  
       __end_of_eeprom_read 05A1                    ??_enable 0072                    ??_lcdcmd 0074  
               __pdataBANK0 0046                 __pdataBANK1 00A0                   _User1Rise 007A  
                 _User2Rise 0031                   _User3Rise 0034                    ??_strcmp 0074  
       DisplayAmnt@Location 006A                 __pbssCOMMON 007A               __pcstackBANK0 0060  
                ?_ReadStock 0070                  RFID_read@i 0075           __size_of_lcd_init 0045  
               ??_RFID_read 0075           __size_of_paramter 001A                    ?___awdiv 0060  
                  ?___lbdiv 0072                    ?___awmod 0072                    ?___lbmod 0072  
                 __ptext750 002F                   __ptext751 004F                   __ptext760 0513  
                 __ptext752 017E                   __ptext761 0637                   __ptext753 0162  
                 __ptext770 0677                   __ptext762 0687                   __ptext754 0107  
                 __ptext771 0589                   __ptext763 02A8                   __ptext755 061B  
                 __ptext747 00B1                   __ptext772 028E                   __ptext764 01F3  
                 __ptext756 0230                   __ptext748 006F                   __ptext773 069D  
                 __ptext765 0249                   __ptext757 014C                   __ptext749 000F  
                 __ptext774 0000                   __ptext766 02D1                   __ptext758 04D6  
                 __ptext767 02B6                   __ptext759 04F0                   __ptext768 05A1  
                 __ptext769 0659        __size_of_DisplayAmnt 0075        __size_of_DisplayRise 0020  
                  ?_lcddata 0070                    ?_lcdport 0070                   _lcdstring 0162  
                  ?_startup 0070           interrupt_function 0004                   _rfid_flag 03C8  
            ___wmul@product 0060                 _eeprom_read 0589                   _uart_init 0677  
               __stringbase 0712           ___wmul@multiplier 0075                  ?_lcdstring 0077  
               ??_ReadStock 0079               _User1Kerosene 002E                    _ReadAmnt 0513  
             _User2Kerosene 0030               _User3Kerosene 0033               ??_softreceive 0072  
                ?_uart_init 0070                    _User1amt 0028                    _User2amt 002A  
                  _User3amt 002C            __size_of___awdiv 0045            __size_of___lbdiv 001B  
          __size_of___awmod 003D            __size_of___lbmod 001C    __size_of_DisplayKerosene 0020  
          __size_of_lcddata 0019            __size_of_lcdport 001A                    _lcd_init 0107  
          __size_of_startup 0056               __size_of_main 01D1                    _paramter 04D6  
                  clear_ram 0695                    lcddata@a 0076                    lcddata@y 0074  
                  lcddata@z 0075                    lcdport@a 0072         __end_of_softreceive 0659  
               ??_lcdstring 0079                    intlevel1 0000                   stringcode 070A  
             ?_DisplaySugar 0077               ?_DisplayStock 0070                 ??_uart_init 0072  
                  strcmp@s1 0077                    strcmp@s2 0072                    stringtab 0700  
         _SoftWareUart_Init 0687           ??_DisplayKerosene 0078        DisplaySugar@Location 0078  
        ?_SoftWareUart_Init 0070                ?_eeprom_read 0070     DisplayKerosene@Kerosene 0077  
   DisplayKerosene@Location 0078               ??_DisplayAmnt 0078         ??_SoftWareUart_Init 0072  
             ??_DisplayRise 0078              ??_DisplaySugar 0078              ??_DisplayStock 0079  
