

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Fri Mar 04 02:23:16 2016

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text1127,local,class=CODE,delta=2
    20                           	psect	text1128,local,class=CODE,delta=2
    21                           	psect	text1134,local,class=CODE,delta=2
    22                           	psect	text1138,local,class=CODE,delta=2
    23                           	psect	text1143,local,class=CODE,delta=2
    24                           	psect	text1153,local,class=CODE,delta=2
    25                           	psect	text1154,local,class=CODE,delta=2
    26                           	psect	text1155,local,class=CODE,delta=2
    27                           	psect	text1161,local,class=CODE,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text1164,local,class=CODE,delta=2
    30                           	psect	pa_nodes,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  000A                     	;#
    33                           
    34                           	psect	config
    35  2007  2CE2               	dw	11490	;#
    36                           
    37                           	psect	eeprom_data
    38  0000  000A 0000 0032     	db	10,0,50,10,8,0,0,0	;#
      +       000A 0008 0000     
      +       0000 0000          
    39  0008  000A 0000 001E     	db	10,0,30,8,6,0,0,0	;#
      +       0008 0006 0000     
      +       0000 0000          
    40  0010  000A 0000 0014     	db	10,0,20,4,5,0,0,0	;#
      +       0004 0005 0000     
      +       0000 0000          
    41  0018  000A 0000 00FF     	db	10,0,255,200,200,0,0,0	;#
      +       00C8 00C8 0000     
      +       0000 0000          
    42                           
    43                           	psect	idataBANK1
    44  07D8                     __pidataBANK1:	
    45                           
    46                           ;initializer for _User1
    47  07D8  3431               	retlw	49
    48  07D9  3443               	retlw	67
    49  07DA  3430               	retlw	48
    50  07DB  3430               	retlw	48
    51  07DC  3438               	retlw	56
    52  07DD  3432               	retlw	50
    53  07DE  3443               	retlw	67
    54  07DF  3445               	retlw	69
    55  07E0  3436               	retlw	54
    56  07E1  3439               	retlw	57
    57  07E2  3433               	retlw	51
    58  07E3  3439               	retlw	57
    59  07E4  3400               	retlw	0
    60                           
    61                           ;initializer for _User2
    62  07E5  3431               	retlw	49
    63  07E6  3442               	retlw	66
    64  07E7  3430               	retlw	48
    65  07E8  3430               	retlw	48
    66  07E9  3433               	retlw	51
    67  07EA  3443               	retlw	67
    68  07EB  3435               	retlw	53
    69  07EC  3442               	retlw	66
    70  07ED  3446               	retlw	70
    71  07EE  3443               	retlw	67
    72  07EF  3438               	retlw	56
    73  07F0  3430               	retlw	48
    74  07F1  3400               	retlw	0
    75                           
    76                           ;initializer for _User3
    77  07F2  3431               	retlw	49
    78  07F3  3442               	retlw	66
    79  07F4  3430               	retlw	48
    80  07F5  3430               	retlw	48
    81  07F6  3433               	retlw	51
    82  07F7  3443               	retlw	67
    83  07F8  3435               	retlw	53
    84  07F9  3442               	retlw	66
    85  07FA  3446               	retlw	70
    86  07FB  3443               	retlw	67
    87  07FC  3438               	retlw	56
    88  07FD  3431               	retlw	49
    89  07FE  3400               	retlw	0
    90                           
    91                           	psect	stringtext
    92  1000                     __pstringtext:	
    93  1000                     stringtab:	
    94                           ;	global	stringtab,__stringbase
    95                           
    96                           
    97                           ;	String table - string pointers are 2 bytes each
    98  1000  1BFF               	btfsc	btemp+1,7
    99  1001  280A               	ljmp	stringcode
   100  1002  1383               	bcf	3,7
   101  1003  187F               	btfsc	btemp+1,0
   102  1004  1783               	bsf	3,7
   103  1005  0800               	movf	0,w
   104  1006  0A84               	incf	4,f
   105  1007  1903               	skipnz
   106  1008  0AFF               	incf	btemp+1,f
   107  1009  0008               	return
   108  100A                     stringcode:	
   109  100A  087F               	movf	btemp+1,w
   110  100B  397F               	andlw	127
   111  100C  008A               	movwf	10
   112  100D  0804               	movf	4,w
   113  100E  0A84               	incf	4,f
   114  100F  1903               	skipnz
   115  1010  0AFF               	incf	btemp+1,f
   116  1011  0082               	movwf	2
   117  1012                     __stringbase:	
   118  1012                     _digit:	
   119  1012  3430               	retlw	48
   120  1013  3431               	retlw	49
   121  1014  3432               	retlw	50
   122  1015  3433               	retlw	51
   123  1016  3434               	retlw	52
   124  1017  3435               	retlw	53
   125  1018  3436               	retlw	54
   126  1019  3437               	retlw	55
   127  101A  3438               	retlw	56
   128  101B  3439               	retlw	57
   129  101C  3400               	retlw	0
   130  000B                     _INTCON	set	11
   131  0007                     _PORTC	set	7
   132  0008                     _PORTD	set	8
   133  001A                     _RCREG	set	26
   134  0018                     _RCSTA	set	24
   135  0019                     _TXREG	set	25
   136  00C4                     _CREN	set	196
   137  00C1                     _OERR	set	193
   138  0038                     _RC0	set	56
   139  0039                     _RC1	set	57
   140  0065                     _RCIF	set	101
   141  0040                     _RD0	set	64
   142  0041                     _RD1	set	65
   143  0042                     _RD2	set	66
   144  0043                     _RD3	set	67
   145  0044                     _RD4	set	68
   146  0045                     _RD5	set	69
   147  0046                     _RD6	set	70
   148  0047                     _RD7	set	71
   149  0064                     _TXIF	set	100
   150  008C                     _PIE1	set	140
   151  0099                     _SPBRG	set	153
   152  0087                     _TRISC	set	135
   153  0088                     _TRISD	set	136
   154  0098                     _TXSTA	set	152
   155  0440                     _TRISD0	set	1088
   156  0441                     _TRISD1	set	1089
   157  010D                     _EEADR	set	269
   158  010C                     _EEDATA	set	268
   159  0188                     _ANSEL	set	392
   160  0189                     _ANSELH	set	393
   161  018C                     _EECON1	set	396
   162  0C60                     _RD	set	3168
   163  0C61                     _WR	set	3169
   164  101D                     STR_12:	
   165  101D  346D               	retlw	109	;'m'
   166  101E  346F               	retlw	111	;'o'
   167  101F  3469               	retlw	105	;'i'
   168  1020  3473               	retlw	115	;'s'
   169  1021  3474               	retlw	116	;'t'
   170  1022  3465               	retlw	101	;'e'
   171  1023  3472               	retlw	114	;'r'
   172  1024  3420               	retlw	32	;' '
   173  1025  346C               	retlw	108	;'l'
   174  1026  3465               	retlw	101	;'e'
   175  1027  3476               	retlw	118	;'v'
   176  1028  3465               	retlw	101	;'e'
   177  1029  346C               	retlw	108	;'l'
   178  102A  3420               	retlw	32	;' '
   179  102B  3468               	retlw	104	;'h'
   180  102C  3469               	retlw	105	;'i'
   181  102D  3467               	retlw	103	;'g'
   182  102E  3468               	retlw	104	;'h'
   183  102F  3420               	retlw	32	;' '
   184  1030  346D               	retlw	109	;'m'
   185  1031  346F               	retlw	111	;'o'
   186  1032  3474               	retlw	116	;'t'
   187  1033  3465               	retlw	101	;'e'
   188  1034  3472               	retlw	114	;'r'
   189  1035  3420               	retlw	32	;' '
   190  1036  344F               	retlw	79	;'O'
   191  1037  3446               	retlw	70	;'F'
   192  1038  3446               	retlw	70	;'F'
   193  1039  3400               	retlw	0
   194  103A                     STR_10:	
   195  103A  346D               	retlw	109	;'m'
   196  103B  346F               	retlw	111	;'o'
   197  103C  3469               	retlw	105	;'i'
   198  103D  3473               	retlw	115	;'s'
   199  103E  3474               	retlw	116	;'t'
   200  103F  3465               	retlw	101	;'e'
   201  1040  3472               	retlw	114	;'r'
   202  1041  3420               	retlw	32	;' '
   203  1042  346C               	retlw	108	;'l'
   204  1043  3465               	retlw	101	;'e'
   205  1044  3476               	retlw	118	;'v'
   206  1045  3465               	retlw	101	;'e'
   207  1046  346C               	retlw	108	;'l'
   208  1047  3420               	retlw	32	;' '
   209  1048  346C               	retlw	108	;'l'
   210  1049  346F               	retlw	111	;'o'
   211  104A  3477               	retlw	119	;'w'
   212  104B  3420               	retlw	32	;' '
   213  104C  346D               	retlw	109	;'m'
   214  104D  346F               	retlw	111	;'o'
   215  104E  3474               	retlw	116	;'t'
   216  104F  3465               	retlw	101	;'e'
   217  1050  3472               	retlw	114	;'r'
   218  1051  3420               	retlw	32	;' '
   219  1052  344F               	retlw	79	;'O'
   220  1053  344E               	retlw	78	;'N'
   221  1054  3400               	retlw	0
   222  1055                     STR_9:	
   223  1055  3441               	retlw	65	;'A'
   224  1056  3454               	retlw	84	;'T'
   225  1057  342B               	retlw	43	;'+'
   226  1058  3443               	retlw	67	;'C'
   227  1059  344D               	retlw	77	;'M'
   228  105A  3447               	retlw	71	;'G'
   229  105B  3453               	retlw	83	;'S'
   230  105C  343D               	retlw	61	;'='
   231  105D  3422               	retlw	34	;'"'
   232  105E  342B               	retlw	43	;'+'
   233  105F  3439               	retlw	57	;'9'
   234  1060  3431               	retlw	49	;'1'
   235  1061  3439               	retlw	57	;'9'
   236  1062  3437               	retlw	55	;'7'
   237  1063  3439               	retlw	57	;'9'
   238  1064  3430               	retlw	48	;'0'
   239  1065  3430               	retlw	48	;'0'
   240  1066  3438               	retlw	56	;'8'
   241  1067  3430               	retlw	48	;'0'
   242  1068  3435               	retlw	53	;'5'
   243  1069  3431               	retlw	49	;'1'
   244  106A  3430               	retlw	48	;'0'
   245  106B  3422               	retlw	34	;'"'
   246  106C  3400               	retlw	0
   247  106D                     STR_21:	
   248  106D  3453               	retlw	83	;'S'
   249  106E  3455               	retlw	85	;'U'
   250  106F  3447               	retlw	71	;'G'
   251  1070  3441               	retlw	65	;'A'
   252  1071  3452               	retlw	82	;'R'
   253  1072  343A               	retlw	58	;':'
   254  1073  3420               	retlw	32	;' '
   255  1074  3420               	retlw	32	;' '
   256  1075  3420               	retlw	32	;' '
   257  1076  3420               	retlw	32	;' '
   258  1077  344B               	retlw	75	;'K'
   259  1078  3467               	retlw	103	;'g'
   260  1079  3420               	retlw	32	;' '
   261  107A  3420               	retlw	32	;' '
   262  107B  3420               	retlw	32	;' '
   263  107C  3420               	retlw	32	;' '
   264  107D  3420               	retlw	32	;' '
   265  107E  3420               	retlw	32	;' '
   266  107F  3420               	retlw	32	;' '
   267  1080  3420               	retlw	32	;' '
   268  1081  3420               	retlw	32	;' '
   269  1082  3400               	retlw	0
   270  1083                     STR_22:	
   271  1083  344B               	retlw	75	;'K'
   272  1084  3445               	retlw	69	;'E'
   273  1085  3452               	retlw	82	;'R'
   274  1086  344F               	retlw	79	;'O'
   275  1087  3453               	retlw	83	;'S'
   276  1088  3445               	retlw	69	;'E'
   277  1089  344E               	retlw	78	;'N'
   278  108A  3445               	retlw	69	;'E'
   279  108B  343A               	retlw	58	;':'
   280  108C  3420               	retlw	32	;' '
   281  108D  3420               	retlw	32	;' '
   282  108E  3420               	retlw	32	;' '
   283  108F  3420               	retlw	32	;' '
   284  1090  3420               	retlw	32	;' '
   285  1091  344C               	retlw	76	;'L'
   286  1092  3474               	retlw	116	;'t'
   287  1093  3473               	retlw	115	;'s'
   288  1094  3420               	retlw	32	;' '
   289  1095  3420               	retlw	32	;' '
   290  1096  3420               	retlw	32	;' '
   291  1097  3420               	retlw	32	;' '
   292  1098  3400               	retlw	0
   293  1099                     STR_33:	
   294  1099  3452               	retlw	82	;'R'
   295  109A  3449               	retlw	73	;'I'
   296  109B  3453               	retlw	83	;'S'
   297  109C  3445               	retlw	69	;'E'
   298  109D  343A               	retlw	58	;':'
   299  109E  3420               	retlw	32	;' '
   300  109F  3420               	retlw	32	;' '
   301  10A0  3420               	retlw	32	;' '
   302  10A1  344B               	retlw	75	;'K'
   303  10A2  3467               	retlw	103	;'g'
   304  10A3  3420               	retlw	32	;' '
   305  10A4  3420               	retlw	32	;' '
   306  10A5  3420               	retlw	32	;' '
   307  10A6  3420               	retlw	32	;' '
   308  10A7  3420               	retlw	32	;' '
   309  10A8  3420               	retlw	32	;' '
   310  10A9  3420               	retlw	32	;' '
   311  10AA  3420               	retlw	32	;' '
   312  10AB  3420               	retlw	32	;' '
   313  10AC  3420               	retlw	32	;' '
   314  10AD  3400               	retlw	0
   315  10AE                     STR_34:	
   316  10AE  3453               	retlw	83	;'S'
   317  10AF  3455               	retlw	85	;'U'
   318  10B0  3447               	retlw	71	;'G'
   319  10B1  3441               	retlw	65	;'A'
   320  10B2  3452               	retlw	82	;'R'
   321  10B3  343A               	retlw	58	;':'
   322  10B4  3420               	retlw	32	;' '
   323  10B5  3420               	retlw	32	;' '
   324  10B6  3420               	retlw	32	;' '
   325  10B7  344B               	retlw	75	;'K'
   326  10B8  3467               	retlw	103	;'g'
   327  10B9  3420               	retlw	32	;' '
   328  10BA  3420               	retlw	32	;' '
   329  10BB  3420               	retlw	32	;' '
   330  10BC  3420               	retlw	32	;' '
   331  10BD  3420               	retlw	32	;' '
   332  10BE  3420               	retlw	32	;' '
   333  10BF  3420               	retlw	32	;' '
   334  10C0  3420               	retlw	32	;' '
   335  10C1  3420               	retlw	32	;' '
   336  10C2  3400               	retlw	0
   337  10C3                     STR_32:	
   338  10C3  3455               	retlw	85	;'U'
   339  10C4  3453               	retlw	83	;'S'
   340  10C5  3445               	retlw	69	;'E'
   341  10C6  3452               	retlw	82	;'R'
   342  10C7  3431               	retlw	49	;'1'
   343  10C8  3420               	retlw	32	;' '
   344  10C9  3441               	retlw	65	;'A'
   345  10CA  344D               	retlw	77	;'M'
   346  10CB  344F               	retlw	79	;'O'
   347  10CC  3455               	retlw	85	;'U'
   348  10CD  344E               	retlw	78	;'N'
   349  10CE  3454               	retlw	84	;'T'
   350  10CF  343A               	retlw	58	;':'
   351  10D0  3420               	retlw	32	;' '
   352  10D1  3420               	retlw	32	;' '
   353  10D2  3420               	retlw	32	;' '
   354  10D3  3420               	retlw	32	;' '
   355  10D4  3420               	retlw	32	;' '
   356  10D5  3420               	retlw	32	;' '
   357  10D6  3420               	retlw	32	;' '
   358  10D7  3400               	retlw	0
   359  10D8                     STR_36:	
   360  10D8  3455               	retlw	85	;'U'
   361  10D9  3453               	retlw	83	;'S'
   362  10DA  3445               	retlw	69	;'E'
   363  10DB  3452               	retlw	82	;'R'
   364  10DC  3432               	retlw	50	;'2'
   365  10DD  3420               	retlw	32	;' '
   366  10DE  3441               	retlw	65	;'A'
   367  10DF  344D               	retlw	77	;'M'
   368  10E0  344F               	retlw	79	;'O'
   369  10E1  3455               	retlw	85	;'U'
   370  10E2  344E               	retlw	78	;'N'
   371  10E3  3454               	retlw	84	;'T'
   372  10E4  343A               	retlw	58	;':'
   373  10E5  3420               	retlw	32	;' '
   374  10E6  3420               	retlw	32	;' '
   375  10E7  3420               	retlw	32	;' '
   376  10E8  3420               	retlw	32	;' '
   377  10E9  3420               	retlw	32	;' '
   378  10EA  3420               	retlw	32	;' '
   379  10EB  3420               	retlw	32	;' '
   380  10EC  3400               	retlw	0
   381  10ED                     STR_40:	
   382  10ED  3455               	retlw	85	;'U'
   383  10EE  3453               	retlw	83	;'S'
   384  10EF  3445               	retlw	69	;'E'
   385  10F0  3452               	retlw	82	;'R'
   386  10F1  3433               	retlw	51	;'3'
   387  10F2  3420               	retlw	32	;' '
   388  10F3  3441               	retlw	65	;'A'
   389  10F4  344D               	retlw	77	;'M'
   390  10F5  344F               	retlw	79	;'O'
   391  10F6  3455               	retlw	85	;'U'
   392  10F7  344E               	retlw	78	;'N'
   393  10F8  3454               	retlw	84	;'T'
   394  10F9  343A               	retlw	58	;':'
   395  10FA  3420               	retlw	32	;' '
   396  10FB  3420               	retlw	32	;' '
   397  10FC  3420               	retlw	32	;' '
   398  10FD  3420               	retlw	32	;' '
   399  10FE  3420               	retlw	32	;' '
   400  10FF  3420               	retlw	32	;' '
   401  1100  3420               	retlw	32	;' '
   402  1101  3400               	retlw	0
   403  1102                     STR_20:	
   404  1102  3452               	retlw	82	;'R'
   405  1103  3449               	retlw	73	;'I'
   406  1104  3453               	retlw	83	;'S'
   407  1105  3445               	retlw	69	;'E'
   408  1106  343A               	retlw	58	;':'
   409  1107  3420               	retlw	32	;' '
   410  1108  3420               	retlw	32	;' '
   411  1109  3420               	retlw	32	;' '
   412  110A  3420               	retlw	32	;' '
   413  110B  3420               	retlw	32	;' '
   414  110C  3420               	retlw	32	;' '
   415  110D  344B               	retlw	75	;'K'
   416  110E  3467               	retlw	103	;'g'
   417  110F  3420               	retlw	32	;' '
   418  1110  3420               	retlw	32	;' '
   419  1111  3420               	retlw	32	;' '
   420  1112  3420               	retlw	32	;' '
   421  1113  3420               	retlw	32	;' '
   422  1114  3420               	retlw	32	;' '
   423  1115  3420               	retlw	32	;' '
   424  1116  3400               	retlw	0
   425  1117                     STR_35:	
   426  1117  344B               	retlw	75	;'K'
   427  1118  3445               	retlw	69	;'E'
   428  1119  3452               	retlw	82	;'R'
   429  111A  344F               	retlw	79	;'O'
   430  111B  3453               	retlw	83	;'S'
   431  111C  3445               	retlw	69	;'E'
   432  111D  344E               	retlw	78	;'N'
   433  111E  3445               	retlw	69	;'E'
   434  111F  343A               	retlw	58	;':'
   435  1120  3420               	retlw	32	;' '
   436  1121  3420               	retlw	32	;' '
   437  1122  3420               	retlw	32	;' '
   438  1123  344C               	retlw	76	;'L'
   439  1124  3474               	retlw	116	;'t'
   440  1125  3473               	retlw	115	;'s'
   441  1126  3420               	retlw	32	;' '
   442  1127  3420               	retlw	32	;' '
   443  1128  3420               	retlw	32	;' '
   444  1129  3420               	retlw	32	;' '
   445  112A  3420               	retlw	32	;' '
   446  112B  3400               	retlw	0
   447  112C                     STR_19:	
   448  112C  3420               	retlw	32	;' '
   449  112D  3420               	retlw	32	;' '
   450  112E  3420               	retlw	32	;' '
   451  112F  3420               	retlw	32	;' '
   452  1130  3453               	retlw	83	;'S'
   453  1131  3454               	retlw	84	;'T'
   454  1132  344F               	retlw	79	;'O'
   455  1133  3443               	retlw	67	;'C'
   456  1134  344B               	retlw	75	;'K'
   457  1135  3420               	retlw	32	;' '
   458  1136  3444               	retlw	68	;'D'
   459  1137  3445               	retlw	69	;'E'
   460  1138  3454               	retlw	84	;'T'
   461  1139  3441               	retlw	65	;'A'
   462  113A  3449               	retlw	73	;'I'
   463  113B  344C               	retlw	76	;'L'
   464  113C  3453               	retlw	83	;'S'
   465  113D  3420               	retlw	32	;' '
   466  113E  3420               	retlw	32	;' '
   467  113F  3420               	retlw	32	;' '
   468  1140  3400               	retlw	0
   469  1141                     STR_14:	
   470  1141  3443               	retlw	67	;'C'
   471  1142  3472               	retlw	114	;'r'
   472  1143  346F               	retlw	111	;'o'
   473  1144  3470               	retlw	112	;'p'
   474  1145  3420               	retlw	32	;' '
   475  1146  3463               	retlw	99	;'c'
   476  1147  3472               	retlw	114	;'r'
   477  1148  346F               	retlw	111	;'o'
   478  1149  3473               	retlw	115	;'s'
   479  114A  3473               	retlw	115	;'s'
   480  114B  3465               	retlw	101	;'e'
   481  114C  3464               	retlw	100	;'d'
   482  114D  3420               	retlw	32	;' '
   483  114E  3473               	retlw	115	;'s'
   484  114F  3474               	retlw	116	;'t'
   485  1150  3461               	retlw	97	;'a'
   486  1151  3467               	retlw	103	;'g'
   487  1152  3465               	retlw	101	;'e'
   488  1153  3431               	retlw	49	;'1'
   489  1154  3400               	retlw	0
   490  1155                     STR_16:	
   491  1155  3443               	retlw	67	;'C'
   492  1156  3472               	retlw	114	;'r'
   493  1157  346F               	retlw	111	;'o'
   494  1158  3470               	retlw	112	;'p'
   495  1159  3420               	retlw	32	;' '
   496  115A  3463               	retlw	99	;'c'
   497  115B  3472               	retlw	114	;'r'
   498  115C  346F               	retlw	111	;'o'
   499  115D  3473               	retlw	115	;'s'
   500  115E  3473               	retlw	115	;'s'
   501  115F  3465               	retlw	101	;'e'
   502  1160  3464               	retlw	100	;'d'
   503  1161  3420               	retlw	32	;' '
   504  1162  3473               	retlw	115	;'s'
   505  1163  3474               	retlw	116	;'t'
   506  1164  3461               	retlw	97	;'a'
   507  1165  3467               	retlw	103	;'g'
   508  1166  3465               	retlw	101	;'e'
   509  1167  3432               	retlw	50	;'2'
   510  1168  3400               	retlw	0
   511  1169                     STR_18:	
   512  1169  3443               	retlw	67	;'C'
   513  116A  3472               	retlw	114	;'r'
   514  116B  346F               	retlw	111	;'o'
   515  116C  3470               	retlw	112	;'p'
   516  116D  3420               	retlw	32	;' '
   517  116E  3463               	retlw	99	;'c'
   518  116F  3472               	retlw	114	;'r'
   519  1170  346F               	retlw	111	;'o'
   520  1171  3473               	retlw	115	;'s'
   521  1172  3473               	retlw	115	;'s'
   522  1173  3465               	retlw	101	;'e'
   523  1174  3464               	retlw	100	;'d'
   524  1175  3420               	retlw	32	;' '
   525  1176  3473               	retlw	115	;'s'
   526  1177  3474               	retlw	116	;'t'
   527  1178  3461               	retlw	97	;'a'
   528  1179  3467               	retlw	103	;'g'
   529  117A  3465               	retlw	101	;'e'
   530  117B  3433               	retlw	51	;'3'
   531  117C  3400               	retlw	0
   532  117D                     STR_7:	
   533  117D  3441               	retlw	65	;'A'
   534  117E  3454               	retlw	84	;'T'
   535  117F  342B               	retlw	43	;'+'
   536  1180  3443               	retlw	67	;'C'
   537  1181  344E               	retlw	78	;'N'
   538  1182  344D               	retlw	77	;'M'
   539  1183  3449               	retlw	73	;'I'
   540  1184  343D               	retlw	61	;'='
   541  1185  3432               	retlw	50	;'2'
   542  1186  342C               	retlw	44	;','
   543  1187  3432               	retlw	50	;'2'
   544  1188  342C               	retlw	44	;','
   545  1189  3430               	retlw	48	;'0'
   546  118A  342C               	retlw	44	;','
   547  118B  3430               	retlw	48	;'0'
   548  118C  342C               	retlw	44	;','
   549  118D  3430               	retlw	48	;'0'
   550  118E  340D               	retlw	13
   551  118F  3400               	retlw	0
   552  1190                     STR_26:	
   553  1190  3453               	retlw	83	;'S'
   554  1191  344D               	retlw	77	;'M'
   555  1192  3441               	retlw	65	;'A'
   556  1193  3452               	retlw	82	;'R'
   557  1194  3454               	retlw	84	;'T'
   558  1195  3420               	retlw	32	;' '
   559  1196  3443               	retlw	67	;'C'
   560  1197  3441               	retlw	65	;'A'
   561  1198  3452               	retlw	82	;'R'
   562  1199  3444               	retlw	68	;'D'
   563  119A  3420               	retlw	32	;' '
   564  119B  3420               	retlw	32	;' '
   565  119C  3420               	retlw	32	;' '
   566  119D  3420               	retlw	32	;' '
   567  119E  3420               	retlw	32	;' '
   568  119F  3420               	retlw	32	;' '
   569  11A0  3420               	retlw	32	;' '
   570  11A1  3400               	retlw	0
   571  11A2                     STR_24:	
   572  11A2  3420               	retlw	32	;' '
   573  11A3  3420               	retlw	32	;' '
   574  11A4  3420               	retlw	32	;' '
   575  11A5  3443               	retlw	67	;'C'
   576  11A6  3441               	retlw	65	;'A'
   577  11A7  3452               	retlw	82	;'R'
   578  11A8  3444               	retlw	68	;'D'
   579  11A9  3420               	retlw	32	;' '
   580  11AA  3453               	retlw	83	;'S'
   581  11AB  3459               	retlw	89	;'Y'
   582  11AC  3453               	retlw	83	;'S'
   583  11AD  3454               	retlw	84	;'T'
   584  11AE  3445               	retlw	69	;'E'
   585  11AF  344D               	retlw	77	;'M'
   586  11B0  3420               	retlw	32	;' '
   587  11B1  3420               	retlw	32	;' '
   588  11B2  3420               	retlw	32	;' '
   589  11B3  3400               	retlw	0
   590  11B4                     STR_25:	
   591  11B4  3450               	retlw	80	;'P'
   592  11B5  344C               	retlw	76	;'L'
   593  11B6  3445               	retlw	69	;'E'
   594  11B7  3441               	retlw	65	;'A'
   595  11B8  3453               	retlw	83	;'S'
   596  11B9  3445               	retlw	69	;'E'
   597  11BA  3420               	retlw	32	;' '
   598  11BB  3454               	retlw	84	;'T'
   599  11BC  3441               	retlw	65	;'A'
   600  11BD  3450               	retlw	80	;'P'
   601  11BE  3420               	retlw	32	;' '
   602  11BF  3459               	retlw	89	;'Y'
   603  11C0  344F               	retlw	79	;'O'
   604  11C1  3455               	retlw	85	;'U'
   605  11C2  3452               	retlw	82	;'R'
   606  11C3  3420               	retlw	32	;' '
   607  11C4  3420               	retlw	32	;' '
   608  11C5  3400               	retlw	0
   609  11C6                     STR_23:	
   610  11C6  3441               	retlw	65	;'A'
   611  11C7  3455               	retlw	85	;'U'
   612  11C8  3454               	retlw	84	;'T'
   613  11C9  344F               	retlw	79	;'O'
   614  11CA  344D               	retlw	77	;'M'
   615  11CB  3441               	retlw	65	;'A'
   616  11CC  3454               	retlw	84	;'T'
   617  11CD  3449               	retlw	73	;'I'
   618  11CE  3443               	retlw	67	;'C'
   619  11CF  3420               	retlw	32	;' '
   620  11D0  3452               	retlw	82	;'R'
   621  11D1  3441               	retlw	65	;'A'
   622  11D2  3454               	retlw	84	;'T'
   623  11D3  3449               	retlw	73	;'I'
   624  11D4  344F               	retlw	79	;'O'
   625  11D5  344E               	retlw	78	;'N'
   626  11D6  3420               	retlw	32	;' '
   627  11D7  3400               	retlw	0
   628  11D8                     STR_2:	
   629  11D8  3450               	retlw	80	;'P'
   630  11D9  344C               	retlw	76	;'L'
   631  11DA  3453               	retlw	83	;'S'
   632  11DB  3420               	retlw	32	;' '
   633  11DC  3457               	retlw	87	;'W'
   634  11DD  3441               	retlw	65	;'A'
   635  11DE  3449               	retlw	73	;'I'
   636  11DF  3454               	retlw	84	;'T'
   637  11E0  342E               	retlw	46	;'.'
   638  11E1  342E               	retlw	46	;'.'
   639  11E2  342E               	retlw	46	;'.'
   640  11E3  342E               	retlw	46	;'.'
   641  11E4  342E               	retlw	46	;'.'
   642  11E5  342E               	retlw	46	;'.'
   643  11E6  342E               	retlw	46	;'.'
   644  11E7  342E               	retlw	46	;'.'
   645  11E8  3400               	retlw	0
   646  11E9                     STR_1:	
   647  11E9  3447               	retlw	71	;'G'
   648  11EA  3453               	retlw	83	;'S'
   649  11EB  344D               	retlw	77	;'M'
   650  11EC  3420               	retlw	32	;' '
   651  11ED  3449               	retlw	73	;'I'
   652  11EE  344E               	retlw	78	;'N'
   653  11EF  3449               	retlw	73	;'I'
   654  11F0  3454               	retlw	84	;'T'
   655  11F1  3449               	retlw	73	;'I'
   656  11F2  3441               	retlw	65	;'A'
   657  11F3  344C               	retlw	76	;'L'
   658  11F4  3449               	retlw	73	;'I'
   659  11F5  345A               	retlw	90	;'Z'
   660  11F6  3449               	retlw	73	;'I'
   661  11F7  344E               	retlw	78	;'N'
   662  11F8  3447               	retlw	71	;'G'
   663  11F9  3400               	retlw	0
   664  11FA                     STR_28:	
   665  11FA  3452               	retlw	82	;'R'
   666  11FB  3469               	retlw	105	;'i'
   667  11FC  3473               	retlw	115	;'s'
   668  11FD  3465               	retlw	101	;'e'
   669  11FE  3420               	retlw	32	;' '
   670  11FF  3453               	retlw	83	;'S'
   671  1200  3474               	retlw	116	;'t'
   672  1201  346F               	retlw	111	;'o'
   673  1202  3463               	retlw	99	;'c'
   674  1203  346B               	retlw	107	;'k'
   675  1204  343A               	retlw	58	;':'
   676  1205  3400               	retlw	0
   677  1206                     STR_6:	
   678  1206  3441               	retlw	65	;'A'
   679  1207  3454               	retlw	84	;'T'
   680  1208  342B               	retlw	43	;'+'
   681  1209  3443               	retlw	67	;'C'
   682  120A  344D               	retlw	77	;'M'
   683  120B  3447               	retlw	71	;'G'
   684  120C  3446               	retlw	70	;'F'
   685  120D  343D               	retlw	61	;'='
   686  120E  3431               	retlw	49	;'1'
   687  120F  340D               	retlw	13
   688  1210  3400               	retlw	0
   689  1211                     STR_5:	
   690  1211  3441               	retlw	65	;'A'
   691  1212  3454               	retlw	84	;'T'
   692  1213  342B               	retlw	43	;'+'
   693  1214  3443               	retlw	67	;'C'
   694  1215  3453               	retlw	83	;'S'
   695  1216  3444               	retlw	68	;'D'
   696  1217  3448               	retlw	72	;'H'
   697  1218  343D               	retlw	61	;'='
   698  1219  3431               	retlw	49	;'1'
   699  121A  340D               	retlw	13
   700  121B  3400               	retlw	0
   701  121C                     STR_4:	
   702  121C  3441               	retlw	65	;'A'
   703  121D  3454               	retlw	84	;'T'
   704  121E  342B               	retlw	43	;'+'
   705  121F  3443               	retlw	67	;'C'
   706  1220  3450               	retlw	80	;'P'
   707  1221  3449               	retlw	73	;'I'
   708  1222  344E               	retlw	78	;'N'
   709  1223  343F               	retlw	63	;'?'
   710  1224  340D               	retlw	13
   711  1225  3400               	retlw	0
   712  1226                     STR_8:	
   713  1226  3447               	retlw	71	;'G'
   714  1227  3453               	retlw	83	;'S'
   715  1228  344D               	retlw	77	;'M'
   716  1229  3420               	retlw	32	;' '
   717  122A  3452               	retlw	82	;'R'
   718  122B  3445               	retlw	69	;'E'
   719  122C  3441               	retlw	65	;'A'
   720  122D  3444               	retlw	68	;'D'
   721  122E  3459               	retlw	89	;'Y'
   722  122F  3400               	retlw	0
   723  1230                     STR_44:	
   724  1230  3453               	retlw	83	;'S'
   725  1231  3454               	retlw	84	;'T'
   726  1232  344F               	retlw	79	;'O'
   727  1233  3443               	retlw	67	;'C'
   728  1234  344B               	retlw	75	;'K'
   729  1235  3400               	retlw	0
   730  1236                     STR_29:	
   731  1236  3420               	retlw	32	;' '
   732  1237  344B               	retlw	75	;'K'
   733  1238  3467               	retlw	103	;'g'
   734  1239  3473               	retlw	115	;'s'
   735  123A  3400               	retlw	0
   736  123B                     STR_3:	
   737  123B  3441               	retlw	65	;'A'
   738  123C  3454               	retlw	84	;'T'
   739  123D  340D               	retlw	13
   740  123E  3400               	retlw	0
   741  1099                     
   742                           	psect	cinit
   743  0EB7                     start_initialization:	
   744                           
   745                           ; Clear objects allocated to BITCOMMON
   746  0EB7  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   747                           
   748                           ; Clear objects allocated to COMMON
   749  0EB8  01F7               	clrf	__pbssCOMMON& (0+127)
   750                           
   751                           ; Clear objects allocated to BANK0
   752  0EB9  1383               	bcf	3,7	;select IRP bank0
   753  0EBA  3020               	movlw	low __pbssBANK0
   754  0EBB  0084               	movwf	4
   755  0EBC  3053               	movlw	low (__pbssBANK0+51)
   756  0EBD  120A  158A  2662   	fcall	clear_ram
      +       120A  158A         
   757                           
   758                           ; Clear objects allocated to BANK1
   759  0EC2  30C7               	movlw	low __pbssBANK1
   760  0EC3  0084               	movwf	4
   761  0EC4  30DB               	movlw	low (__pbssBANK1+20)
   762  0EC5  120A  158A  2662   	fcall	clear_ram
      +       120A  158A         
   763                           
   764                           ; Initialize objects allocated to BANK1
   765  0ECA  30C7               	movlw	low (__pdataBANK1+39)
   766  0ECB  00FD               	movwf	125
   767  0ECC  3007               	movlw	high __pidataBANK1
   768  0ECD  00FE               	movwf	126
   769  0ECE  30D8               	movlw	low __pidataBANK1
   770  0ECF  00FF               	movwf	127
   771  0ED0  30A0               	movlw	low __pdataBANK1
   772  0ED1  0084               	movwf	4
   773  0ED2  120A  158A  268C   	fcall	init_ram
   774  0ED5                     end_of_initialization:	
   775                           ;End of C runtime variable initialization code
   776                           
   777  0ED5  0183               	clrf	3
   778  0ED6  120A  118A  2BF4   	ljmp	_main	;jump to C main() function
   779                           
   780                           	psect	bitbssCOMMON
   781  03B0                     __pbitbssCOMMON:	
   782  03B0                     _rfid_flag:	
   783  03B0                     	ds	1
   784  03B1                     _sms_indication:	
   785  03B1                     	ds	1
   786                           
   787                           	psect	bssCOMMON
   788  0077                     __pbssCOMMON:	
   789  0077                     _delayus_variable:	
   790  0077                     	ds	1
   791                           
   792                           	psect	bssBANK0
   793  0020                     __pbssBANK0:	
   794  0020                     _KeroseneArray:	
   795  0020                     	ds	4
   796  0024                     _SugarArray:	
   797  0024                     	ds	4
   798  0028                     _KeroseneStock:	
   799  0028                     	ds	2
   800  002A                     _RiseStock:	
   801  002A                     	ds	2
   802  002C                     _SugarStock:	
   803  002C                     	ds	2
   804  002E                     _User:	
   805  002E                     	ds	2
   806  0030                     _User1amt:	
   807  0030                     	ds	2
   808  0032                     _User2amt:	
   809  0032                     	ds	2
   810  0034                     _User3amt:	
   811  0034                     	ds	2
   812  0036                     _User1Kerosene:	
   813  0036                     	ds	1
   814  0037                     _User1Rise:	
   815  0037                     	ds	1
   816  0038                     _User1Sugar:	
   817  0038                     	ds	1
   818  0039                     _User2Kerosene:	
   819  0039                     	ds	1
   820  003A                     _User2Rise:	
   821  003A                     	ds	1
   822  003B                     _User2Sugar:	
   823  003B                     	ds	1
   824  003C                     _User3Kerosene:	
   825  003C                     	ds	1
   826  003D                     _User3Rise:	
   827  003D                     	ds	1
   828  003E                     _User3Sugar:	
   829  003E                     	ds	1
   830  003F                     _card_store:	
   831  003F                     	ds	15
   832  004E                     _RiseArray:	
   833  004E                     	ds	5
   834                           
   835                           	psect	bssBANK1
   836  00C7                     __pbssBANK1:	
   837  00C7                     _sms:	
   838  00C7                     	ds	20
   839                           
   840                           	psect	dataBANK1
   841  00A0                     __pdataBANK1:	
   842  00A0                     _User1:	
   843  00A0                     	ds	13
   844  00AD                     _User2:	
   845  00AD                     	ds	13
   846  00BA                     _User3:	
   847  00BA                     	ds	13
   848                           
   849                           	psect	clrtext
   850  0E62                     clear_ram:	
   851                           ;	Called with FSR containing the base address, and
   852                           ;	W with the last address+1
   853                           
   854  0E62  0064               	clrwdt	;clear the watchdog before getting into this loop
   855  0E63                     clrloop:	
   856  0E63  0180               	clrf	0	;clear RAM location pointed to by FSR
   857  0E64  0A84               	incf	4,f	;increment pointer
   858  0E65  0604               	xorwf	4,w	;XOR with final address
   859  0E66  1903               	btfsc	3,2	;have we reached the end yet?
   860  0E67  3400               	retlw	0	;all done for this memory range, return
   861  0E68  0604               	xorwf	4,w	;XOR again to restore value
   862  0E69  2E63               	goto	clrloop	;do the next byte
   863                           
   864                           	psect	inittext
   865  0E88                     init_fetch:	
   866                           ;	Called with low address in FSR and high address in W
   867                           
   868  0E88  087E               	movf	126,w
   869  0E89  008A               	movwf	10
   870  0E8A  087F               	movf	127,w
   871  0E8B  0082               	movwf	2
   872  0E8C                     init_ram:	
   873                           ;Called with:
   874                           ;	high address of idata address in btemp 
   875                           ;	low address of idata address in btemp+1 
   876                           ;	low address of data in FSR
   877                           ;	high address + 1 of data in btemp-1
   878                           
   879  0E8C  2688  120A  158A   	fcall	init_fetch
   880  0E8F  0080               	movwf	0
   881  0E90  0A84               	incf	4,f
   882  0E91  0804               	movf	4,w
   883  0E92  067D               	xorwf	125,w
   884  0E93  1903               	btfsc	3,2
   885  0E94  3400               	retlw	0
   886  0E95  0AFF               	incf	127,f
   887  0E96  1903               	btfsc	3,2
   888  0E97  0AFE               	incf	126,f
   889  0E98  2E8C               	goto	init_ram
   890                           
   891                           	psect	cstackCOMMON
   892  0070                     __pcstackCOMMON:	
   893  0070                     ?_DelayMs:	
   894  0070                     ?_DelayS:	
   895                           ; 0 bytes @ 0x0
   896                           
   897  0070                     ?_enable:	
   898                           ; 0 bytes @ 0x0
   899                           
   900  0070                     ?_lcdport:	
   901                           ; 0 bytes @ 0x0
   902                           
   903  0070                     ?_lcdcmd:	
   904                           ; 0 bytes @ 0x0
   905                           
   906  0070                     ?_lcddata:	
   907                           ; 0 bytes @ 0x0
   908                           
   909  0070                     ?_lcd_init:	
   910                           ; 0 bytes @ 0x0
   911                           
   912  0070                     ?_SoftWareUart_Init:	
   913                           ; 0 bytes @ 0x0
   914                           
   915  0070                     ?_transmit:	
   916                           ; 0 bytes @ 0x0
   917                           
   918  0070                     ?_gsm_init:	
   919                           ; 0 bytes @ 0x0
   920                           
   921  0070                     ?_gsm_read_line2:	
   922                           ; 0 bytes @ 0x0
   923                           
   924  0070                     ??_gsm_read_line2:	
   925                           ; 0 bytes @ 0x0
   926                           
   927  0070                     ?_ISR:	
   928                           ; 0 bytes @ 0x0
   929                           
   930  0070                     ?_RFID_read:	
   931                           ; 0 bytes @ 0x0
   932                           
   933  0070                     ?_ReadAmnt:	
   934                           ; 0 bytes @ 0x0
   935                           
   936  0070                     ?_ReadStock:	
   937                           ; 0 bytes @ 0x0
   938                           
   939  0070                     ?_DisplayStock:	
   940                           ; 0 bytes @ 0x0
   941                           
   942  0070                     ?_uart_init:	
   943                           ; 0 bytes @ 0x0
   944                           
   945  0070                     ?_paramter:	
   946                           ; 0 bytes @ 0x0
   947                           
   948  0070                     ?_startup:	
   949                           ; 0 bytes @ 0x0
   950                           
   951  0070                     ?_LoadStockToArray:	
   952                           ; 0 bytes @ 0x0
   953                           
   954  0070                     ?_SendRiseStock:	
   955                           ; 0 bytes @ 0x0
   956                           
   957  0070                     ?_main:	
   958                           ; 0 bytes @ 0x0
   959                           
   960  0070                     ??i1_receive:	
   961                           ; 0 bytes @ 0x0
   962                           
   963  0070                     ?_eeprom_read:	
   964                           ; 0 bytes @ 0x0
   965                           
   966  0070                     ?_softreceive:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_receive:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?i1_receive:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     gsm_read_line2@flag:	
   976                           ; 1 bytes @ 0x0
   977                           
   978                           
   979                           ; 1 bytes @ 0x0
   980  0070                     	ds	1
   981  0071                     gsm_read_line2@buffer:	
   982                           
   983                           ; 1 bytes @ 0x1
   984  0071                     	ds	1
   985  0072                     gsm_read_line2@rec_data:	
   986                           
   987                           ; 1 bytes @ 0x2
   988  0072                     	ds	1
   989  0073                     ??_ISR:	
   990                           
   991                           ; 0 bytes @ 0x3
   992  0073                     	ds	3
   993  0076                     ??_DelayMs:	
   994  0076                     ??_DelayS:	
   995                           ; 0 bytes @ 0x6
   996                           
   997  0076                     ??_lcdport:	
   998                           ; 0 bytes @ 0x6
   999                           
  1000  0076                     ??_lcdcmd:	
  1001                           ; 0 bytes @ 0x6
  1002                           
  1003  0076                     ??_lcddata:	
  1004                           ; 0 bytes @ 0x6
  1005                           
  1006  0076                     ??_lcdstring:	
  1007                           ; 0 bytes @ 0x6
  1008                           
  1009  0076                     ??_receive:	
  1010                           ; 0 bytes @ 0x6
  1011                           
  1012  0076                     ??_transmit:	
  1013                           ; 0 bytes @ 0x6
  1014                           
  1015  0076                     ??_usartstring:	
  1016                           ; 0 bytes @ 0x6
  1017                           
  1018  0076                     ??_gsm_init:	
  1019                           ; 0 bytes @ 0x6
  1020                           
  1021  0076                     ??_RFID_read:	
  1022                           ; 0 bytes @ 0x6
  1023                           
  1024  0076                     ??_DisplayAmnt:	
  1025                           ; 0 bytes @ 0x6
  1026                           
  1027  0076                     ??_ReadAmnt:	
  1028                           ; 0 bytes @ 0x6
  1029                           
  1030  0076                     ??_ReadStock:	
  1031                           ; 0 bytes @ 0x6
  1032                           
  1033  0076                     ??_DisplayStock:	
  1034                           ; 0 bytes @ 0x6
  1035                           
  1036  0076                     ??_DisplaySugar:	
  1037                           ; 0 bytes @ 0x6
  1038                           
  1039  0076                     ??_DisplayRise:	
  1040                           ; 0 bytes @ 0x6
  1041                           
  1042  0076                     ??_DisplayKerosene:	
  1043                           ; 0 bytes @ 0x6
  1044                           
  1045  0076                     ??_uart_init:	
  1046                           ; 0 bytes @ 0x6
  1047                           
  1048  0076                     ??_paramter:	
  1049                           ; 0 bytes @ 0x6
  1050                           
  1051  0076                     ??_LoadStockToArray:	
  1052                           ; 0 bytes @ 0x6
  1053                           
  1054  0076                     ??_SendRiseStock:	
  1055                           ; 0 bytes @ 0x6
  1056                           
  1057  0076                     ??___wmul:	
  1058                           ; 0 bytes @ 0x6
  1059                           
  1060  0076                     ??___lwdiv:	
  1061                           ; 0 bytes @ 0x6
  1062                           
  1063  0076                     ??___lwmod:	
  1064                           ; 0 bytes @ 0x6
  1065                           
  1066  0076                     ??___lbdiv:	
  1067                           ; 0 bytes @ 0x6
  1068                           
  1069  0076                     ??___awdiv:	
  1070                           ; 0 bytes @ 0x6
  1071                           
  1072  0076                     ??___awmod:	
  1073                           ; 0 bytes @ 0x6
  1074                           
  1075                           
  1076                           	psect	cstackBANK0
  1077  0053                     __pcstackBANK0:	
  1078                           ; 0 bytes @ 0x6
  1079                           
  1080  0053                     ??_eeprom_read:	
  1081  0053                     ??_enable:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0053                     ??_SoftWareUart_Init:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0053                     ??_softreceive:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0053                     ?___lbdiv:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0053                     ?___lbmod:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096  0053                     ?_strcmp:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0053                     ?_memcmp:	
  1100                           ; 2 bytes @ 0x0
  1101                           
  1102  0053                     ?___lwmod:	
  1103                           ; 2 bytes @ 0x0
  1104                           
  1105  0053                     ?___awmod:	
  1106                           ; 2 bytes @ 0x0
  1107                           
  1108  0053                     DelayMs@cnt:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111  0053                     lcdport@a:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0053                     transmit@data:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0053                     strcmp@s2:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0053                     ___lbdiv@divisor:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0053                     ___lbmod@divisor:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0053                     memcmp@s1:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0053                     ___lwmod@divisor:	
  1130                           ; 2 bytes @ 0x0
  1131                           
  1132  0053                     ___awmod@divisor:	
  1133                           ; 2 bytes @ 0x0
  1134                           
  1135                           
  1136                           ; 2 bytes @ 0x0
  1137  0053                     	ds	1
  1138  0054                     ?_usartstring:	
  1139  0054                     ??___lbmod:	
  1140                           ; 0 bytes @ 0x1
  1141                           
  1142  0054                     DelayMs@i:	
  1143                           ; 0 bytes @ 0x1
  1144                           
  1145  0054                     softreceive@Data:	
  1146                           ; 1 bytes @ 0x1
  1147                           
  1148  0054                     ___lbdiv@dividend:	
  1149                           ; 1 bytes @ 0x1
  1150                           
  1151  0054                     usartstring@st:	
  1152                           ; 1 bytes @ 0x1
  1153                           
  1154                           
  1155                           ; 2 bytes @ 0x1
  1156  0054                     	ds	1
  1157  0055                     ??_strcmp:	
  1158  0055                     DelayS@cnt:	
  1159                           ; 0 bytes @ 0x2
  1160                           
  1161  0055                     lcdcmd@y:	
  1162                           ; 1 bytes @ 0x2
  1163                           
  1164  0055                     lcddata@y:	
  1165                           ; 1 bytes @ 0x2
  1166                           
  1167  0055                     softreceive@mask:	
  1168                           ; 1 bytes @ 0x2
  1169                           
  1170  0055                     eeprom_read@addr:	
  1171                           ; 1 bytes @ 0x2
  1172                           
  1173  0055                     memcmp@s2:	
  1174                           ; 1 bytes @ 0x2
  1175                           
  1176  0055                     ___lbdiv@counter:	
  1177                           ; 1 bytes @ 0x2
  1178                           
  1179  0055                     ___lbmod@dividend:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  0055                     ___lwmod@dividend:	
  1183                           ; 1 bytes @ 0x2
  1184                           
  1185  0055                     ___awmod@dividend:	
  1186                           ; 2 bytes @ 0x2
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x2
  1190  0055                     	ds	1
  1191  0056                     ?___wmul:	
  1192  0056                     DelayS@i:	
  1193                           ; 2 bytes @ 0x3
  1194                           
  1195  0056                     lcdcmd@z:	
  1196                           ; 1 bytes @ 0x3
  1197                           
  1198  0056                     lcddata@z:	
  1199                           ; 1 bytes @ 0x3
  1200                           
  1201  0056                     ___lbdiv@quotient:	
  1202                           ; 1 bytes @ 0x3
  1203                           
  1204  0056                     ___lbmod@counter:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207  0056                     RFID_read@i:	
  1208                           ; 1 bytes @ 0x3
  1209                           
  1210  0056                     memcmp@n:	
  1211                           ; 2 bytes @ 0x3
  1212                           
  1213  0056                     ___wmul@multiplier:	
  1214                           ; 2 bytes @ 0x3
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x3
  1218  0056                     	ds	1
  1219  0057                     lcdcmd@a:	
  1220  0057                     lcddata@a:	
  1221                           ; 1 bytes @ 0x4
  1222                           
  1223  0057                     strcmp@r:	
  1224                           ; 1 bytes @ 0x4
  1225                           
  1226  0057                     ___lwmod@counter:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229  0057                     ___lbmod@rem:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0057                     ___awmod@counter:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x4
  1237  0057                     	ds	1
  1238  0058                     ??_memcmp:	
  1239  0058                     ??_lcd_init:	
  1240                           ; 0 bytes @ 0x5
  1241                           
  1242  0058                     ?_lcdstring:	
  1243                           ; 0 bytes @ 0x5
  1244                           
  1245  0058                     ?_DisplaySugar:	
  1246                           ; 0 bytes @ 0x5
  1247                           
  1248  0058                     ?_DisplayRise:	
  1249                           ; 0 bytes @ 0x5
  1250                           
  1251  0058                     ?_DisplayKerosene:	
  1252                           ; 0 bytes @ 0x5
  1253                           
  1254  0058                     ?___lwdiv:	
  1255                           ; 0 bytes @ 0x5
  1256                           
  1257  0058                     DisplaySugar@Sugar:	
  1258                           ; 2 bytes @ 0x5
  1259                           
  1260  0058                     DisplayRise@Rise:	
  1261                           ; 1 bytes @ 0x5
  1262                           
  1263  0058                     DisplayKerosene@Kerosene:	
  1264                           ; 1 bytes @ 0x5
  1265                           
  1266  0058                     strcmp@s1:	
  1267                           ; 1 bytes @ 0x5
  1268                           
  1269  0058                     ___awmod@sign:	
  1270                           ; 1 bytes @ 0x5
  1271                           
  1272  0058                     lcdstring@a:	
  1273                           ; 1 bytes @ 0x5
  1274                           
  1275  0058                     ___wmul@multiplicand:	
  1276                           ; 2 bytes @ 0x5
  1277                           
  1278  0058                     ___lwdiv@divisor:	
  1279                           ; 2 bytes @ 0x5
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x5
  1283  0058                     	ds	1
  1284  0059                     ?___awdiv:	
  1285  0059                     DisplaySugar@Location:	
  1286                           ; 2 bytes @ 0x6
  1287                           
  1288  0059                     DisplayRise@Location:	
  1289                           ; 1 bytes @ 0x6
  1290                           
  1291  0059                     DisplayKerosene@Location:	
  1292                           ; 1 bytes @ 0x6
  1293                           
  1294  0059                     ___awdiv@divisor:	
  1295                           ; 1 bytes @ 0x6
  1296                           
  1297                           
  1298                           ; 2 bytes @ 0x6
  1299  0059                     	ds	1
  1300  005A                     ??_startup:	
  1301  005A                     ___wmul@product:	
  1302                           ; 0 bytes @ 0x7
  1303                           
  1304  005A                     ___lwdiv@dividend:	
  1305                           ; 2 bytes @ 0x7
  1306                           
  1307                           
  1308                           ; 2 bytes @ 0x7
  1309  005A                     	ds	1
  1310  005B                     ___awdiv@dividend:	
  1311                           
  1312                           ; 2 bytes @ 0x8
  1313  005B                     	ds	1
  1314  005C                     ___lwdiv@quotient:	
  1315                           
  1316                           ; 2 bytes @ 0x9
  1317  005C                     	ds	1
  1318  005D                     ___awdiv@counter:	
  1319                           
  1320                           ; 1 bytes @ 0xA
  1321  005D                     	ds	1
  1322  005E                     ___lwdiv@counter:	
  1323  005E                     ___awdiv@sign:	
  1324                           ; 1 bytes @ 0xB
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0xB
  1328  005E                     	ds	1
  1329  005F                     ___awdiv@quotient:	
  1330  005F                     _LoadStockToArray$1091:	
  1331                           ; 2 bytes @ 0xC
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0xC
  1335  005F                     	ds	2
  1336  0061                     ?_DisplayAmnt:	
  1337  0061                     DisplayAmnt@Amnt:	
  1338                           ; 0 bytes @ 0xE
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0xE
  1342  0061                     	ds	2
  1343  0063                     DisplayAmnt@Location:	
  1344                           
  1345                           ; 1 bytes @ 0x10
  1346  0063                     	ds	1
  1347  0064                     _DisplayAmnt$1090:	
  1348                           
  1349                           ; 2 bytes @ 0x11
  1350  0064                     	ds	2
  1351  0066                     ??_main:	
  1352                           
  1353                           ; 0 bytes @ 0x13
  1354  0066                     	ds	3
  1355                           
  1356                           	psect	maintext
  1357  03F4                     __pmaintext:	
  1358 ;;Data sizes: Strings 546, constant 11, data 39, bss 72, persistent 0 stack 0
  1359 ;;Auto spaces:   Size  Autos    Used
  1360 ;; COMMON          14      6       8
  1361 ;; BANK0           80     22      73
  1362 ;; BANK1           80      0      59
  1363 ;; BANK3           96      0       0
  1364 ;; BANK2           96      0       0
  1365 ;;
  1366 ;; Pointer list with targets:
  1367 ;; ?_memcmp	int  size(1) Largest target is 0
  1368 ;;
  1369 ;; ?_strcmp	int  size(1) Largest target is 0
  1370 ;;
  1371 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1372 ;;
  1373 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1374 ;;
  1375 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1376 ;;
  1377 ;; ?___awmod	int  size(1) Largest target is 0
  1378 ;;
  1379 ;; ?___awdiv	int  size(1) Largest target is 0
  1380 ;;
  1381 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 13
  1382 ;;		 -> User3(BANK1[13]), User2(BANK1[13]), User1(BANK1[13]), 
  1383 ;;
  1384 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 15
  1385 ;;		 -> card_store(BANK0[15]), 
  1386 ;;
  1387 ;; memcmp@s2	PTR const void  size(1) Largest target is 20
  1388 ;;		 -> sms(BANK1[20]), 
  1389 ;;
  1390 ;; memcmp@s1	PTR const void  size(2) Largest target is 6
  1391 ;;		 -> STR_44(CODE[6]), 
  1392 ;;
  1393 ;; gsm_read_line2@buffer	PTR unsigned char  size(1) Largest target is 20
  1394 ;;		 -> sms(BANK1[20]), 
  1395 ;;
  1396 ;; usartstring@st	PTR const unsigned char  size(2) Largest target is 29
  1397 ;;		 -> STR_29(CODE[5]), STR_28(CODE[12]), STR_27(CODE[24]), RiseArray(BANK0[5]), 
  1398 ;;		 -> STR_18(CODE[20]), STR_17(CODE[24]), STR_16(CODE[20]), STR_15(CODE[24]), 
  1399 ;;		 -> STR_14(CODE[20]), STR_13(CODE[24]), STR_12(CODE[29]), STR_11(CODE[24]), 
  1400 ;;		 -> STR_10(CODE[27]), STR_9(CODE[24]), STR_7(CODE[19]), STR_6(CODE[11]), 
  1401 ;;		 -> STR_5(CODE[11]), STR_4(CODE[10]), STR_3(CODE[4]), 
  1402 ;;
  1403 ;; lcdstring@a	PTR const unsigned char  size(2) Largest target is 22
  1404 ;;		 -> STR_43(CODE[21]), STR_42(CODE[21]), STR_41(CODE[21]), STR_40(CODE[21]), 
  1405 ;;		 -> STR_39(CODE[21]), STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), 
  1406 ;;		 -> STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), 
  1407 ;;		 -> STR_31(CODE[18]), STR_30(CODE[18]), STR_26(CODE[18]), STR_25(CODE[18]), 
  1408 ;;		 -> STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[22]), STR_21(CODE[22]), 
  1409 ;;		 -> STR_20(CODE[21]), STR_19(CODE[21]), sms(BANK1[20]), STR_8(CODE[10]), 
  1410 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1411 ;;
  1412 ;;
  1413 ;; Critical Paths under _main in COMMON
  1414 ;;
  1415 ;;   None.
  1416 ;;
  1417 ;; Critical Paths under _ISR in COMMON
  1418 ;;
  1419 ;;   _ISR->_gsm_read_line2
  1420 ;;
  1421 ;; Critical Paths under _main in BANK0
  1422 ;;
  1423 ;;   _main->_DisplayAmnt
  1424 ;;   _startup->_lcdstring
  1425 ;;   _DisplayStock->_DisplayAmnt
  1426 ;;   _gsm_init->_lcdstring
  1427 ;;   _DisplayKerosene->_lcdcmd
  1428 ;;   _DisplayKerosene->_lcddata
  1429 ;;   _DisplayKerosene->___lbmod
  1430 ;;   _DisplayRise->_lcdcmd
  1431 ;;   _DisplayRise->_lcddata
  1432 ;;   _DisplayRise->___lbmod
  1433 ;;   _DisplaySugar->_lcdcmd
  1434 ;;   _DisplaySugar->_lcddata
  1435 ;;   _DisplaySugar->___lbmod
  1436 ;;   _DisplayAmnt->___awdiv
  1437 ;;   _lcdstring->_lcddata
  1438 ;;   _lcd_init->_lcdcmd
  1439 ;;   _SendRiseStock->_usartstring
  1440 ;;   _RFID_read->_softreceive
  1441 ;;   _lcddata->_enable
  1442 ;;   _lcdcmd->_enable
  1443 ;;   _LoadStockToArray->___lwdiv
  1444 ;;   _paramter->___wmul
  1445 ;;   _ReadStock->___wmul
  1446 ;;   _ReadAmnt->___wmul
  1447 ;;   _usartstring->_transmit
  1448 ;;   _DelayS->_DelayMs
  1449 ;;   ___awdiv->___awmod
  1450 ;;   ___lwdiv->___lwmod
  1451 ;;   ___wmul->_eeprom_read
  1452 ;;
  1453 ;; Critical Paths under _ISR in BANK0
  1454 ;;
  1455 ;;   None.
  1456 ;;
  1457 ;; Critical Paths under _main in BANK1
  1458 ;;
  1459 ;;   None.
  1460 ;;
  1461 ;; Critical Paths under _ISR in BANK1
  1462 ;;
  1463 ;;   None.
  1464 ;;
  1465 ;; Critical Paths under _main in BANK3
  1466 ;;
  1467 ;;   None.
  1468 ;;
  1469 ;; Critical Paths under _ISR in BANK3
  1470 ;;
  1471 ;;   None.
  1472 ;;
  1473 ;; Critical Paths under _main in BANK2
  1474 ;;
  1475 ;;   None.
  1476 ;;
  1477 ;; Critical Paths under _ISR in BANK2
  1478 ;;
  1479 ;;   None.
  1480 ;;
  1481 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1482 ;;
  1483 ;;
  1484 ;;Call Graph Tables:
  1485 ;;
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1488 ;; ---------------------------------------------------------------------------------
  1489 ;; (0) _main                                                 3     3      0   10577
  1490 ;;                                             19 BANK0      3     3      0
  1491 ;;                          _uart_init
  1492 ;;                           _lcd_init
  1493 ;;                           _paramter
  1494 ;;                  _SoftWareUart_Init
  1495 ;;                            _startup
  1496 ;;                           _gsm_init
  1497 ;;                          _lcdstring
  1498 ;;                             _lcdcmd
  1499 ;;                          _RFID_read
  1500 ;;                             _strcmp
  1501 ;;                           _ReadAmnt
  1502 ;;                        _DisplayAmnt
  1503 ;;                        _DisplayRise
  1504 ;;                       _DisplaySugar
  1505 ;;                    _DisplayKerosene
  1506 ;;                          _ReadStock
  1507 ;;                   _LoadStockToArray
  1508 ;;                       _DisplayStock
  1509 ;;                             _memcmp
  1510 ;;                      _SendRiseStock
  1511 ;; ---------------------------------------------------------------------------------
  1512 ;; (1) _startup                                              3     3      0     585
  1513 ;;                                              7 BANK0      3     3      0
  1514 ;;                             _lcdcmd
  1515 ;;                          _lcdstring
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (1) _DisplayStock                                         0     0      0    2027
  1518 ;;                             _lcdcmd
  1519 ;;                          _lcdstring
  1520 ;;                        _DisplayAmnt
  1521 ;; ---------------------------------------------------------------------------------
  1522 ;; (1) _gsm_init                                             1     1      0     842
  1523 ;;                             _lcdcmd
  1524 ;;                          _lcdstring
  1525 ;;                             _DelayS
  1526 ;;                        _usartstring
  1527 ;;                           _transmit
  1528 ;;                            _receive
  1529 ;; ---------------------------------------------------------------------------------
  1530 ;; (1) _DisplayKerosene                                      2     1      1    1086
  1531 ;;                                              5 BANK0      2     1      1
  1532 ;;                             _lcdcmd
  1533 ;;                            ___lbdiv
  1534 ;;                            _lcddata
  1535 ;;                            ___lbmod
  1536 ;; ---------------------------------------------------------------------------------
  1537 ;; (1) _DisplayRise                                          2     1      1    1086
  1538 ;;                                              5 BANK0      2     1      1
  1539 ;;                             _lcdcmd
  1540 ;;                            ___lbdiv
  1541 ;;                            _lcddata
  1542 ;;                            ___lbmod
  1543 ;; ---------------------------------------------------------------------------------
  1544 ;; (1) _DisplaySugar                                         2     1      1    1086
  1545 ;;                                              5 BANK0      2     1      1
  1546 ;;                             _lcdcmd
  1547 ;;                            ___lbdiv
  1548 ;;                            _lcddata
  1549 ;;                            ___lbmod
  1550 ;; ---------------------------------------------------------------------------------
  1551 ;; (2) _DisplayAmnt                                          5     3      2    1442
  1552 ;;                                             14 BANK0      5     3      2
  1553 ;;                             _lcdcmd
  1554 ;;                            ___awdiv
  1555 ;;                            _lcddata
  1556 ;;                            ___awmod
  1557 ;; ---------------------------------------------------------------------------------
  1558 ;; (2) _lcdstring                                            2     0      2     325
  1559 ;;                                              5 BANK0      2     0      2
  1560 ;;                            _lcddata
  1561 ;; ---------------------------------------------------------------------------------
  1562 ;; (1) _lcd_init                                             2     2      0     384
  1563 ;;                                              5 BANK0      2     2      0
  1564 ;;                            _lcdport
  1565 ;;                             _lcdcmd
  1566 ;; ---------------------------------------------------------------------------------
  1567 ;; (1) _SendRiseStock                                        1     1      0     127
  1568 ;;                        _usartstring
  1569 ;;                           _transmit
  1570 ;;                            _receive
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (1) _RFID_read                                            2     2      0     235
  1573 ;;                                              3 BANK0      2     2      0
  1574 ;;                        _softreceive
  1575 ;; ---------------------------------------------------------------------------------
  1576 ;; (3) _lcddata                                              3     3      0     260
  1577 ;;                                              2 BANK0      3     3      0
  1578 ;;                            _lcdport
  1579 ;;                             _enable
  1580 ;; ---------------------------------------------------------------------------------
  1581 ;; (3) _lcdcmd                                               3     3      0     260
  1582 ;;                                              2 BANK0      3     3      0
  1583 ;;                            _lcdport
  1584 ;;                             _enable
  1585 ;; ---------------------------------------------------------------------------------
  1586 ;; (1) _LoadStockToArray                                     2     2      0     428
  1587 ;;                                             12 BANK0      2     2      0
  1588 ;;                            ___lwdiv
  1589 ;;                            ___lwmod
  1590 ;; ---------------------------------------------------------------------------------
  1591 ;; (1) _paramter                                             0     0      0     123
  1592 ;;                        _eeprom_read
  1593 ;;                             ___wmul
  1594 ;; ---------------------------------------------------------------------------------
  1595 ;; (1) _ReadStock                                            0     0      0     123
  1596 ;;                        _eeprom_read
  1597 ;;                             ___wmul
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (1) _ReadAmnt                                             0     0      0     123
  1600 ;;                        _eeprom_read
  1601 ;;                             ___wmul
  1602 ;; ---------------------------------------------------------------------------------
  1603 ;; (2) _usartstring                                          2     0      2      96
  1604 ;;                                              1 BANK0      2     0      2
  1605 ;;                           _transmit
  1606 ;; ---------------------------------------------------------------------------------
  1607 ;; (2) _softreceive                                          3     3      0     136
  1608 ;;                                              0 BANK0      3     3      0
  1609 ;; ---------------------------------------------------------------------------------
  1610 ;; (1) _SoftWareUart_Init                                    1     1      0       0
  1611 ;;                                              0 BANK0      1     1      0
  1612 ;; ---------------------------------------------------------------------------------
  1613 ;; (4) _enable                                               2     2      0       0
  1614 ;;                                              0 BANK0      2     2      0
  1615 ;; ---------------------------------------------------------------------------------
  1616 ;; (2) _DelayS                                               2     2      0     130
  1617 ;;                                              2 BANK0      2     2      0
  1618 ;;                            _DelayMs
  1619 ;; ---------------------------------------------------------------------------------
  1620 ;; (3) ___awmod                                              6     2      4     433
  1621 ;;                                              0 BANK0      6     2      4
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (3) ___awdiv                                              8     4      4     300
  1624 ;;                                              6 BANK0      8     4      4
  1625 ;;                            ___awmod (ARG)
  1626 ;; ---------------------------------------------------------------------------------
  1627 ;; (2) ___lbmod                                              5     4      1     232
  1628 ;;                                              0 BANK0      5     4      1
  1629 ;; ---------------------------------------------------------------------------------
  1630 ;; (2) ___lbdiv                                              4     3      1     241
  1631 ;;                                              0 BANK0      4     3      1
  1632 ;; ---------------------------------------------------------------------------------
  1633 ;; (2) ___lwmod                                              5     1      4     232
  1634 ;;                                              0 BANK0      5     1      4
  1635 ;; ---------------------------------------------------------------------------------
  1636 ;; (2) ___lwdiv                                              7     3      4     162
  1637 ;;                                              5 BANK0      7     3      4
  1638 ;;                            ___lwmod (ARG)
  1639 ;; ---------------------------------------------------------------------------------
  1640 ;; (2) ___wmul                                               6     2      4      92
  1641 ;;                                              3 BANK0      6     2      4
  1642 ;;                        _eeprom_read (ARG)
  1643 ;; ---------------------------------------------------------------------------------
  1644 ;; (1) _memcmp                                               6     1      5     168
  1645 ;;                                              0 BANK0      6     1      5
  1646 ;; ---------------------------------------------------------------------------------
  1647 ;; (1) _strcmp                                               6     4      2     127
  1648 ;;                                              0 BANK0      6     4      2
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (1) _uart_init                                            0     0      0       0
  1651 ;; ---------------------------------------------------------------------------------
  1652 ;; (2) _eeprom_read                                          3     3      0      31
  1653 ;;                                              0 BANK0      3     3      0
  1654 ;; ---------------------------------------------------------------------------------
  1655 ;; (2) _transmit                                             1     1      0      31
  1656 ;;                                              0 BANK0      1     1      0
  1657 ;; ---------------------------------------------------------------------------------
  1658 ;; (2) _receive                                              0     0      0       0
  1659 ;; ---------------------------------------------------------------------------------
  1660 ;; (4) _lcdport                                              1     1      0     124
  1661 ;;                                              0 BANK0      1     1      0
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (3) _DelayMs                                              2     2      0      65
  1664 ;;                                              0 BANK0      2     2      0
  1665 ;; ---------------------------------------------------------------------------------
  1666 ;; Estimated maximum stack depth 4
  1667 ;; ---------------------------------------------------------------------------------
  1668 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1669 ;; ---------------------------------------------------------------------------------
  1670 ;; (5) _ISR                                                  3     3      0     138
  1671 ;;                                              3 COMMON     3     3      0
  1672 ;;                     _gsm_read_line2
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (6) _gsm_read_line2                                       3     3      0     138
  1675 ;;                                              0 COMMON     3     3      0
  1676 ;;                          i1_receive
  1677 ;; ---------------------------------------------------------------------------------
  1678 ;; (7) i1_receive                                            0     0      0       0
  1679 ;; ---------------------------------------------------------------------------------
  1680 ;; Estimated maximum stack depth 7
  1681 ;; ---------------------------------------------------------------------------------
  1682 ;; Call Graph Graphs:
  1683 ;; _main (ROOT)
  1684 ;;   _uart_init
  1685 ;;   _lcd_init
  1686 ;;     _lcdport
  1687 ;;     _lcdcmd
  1688 ;;       _lcdport
  1689 ;;       _enable
  1690 ;;   _paramter
  1691 ;;     _eeprom_read
  1692 ;;     ___wmul
  1693 ;;       _eeprom_read (ARG)
  1694 ;;   _SoftWareUart_Init
  1695 ;;   _startup
  1696 ;;     _lcdcmd
  1697 ;;       _lcdport
  1698 ;;       _enable
  1699 ;;     _lcdstring
  1700 ;;       _lcddata
  1701 ;;         _lcdport
  1702 ;;         _enable
  1703 ;;   _gsm_init
  1704 ;;     _lcdcmd
  1705 ;;       _lcdport
  1706 ;;       _enable
  1707 ;;     _lcdstring
  1708 ;;       _lcddata
  1709 ;;         _lcdport
  1710 ;;         _enable
  1711 ;;     _DelayS
  1712 ;;       _DelayMs
  1713 ;;     _usartstring
  1714 ;;       _transmit
  1715 ;;     _transmit
  1716 ;;     _receive
  1717 ;;   _lcdstring
  1718 ;;     _lcddata
  1719 ;;       _lcdport
  1720 ;;       _enable
  1721 ;;   _lcdcmd
  1722 ;;     _lcdport
  1723 ;;     _enable
  1724 ;;   _RFID_read
  1725 ;;     _softreceive
  1726 ;;   _strcmp
  1727 ;;   _ReadAmnt
  1728 ;;     _eeprom_read
  1729 ;;     ___wmul
  1730 ;;       _eeprom_read (ARG)
  1731 ;;   _DisplayAmnt
  1732 ;;     _lcdcmd
  1733 ;;       _lcdport
  1734 ;;       _enable
  1735 ;;     ___awdiv
  1736 ;;       ___awmod (ARG)
  1737 ;;     _lcddata
  1738 ;;       _lcdport
  1739 ;;       _enable
  1740 ;;     ___awmod
  1741 ;;   _DisplayRise
  1742 ;;     _lcdcmd
  1743 ;;       _lcdport
  1744 ;;       _enable
  1745 ;;     ___lbdiv
  1746 ;;     _lcddata
  1747 ;;       _lcdport
  1748 ;;       _enable
  1749 ;;     ___lbmod
  1750 ;;   _DisplaySugar
  1751 ;;     _lcdcmd
  1752 ;;       _lcdport
  1753 ;;       _enable
  1754 ;;     ___lbdiv
  1755 ;;     _lcddata
  1756 ;;       _lcdport
  1757 ;;       _enable
  1758 ;;     ___lbmod
  1759 ;;   _DisplayKerosene
  1760 ;;     _lcdcmd
  1761 ;;       _lcdport
  1762 ;;       _enable
  1763 ;;     ___lbdiv
  1764 ;;     _lcddata
  1765 ;;       _lcdport
  1766 ;;       _enable
  1767 ;;     ___lbmod
  1768 ;;   _ReadStock
  1769 ;;     _eeprom_read
  1770 ;;     ___wmul
  1771 ;;       _eeprom_read (ARG)
  1772 ;;   _LoadStockToArray
  1773 ;;     ___lwdiv
  1774 ;;       ___lwmod (ARG)
  1775 ;;     ___lwmod
  1776 ;;   _DisplayStock
  1777 ;;     _lcdcmd
  1778 ;;       _lcdport
  1779 ;;       _enable
  1780 ;;     _lcdstring
  1781 ;;       _lcddata
  1782 ;;         _lcdport
  1783 ;;         _enable
  1784 ;;     _DisplayAmnt
  1785 ;;       _lcdcmd
  1786 ;;         _lcdport
  1787 ;;         _enable
  1788 ;;       ___awdiv
  1789 ;;         ___awmod (ARG)
  1790 ;;       _lcddata
  1791 ;;         _lcdport
  1792 ;;         _enable
  1793 ;;       ___awmod
  1794 ;;   _memcmp
  1795 ;;   _SendRiseStock
  1796 ;;     _usartstring
  1797 ;;       _transmit
  1798 ;;     _transmit
  1799 ;;     _receive
  1800 ;;
  1801 ;; _ISR (ROOT)
  1802 ;;   _gsm_read_line2
  1803 ;;     i1_receive
  1804 ;;
  1805 ;; Address spaces:
  1806 ;;Name               Size   Autos  Total    Cost      Usage
  1807 ;;BANK3               60      0       0       9        0.0%
  1808 ;;BITBANK3            60      0       0       8        0.0%
  1809 ;;SFR3                 0      0       0       4        0.0%
  1810 ;;BITSFR3              0      0       0       4        0.0%
  1811 ;;BANK2               60      0       0      11        0.0%
  1812 ;;BITBANK2            60      0       0      10        0.0%
  1813 ;;SFR2                 0      0       0       5        0.0%
  1814 ;;BITSFR2              0      0       0       5        0.0%
  1815 ;;SFR1                 0      0       0       2        0.0%
  1816 ;;BITSFR1              0      0       0       2        0.0%
  1817 ;;BANK1               50      0      3B       7       73.8%
  1818 ;;BITBANK1            50      0       0       6        0.0%
  1819 ;;CODE                 0      0       0       0        0.0%
  1820 ;;DATA                 0      0      96      12        0.0%
  1821 ;;ABS                  0      0      8C       3        0.0%
  1822 ;;NULL                 0      0       0       0        0.0%
  1823 ;;STACK                0      0       A       2        0.0%
  1824 ;;BANK0               50     16      49       5       91.3%
  1825 ;;BITBANK0            50      0       0       4        0.0%
  1826 ;;SFR0                 0      0       0       1        0.0%
  1827 ;;BITSFR0              0      0       0       1        0.0%
  1828 ;;COMMON               E      6       8       1       57.1%
  1829 ;;BITCOMMON            E      0       1       0        7.1%
  1830 ;;EEDATA             100      0       0       0        0.0%
  1831                           
  1832                           
  1833 ;; *************** function _main *****************
  1834 ;; Defined at:
  1835 ;;		line 204 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;		None               void
  1842 ;; Registers used:
  1843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 17F/0
  1846 ;;		On exit  : 60/20
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0
  1851 ;;      Temps:          0       3       0       0       0
  1852 ;;      Totals:         0       3       0       0       0
  1853 ;;Total ram usage:        3 bytes
  1854 ;; Hardware stack levels required when called:    7
  1855 ;; This function calls:
  1856 ;;		_uart_init
  1857 ;;		_lcd_init
  1858 ;;		_paramter
  1859 ;;		_SoftWareUart_Init
  1860 ;;		_startup
  1861 ;;		_gsm_init
  1862 ;;		_lcdstring
  1863 ;;		_lcdcmd
  1864 ;;		_RFID_read
  1865 ;;		_strcmp
  1866 ;;		_ReadAmnt
  1867 ;;		_DisplayAmnt
  1868 ;;		_DisplayRise
  1869 ;;		_DisplaySugar
  1870 ;;		_DisplayKerosene
  1871 ;;		_ReadStock
  1872 ;;		_LoadStockToArray
  1873 ;;		_DisplayStock
  1874 ;;		_memcmp
  1875 ;;		_SendRiseStock
  1876 ;; This function is called by:
  1877 ;;		Startup code after reset
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880  03F4                     _main:	
  1881                           
  1882                           ;Main.c: 205: ANSEL=0x00;
  1883                           
  1884                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1885  03F4  1683               	bsf	3,5	;RP0=1, select bank3
  1886  03F5  1703               	bsf	3,6	;RP1=1, select bank3
  1887  03F6  0188               	clrf	8	;volatile
  1888                           
  1889                           ;Main.c: 206: ANSELH=0x00;
  1890  03F7  0189               	clrf	9	;volatile
  1891                           
  1892                           ;Main.c: 207: TRISD=0X01;
  1893  03F8  3001               	movlw	1
  1894  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1895  03FA  0088               	movwf	8	;volatile
  1896                           
  1897                           ;Main.c: 208: PORTD=0X00;
  1898  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1899  03FC  0188               	clrf	8	;volatile
  1900                           
  1901                           ;Main.c: 209: TRISC=0X8F;
  1902  03FD  308F               	movlw	143
  1903  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  1904  03FF  0087               	movwf	7	;volatile
  1905                           
  1906                           ;Main.c: 210: PORTC=0X00;
  1907  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0401  0187               	clrf	7	;volatile
  1909                           
  1910                           ;Main.c: 211: INTCON=0xC0;
  1911  0402  30C0               	movlw	192
  1912  0403  008B               	movwf	11	;volatile
  1913                           
  1914                           ;Main.c: 212: uart_init();
  1915  0404  120A  158A  2678   	fcall	_uart_init
      +       120A  118A         
  1916                           
  1917                           ;Main.c: 213: lcd_init();
  1918  0409  120A  118A  21D7   	fcall	_lcd_init
      +       120A  118A         
  1919                           
  1920                           ;Main.c: 214: paramter();
  1921  040E  120A  158A  270F   	fcall	_paramter
      +       120A  118A         
  1922                           
  1923                           ;Main.c: 215: SoftWareUart_Init();
  1924  0413  120A  158A  266A   	fcall	_SoftWareUart_Init
      +       120A  118A         
  1925                           
  1926                           ;Main.c: 216: startup();
  1927  0418  120A  118A  2181   	fcall	_startup
      +       120A  118A         
  1928                           
  1929                           ;Main.c: 217: gsm_init();
  1930  041D  120A  118A  20D2   	fcall	_gsm_init
      +       120A  118A         
  1931                           
  1932                           ;Main.c: 218: PIE1=0x20;
  1933  0422  3020               	movlw	32
  1934  0423  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0424  008C               	movwf	12	;volatile
  1936  0425                     l4098:	
  1937                           
  1938                           ;Main.c: 221: {
  1939                           ;Main.c: 223: if(!RC0)
  1940  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0426  1807               	btfsc	7,0
  1942  0427  2C4D               	goto	l4110
  1943                           
  1944                           ;Main.c: 224: {
  1945                           ;Main.c: 225: lcdstring("PLEASE TAP YOUR  ");
  1946  0428  30B4               	movlw	low (STR_25| (0+32768))
  1947  0429  00D8               	movwf	?_lcdstring
  1948  042A  3091               	movlw	high (STR_25| (0+32768))
  1949  042B  00D9               	movwf	?_lcdstring+1
  1950  042C  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  1951                           
  1952                           ;Main.c: 226: lcdcmd(0xC0);
  1953  0431  30C0               	movlw	192
  1954  0432  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  1955                           
  1956                           ;Main.c: 227: lcdstring("SMART CARD       ");
  1957  0437  3090               	movlw	low (STR_26| (0+32768))
  1958  0438  00D8               	movwf	?_lcdstring
  1959  0439  3091               	movlw	high (STR_26| (0+32768))
  1960  043A  00D9               	movwf	?_lcdstring+1
  1961  043B  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  1962                           
  1963                           ;Main.c: 228: _delay((unsigned long)((200)*(20000000/4000.0)));
  1964  0440  3006               	movlw	6
  1965  0441  00E8               	movwf	??_main+2
  1966  0442  300E               	movlw	14
  1967  0443  00E7               	movwf	??_main+1
  1968  0444  30B0               	movlw	176
  1969  0445  00E6               	movwf	??_main
  1970  0446                     u2047:	
  1971  0446  0BE6               	decfsz	??_main,f
  1972  0447  2C46               	goto	u2047
  1973  0448  0BE7               	decfsz	??_main+1,f
  1974  0449  2C46               	goto	u2047
  1975  044A  0BE8               	decfsz	??_main+2,f
  1976  044B  2C46               	goto	u2047
  1977                           
  1978                           ;Main.c: 229: rfid_flag=0;
  1979  044C  1076               	bcf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  1980  044D                     l4110:	
  1981                           
  1982                           ;Main.c: 230: }
  1983                           ;Main.c: 231: RFID_read();
  1984  044D  120A  118A  275E   	fcall	_RFID_read
      +       120A  118A         
  1985                           
  1986                           ;Main.c: 232: lcdcmd(0xD4);
  1987  0452  30D4               	movlw	212
  1988  0453  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  1989                           
  1990                           ;Main.c: 233: lcdstring(sms);
  1991  0458  30C7               	movlw	_sms& (0+255)
  1992  0459  00D8               	movwf	?_lcdstring
  1993  045A  01D9               	clrf	?_lcdstring+1
  1994  045B  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  1995                           
  1996                           ;Main.c: 236: if(strcmp(card_store,User1)==0)
  1997  0460  30A0               	movlw	_User1& (0+255)
  1998  0461  00D3               	movwf	?_strcmp
  1999  0462  303F               	movlw	_card_store& (0+255)
  2000  0463  120A  158A  2699   	fcall	_strcmp
      +       120A  118A         
  2001  0468  0854               	movf	?_strcmp+1,w
  2002  0469  0453               	iorwf	?_strcmp,w
  2003  046A  1D03               	skipz
  2004  046B  2C71               	goto	l4122
  2005                           
  2006                           ;Main.c: 237: {
  2007                           ;Main.c: 238: User=1;
  2008  046C  01AE               	clrf	_User
  2009  046D  0AAE               	incf	_User,f
  2010  046E                     L1:	
  2011  046E  01AF               	clrf	_User+1
  2012                           
  2013                           ;Main.c: 239: card_store[0]=0;
  2014  046F  01BF               	clrf	_card_store
  2015                           
  2016                           ;Main.c: 240: }
  2017  0470  2DAE               	goto	l4196
  2018  0471                     l4122:	
  2019                           
  2020                           ;Main.c: 241: else if(strcmp(card_store,User2)==0)
  2021  0471  30AD               	movlw	_User2& (0+255)
  2022  0472  00D3               	movwf	?_strcmp
  2023  0473  303F               	movlw	_card_store& (0+255)
  2024  0474  120A  158A  2699   	fcall	_strcmp
      +       120A  118A         
  2025  0479  0854               	movf	?_strcmp+1,w
  2026  047A  0453               	iorwf	?_strcmp,w
  2027  047B  1D03               	skipz
  2028  047C  2C7F               	goto	l4128
  2029                           
  2030                           ;Main.c: 242: {
  2031                           ;Main.c: 243: User=2;
  2032  047D  3002               	movlw	2
  2033  047E  2C8C               	goto	L3
  2034  047F                     l4128:	
  2035                           
  2036                           ;Main.c: 246: else if(strcmp(card_store,User3)==0)
  2037  047F  30BA               	movlw	_User3& (0+255)
  2038  0480  00D3               	movwf	?_strcmp
  2039  0481  303F               	movlw	_card_store& (0+255)
  2040  0482  120A  158A  2699   	fcall	_strcmp
      +       120A  118A         
  2041  0487  0854               	movf	?_strcmp+1,w
  2042  0488  0453               	iorwf	?_strcmp,w
  2043  0489  1D03               	skipz
  2044  048A  2DAE               	goto	l4196
  2045                           
  2046                           ;Main.c: 247: {
  2047                           ;Main.c: 248: User=3;
  2048  048B  3003               	movlw	3
  2049  048C                     L3:	
  2050  048C  00AE               	movwf	_User
  2051  048D  2C6E               	goto	L1
  2052  048E                     l4134:	
  2053                           ;Main.c: 250: }
  2054                           ;Main.c: 252: switch(User)
  2055                           
  2056                           
  2057                           ;Main.c: 255: {
  2058                           ;Main.c: 256: ReadAmnt();
  2059  048E  120A  158A  274C   	fcall	_ReadAmnt
      +       120A  118A         
  2060                           
  2061                           ;Main.c: 257: lcdcmd(0x80);
  2062  0493  3080               	movlw	128
  2063  0494  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2064                           
  2065                           ;Main.c: 258: lcdstring("USER1 AMOUNT:       ");
  2066  0499  30C3               	movlw	low (STR_32| (0+32768))
  2067  049A  00D8               	movwf	?_lcdstring
  2068  049B  3090               	movlw	high (STR_32| (0+32768))
  2069  049C  00D9               	movwf	?_lcdstring+1
  2070  049D  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2071                           
  2072                           ;Main.c: 259: DisplayAmnt(0X8D,User1amt);
  2073  04A2  0831               	movf	_User1amt+1,w
  2074  04A3  00E2               	movwf	?_DisplayAmnt+1
  2075  04A4  0830               	movf	_User1amt,w
  2076  04A5  00E1               	movwf	?_DisplayAmnt
  2077  04A6  308D               	movlw	141
  2078  04A7  120A  118A  2265   	fcall	_DisplayAmnt
      +       120A  118A         
  2079                           
  2080                           ;Main.c: 260: lcdcmd(0xC0);
  2081  04AC  30C0               	movlw	192
  2082  04AD  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2083                           
  2084                           ;Main.c: 261: lcdstring("RISE:   Kg          ");
  2085  04B2  3099               	movlw	low (STR_33| (0+32768))
  2086  04B3  00D8               	movwf	?_lcdstring
  2087  04B4  3090               	movlw	high (STR_33| (0+32768))
  2088  04B5  00D9               	movwf	?_lcdstring+1
  2089  04B6  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2090                           
  2091                           ;Main.c: 262: DisplayRise(0XC5,User1Rise);
  2092  04BB  0837               	movf	_User1Rise,w
  2093  04BC  00D8               	movwf	?_DisplayRise
  2094  04BD  30C5               	movlw	197
  2095  04BE  120A  118A  2011   	fcall	_DisplayRise
      +       120A  118A         
  2096                           
  2097                           ;Main.c: 263: lcdcmd(0x94);
  2098  04C3  3094               	movlw	148
  2099  04C4  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2100                           
  2101                           ;Main.c: 264: lcdstring("SUGAR:   Kg         ");
  2102  04C9  30AE               	movlw	low (STR_34| (0+32768))
  2103  04CA  00D8               	movwf	?_lcdstring
  2104  04CB  3090               	movlw	high (STR_34| (0+32768))
  2105  04CC  00D9               	movwf	?_lcdstring+1
  2106  04CD  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2107                           
  2108                           ;Main.c: 265: DisplaySugar(0x9A,User1Sugar);
  2109  04D2  0838               	movf	_User1Sugar,w
  2110  04D3  00D8               	movwf	?_DisplaySugar
  2111  04D4  309A               	movlw	154
  2112  04D5  120A  118A  2035   	fcall	_DisplaySugar
      +       120A  118A         
  2113                           
  2114                           ;Main.c: 266: lcdcmd(0xD4);
  2115  04DA  30D4               	movlw	212
  2116  04DB  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2117                           
  2118                           ;Main.c: 267: lcdstring("KEROSENE:   Lts     ");
  2119  04E0  3017               	movlw	low (STR_35| (0+32768))
  2120  04E1  00D8               	movwf	?_lcdstring
  2121  04E2  3091               	movlw	high (STR_35| (0+32768))
  2122  04E3  00D9               	movwf	?_lcdstring+1
  2123  04E4  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2124                           
  2125                           ;Main.c: 268: DisplayKerosene(0XDD,User1Kerosene);
  2126  04E9  0836               	movf	_User1Kerosene,w
  2127  04EA                     L2:	
  2128  04EA  00D8               	movwf	?_DisplayKerosene
  2129  04EB  30DD               	movlw	221
  2130  04EC  120A  118A  25F6   	fcall	_DisplayKerosene
      +       120A  118A         
  2131                           
  2132                           ;Main.c: 269: User=0;
  2133  04F1  01AE               	clrf	_User
  2134  04F2  01AF               	clrf	_User+1
  2135                           
  2136                           ;Main.c: 270: break;
  2137  04F3  2DBC               	goto	l4198
  2138  04F4                     l4154:	
  2139                           
  2140                           ;Main.c: 273: {
  2141                           ;Main.c: 274: ReadAmnt();
  2142  04F4  120A  158A  274C   	fcall	_ReadAmnt
      +       120A  118A         
  2143                           
  2144                           ;Main.c: 275: lcdcmd(0x80);
  2145  04F9  3080               	movlw	128
  2146  04FA  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2147                           
  2148                           ;Main.c: 276: lcdstring("USER2 AMOUNT:       ");
  2149  04FF  30D8               	movlw	low (STR_36| (0+32768))
  2150  0500  00D8               	movwf	?_lcdstring
  2151  0501  3090               	movlw	high (STR_36| (0+32768))
  2152  0502  00D9               	movwf	?_lcdstring+1
  2153  0503  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2154                           
  2155                           ;Main.c: 277: DisplayAmnt(0X8D,User2amt);
  2156  0508  0833               	movf	_User2amt+1,w
  2157  0509  00E2               	movwf	?_DisplayAmnt+1
  2158  050A  0832               	movf	_User2amt,w
  2159  050B  00E1               	movwf	?_DisplayAmnt
  2160  050C  308D               	movlw	141
  2161  050D  120A  118A  2265   	fcall	_DisplayAmnt
      +       120A  118A         
  2162                           
  2163                           ;Main.c: 278: lcdcmd(0xC0);
  2164  0512  30C0               	movlw	192
  2165  0513  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2166                           
  2167                           ;Main.c: 279: lcdstring("RISE:   Kg          ");
  2168  0518  3099               	movlw	low (STR_33| (0+32768))
  2169  0519  00D8               	movwf	?_lcdstring
  2170  051A  3090               	movlw	high (STR_33| (0+32768))
  2171  051B  00D9               	movwf	?_lcdstring+1
  2172  051C  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2173                           
  2174                           ;Main.c: 280: DisplayRise(0XC5,User2Rise);
  2175  0521  083A               	movf	_User2Rise,w
  2176  0522  00D8               	movwf	?_DisplayRise
  2177  0523  30C5               	movlw	197
  2178  0524  120A  118A  2011   	fcall	_DisplayRise
      +       120A  118A         
  2179                           
  2180                           ;Main.c: 281: lcdcmd(0x94);
  2181  0529  3094               	movlw	148
  2182  052A  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2183                           
  2184                           ;Main.c: 282: lcdstring("SUGAR:   Kg         ");
  2185  052F  30AE               	movlw	low (STR_34| (0+32768))
  2186  0530  00D8               	movwf	?_lcdstring
  2187  0531  3090               	movlw	high (STR_34| (0+32768))
  2188  0532  00D9               	movwf	?_lcdstring+1
  2189  0533  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2190                           
  2191                           ;Main.c: 283: DisplaySugar(0x9A,User2Sugar);
  2192  0538  083B               	movf	_User2Sugar,w
  2193  0539  00D8               	movwf	?_DisplaySugar
  2194  053A  309A               	movlw	154
  2195  053B  120A  118A  2035   	fcall	_DisplaySugar
      +       120A  118A         
  2196                           
  2197                           ;Main.c: 284: lcdcmd(0xD4);
  2198  0540  30D4               	movlw	212
  2199  0541  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2200                           
  2201                           ;Main.c: 285: lcdstring("KEROSENE:   Lts     ");
  2202  0546  3017               	movlw	low (STR_35| (0+32768))
  2203  0547  00D8               	movwf	?_lcdstring
  2204  0548  3091               	movlw	high (STR_35| (0+32768))
  2205  0549  00D9               	movwf	?_lcdstring+1
  2206  054A  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2207                           
  2208                           ;Main.c: 286: DisplayKerosene(0XDD,User2Kerosene);
  2209  054F  0839               	movf	_User2Kerosene,w
  2210  0550  2CEA               	goto	L2
  2211  0551                     l4174:	
  2212                           
  2213                           ;Main.c: 291: {
  2214                           ;Main.c: 292: ReadAmnt();
  2215  0551  120A  158A  274C   	fcall	_ReadAmnt
      +       120A  118A         
  2216                           
  2217                           ;Main.c: 293: lcdcmd(0x80);
  2218  0556  3080               	movlw	128
  2219  0557  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2220                           
  2221                           ;Main.c: 294: lcdstring("USER3 AMOUNT:       ");
  2222  055C  30ED               	movlw	low (STR_40| (0+32768))
  2223  055D  00D8               	movwf	?_lcdstring
  2224  055E  3090               	movlw	high (STR_40| (0+32768))
  2225  055F  00D9               	movwf	?_lcdstring+1
  2226  0560  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2227                           
  2228                           ;Main.c: 295: DisplayAmnt(0X8D,User3amt);
  2229  0565  0835               	movf	_User3amt+1,w
  2230  0566  00E2               	movwf	?_DisplayAmnt+1
  2231  0567  0834               	movf	_User3amt,w
  2232  0568  00E1               	movwf	?_DisplayAmnt
  2233  0569  308D               	movlw	141
  2234  056A  120A  118A  2265   	fcall	_DisplayAmnt
      +       120A  118A         
  2235                           
  2236                           ;Main.c: 296: lcdcmd(0xC0);
  2237  056F  30C0               	movlw	192
  2238  0570  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2239                           
  2240                           ;Main.c: 297: lcdstring("RISE:   Kg          ");
  2241  0575  3099               	movlw	low (STR_33| (0+32768))
  2242  0576  00D8               	movwf	?_lcdstring
  2243  0577  3090               	movlw	high (STR_33| (0+32768))
  2244  0578  00D9               	movwf	?_lcdstring+1
  2245  0579  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2246                           
  2247                           ;Main.c: 298: DisplayRise(0XC5,User3Rise);
  2248  057E  083D               	movf	_User3Rise,w
  2249  057F  00D8               	movwf	?_DisplayRise
  2250  0580  30C5               	movlw	197
  2251  0581  120A  118A  2011   	fcall	_DisplayRise
      +       120A  118A         
  2252                           
  2253                           ;Main.c: 299: lcdcmd(0x94);
  2254  0586  3094               	movlw	148
  2255  0587  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2256                           
  2257                           ;Main.c: 300: lcdstring("SUGAR:   Kg         ");
  2258  058C  30AE               	movlw	low (STR_34| (0+32768))
  2259  058D  00D8               	movwf	?_lcdstring
  2260  058E  3090               	movlw	high (STR_34| (0+32768))
  2261  058F  00D9               	movwf	?_lcdstring+1
  2262  0590  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2263                           
  2264                           ;Main.c: 301: DisplaySugar(0x9A,User3Sugar);
  2265  0595  083E               	movf	_User3Sugar,w
  2266  0596  00D8               	movwf	?_DisplaySugar
  2267  0597  309A               	movlw	154
  2268  0598  120A  118A  2035   	fcall	_DisplaySugar
      +       120A  118A         
  2269                           
  2270                           ;Main.c: 302: lcdcmd(0xD4);
  2271  059D  30D4               	movlw	212
  2272  059E  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2273                           
  2274                           ;Main.c: 303: lcdstring("KEROSENE:   Lts     ");
  2275  05A3  3017               	movlw	low (STR_35| (0+32768))
  2276  05A4  00D8               	movwf	?_lcdstring
  2277  05A5  3091               	movlw	high (STR_35| (0+32768))
  2278  05A6  00D9               	movwf	?_lcdstring+1
  2279  05A7  120A  118A  2233   	fcall	_lcdstring
      +       120A  118A         
  2280                           
  2281                           ;Main.c: 304: DisplayKerosene(0XDD,User3Kerosene);
  2282  05AC  083C               	movf	_User3Kerosene,w
  2283  05AD  2CEA               	goto	L2
  2284  05AE                     l4196:	
  2285                           
  2286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2287                           ; Switch size 1, requested type "space"
  2288                           ; Number of cases is 1, Range of values is 0 to 0
  2289                           ; switch strategies available:
  2290                           ; Name         Bytes Cycles
  2291                           ; simple_byte     4     3 (average)
  2292                           ; direct_byte    22    19 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  05AE  082F               	movf	_User+1,w
  2295  05AF  3A00               	xorlw	0	; case 0
  2296  05B0  1D03               	btfss	3,2
  2297  05B1  2DBC               	goto	l4198
  2298                           
  2299                           ; Switch size 1, requested type "space"
  2300                           ; Number of cases is 3, Range of values is 1 to 3
  2301                           ; switch strategies available:
  2302                           ; Name         Bytes Cycles
  2303                           ; simple_byte    10     6 (average)
  2304                           ; direct_byte    31    22 (fixed)
  2305                           ;	Chosen strategy is simple_byte
  2306  05B2  082E               	movf	_User,w
  2307  05B3  3A01               	xorlw	1	; case 1
  2308  05B4  1903               	skipnz
  2309  05B5  2C8E               	goto	l4134
  2310  05B6  3A03               	xorlw	3	; case 2
  2311  05B7  1903               	skipnz
  2312  05B8  2CF4               	goto	l4154
  2313  05B9  3A01               	xorlw	1	; case 3
  2314  05BA  1903               	skipnz
  2315  05BB  2D51               	goto	l4174
  2316  05BC                     l4198:	
  2317                           
  2318                           ;Main.c: 309: ReadStock();
  2319  05BC  120A  158A  2729   	fcall	_ReadStock
      +       120A  118A         
  2320                           
  2321                           ;Main.c: 310: LoadStockToArray();
  2322  05C1  120A  118A  2620   	fcall	_LoadStockToArray
      +       120A  118A         
  2323                           
  2324                           ;Main.c: 311: if(RC1)
  2325  05C6  1C87               	btfss	7,1
  2326  05C7  2DCD               	goto	l4206
  2327                           
  2328                           ;Main.c: 312: DisplayStock();
  2329  05C8  120A  118A  2059   	fcall	_DisplayStock
      +       120A  118A         
  2330  05CD                     l4206:	
  2331                           
  2332                           ;Main.c: 313: _delay((unsigned long)((500)*(20000000/4000.0)));
  2333  05CD  300D               	movlw	13
  2334  05CE  00E8               	movwf	??_main+2
  2335  05CF  30A3               	movlw	163
  2336  05D0  00E7               	movwf	??_main+1
  2337  05D1  30BD               	movlw	189
  2338  05D2  00E6               	movwf	??_main
  2339  05D3                     u2057:	
  2340  05D3  0BE6               	decfsz	??_main,f
  2341  05D4  2DD3               	goto	u2057
  2342  05D5  0BE7               	decfsz	??_main+1,f
  2343  05D6  2DD3               	goto	u2057
  2344  05D7  0BE8               	decfsz	??_main+2,f
  2345  05D8  2DD3               	goto	u2057
  2346  05D9  0064               	clrwdt
  2347                           
  2348                           ;Main.c: 315: if((memcmp("STOCK",&sms,5)==0))
  2349  05DA  3030               	movlw	low (STR_44| (0+32768))
  2350  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2351  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2352  05DD  00D3               	movwf	?_memcmp
  2353  05DE  3092               	movlw	high (STR_44| (0+32768))
  2354  05DF  00D4               	movwf	?_memcmp+1
  2355  05E0  30C7               	movlw	_sms& (0+255)
  2356  05E1  00D5               	movwf	?_memcmp+2
  2357  05E2  3005               	movlw	5
  2358  05E3  00D6               	movwf	?_memcmp+3
  2359  05E4  01D7               	clrf	?_memcmp+4
  2360  05E5  120A  158A  26D9   	fcall	_memcmp
      +       120A  118A         
  2361  05EA  0854               	movf	?_memcmp+1,w
  2362  05EB  0453               	iorwf	?_memcmp,w
  2363  05EC  1903               	btfsc	3,2
  2364                           
  2365                           ;Main.c: 316: {
  2366                           ;Main.c: 317: if(!sms_indication)
  2367  05ED  18F6               	btfsc	_sms_indication/(0+8),_sms_indication& (0+7)
  2368  05EE  2C25               	goto	l4098
  2369                           
  2370                           ;Main.c: 318: {
  2371                           ;Main.c: 319: SendRiseStock();
  2372  05EF  120A  118A  209B   	fcall	_SendRiseStock
      +       120A  118A         
  2373                           
  2374                           ;Main.c: 320: sms_indication=1;
  2375  05F4  14F6               	bsf	_sms_indication/(0+8),_sms_indication& (0+7)
  2376  05F5  2C25               	goto	l4098
  2377  05F6                     __end_of_main:	
  2378                           
  2379                           	psect	text1127
  2380  05F6                     __ptext1127:	
  2381 ;; =============== function _gsm_init ends ============
  2382                           
  2383                           
  2384 ;; *************** function _DisplayKerosene *****************
  2385 ;; Defined at:
  2386 ;;		line 138 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  Location        1    wreg     unsigned char 
  2389 ;;  Kerosene        1    5[BANK0 ] unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  Location        1    6[BANK0 ] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 60/0
  2398 ;;		On exit  : 60/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       1       0       0       0
  2402 ;;      Locals:         0       1       0       0       0
  2403 ;;      Temps:          0       0       0       0       0
  2404 ;;      Totals:         0       2       0       0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    5
  2408 ;; This function calls:
  2409 ;;		_lcdcmd
  2410 ;;		___lbdiv
  2411 ;;		_lcddata
  2412 ;;		___lbmod
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417  05F6                     _DisplayKerosene:	
  2418                           
  2419                           ; Regs used in _DisplayKerosene: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2420                           ;DisplayKerosene@Location stored from wreg
  2421  05F6  00D9               	movwf	DisplayKerosene@Location
  2422                           
  2423                           ;Main.c: 139: lcdcmd(Location);
  2424  05F7  120A  118A  221C   	fcall	_lcdcmd
      +       120A  118A         
  2425                           
  2426                           ;Main.c: 140: lcddata(digit[Kerosene/10]);
  2427  05FC  300A               	movlw	10
  2428  05FD  00D3               	movwf	?___lbdiv
  2429  05FE  0858               	movf	DisplayKerosene@Kerosene,w
  2430  05FF  120A  118A  23A9   	fcall	___lbdiv
      +       120A  118A         
  2431  0604  2738               	fcall	PL2	;call to abstracted procedure
  2432  0605  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2433  060A  120A  118A  231F   	fcall	_lcddata
      +       120A  118A         
  2434                           
  2435                           ;Main.c: 141: lcddata(digit[Kerosene%10]);
  2436  060F  300A               	movlw	10
  2437  0610  00D3               	movwf	?___lbmod
  2438  0611  0858               	movf	DisplayKerosene@Kerosene,w
  2439  0612  120A  118A  23C4   	fcall	___lbmod
      +       120A  118A         
  2440  0617  2738               	fcall	PL2	;call to abstracted procedure
  2441  0618  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2442  061D  120A  118A  2B1F   	ljmp	_lcddata
  2443  0620                     __end_of_DisplayKerosene:	
  2444  0620                     __ptext1137:	
  2445 ;; =============== function _lcdcmd ends ============
  2446                           
  2447                           
  2448 ;; *************** function _LoadStockToArray *****************
  2449 ;; Defined at:
  2450 ;;		line 175 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 60/0
  2461 ;;		On exit  : 60/0
  2462 ;;		Unchanged: FFE9F/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         0       2       0       0       0
  2466 ;;      Temps:          0       0       0       0       0
  2467 ;;      Totals:         0       2       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    4
  2471 ;; This function calls:
  2472 ;;		___lwdiv
  2473 ;;		___lwmod
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478  0620                     _LoadStockToArray:	
  2479                           
  2480                           ;Main.c: 176: RiseArray[0] = digit[RiseStock/1000];
  2481                           
  2482                           ; Regs used in _LoadStockToArray: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2483  0620  30E8               	movlw	232
  2484  0621  00D8               	movwf	?___lwdiv
  2485  0622  3003               	movlw	3
  2486  0623  00D9               	movwf	?___lwdiv+1
  2487  0624  082B               	movf	_RiseStock+1,w
  2488  0625  00DB               	movwf	?___lwdiv+3
  2489  0626  082A               	movf	_RiseStock,w
  2490  0627  00DA               	movwf	?___lwdiv+2
  2491  0628  270E  120A  118A   	fcall	___lwdiv
  2492  062B  0858               	movf	?___lwdiv,w
  2493  062C  2738               	fcall	PL2	;call to abstracted procedure
  2494  062D  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2495  0632  00CE               	movwf	_RiseArray
  2496                           
  2497                           ;Main.c: 177: RiseArray[1] = digit[RiseStock%1000/100];
  2498  0633  3064               	movlw	100
  2499  0634  00D8               	movwf	?___lwdiv
  2500  0635  01D9               	clrf	?___lwdiv+1
  2501  0636  273F  120A  118A   	fcall	PL4	;call to abstracted procedure
  2502  0639  26EA  120A  118A   	fcall	___lwmod
  2503  063C  0854               	movf	?___lwmod+1,w
  2504  063D  00DB               	movwf	?___lwdiv+3
  2505  063E  0853               	movf	?___lwmod,w
  2506  063F  00DA               	movwf	?___lwdiv+2
  2507  0640  270E  120A  118A   	fcall	___lwdiv
  2508  0643  0858               	movf	?___lwdiv,w
  2509  0644  2738               	fcall	PL2	;call to abstracted procedure
  2510  0645  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2511  064A  00CF               	movwf	_RiseArray+1
  2512                           
  2513                           ;Main.c: 178: RiseArray[2] = digit[RiseStock%1000%100/10];
  2514  064B  300A               	movlw	10
  2515  064C  00D8               	movwf	?___lwdiv
  2516  064D  01D9               	clrf	?___lwdiv+1
  2517  064E  273F  120A  118A   	fcall	PL4	;call to abstracted procedure
  2518  0651  26EA  120A  118A   	fcall	___lwmod
  2519  0654  2748  120A  118A   	fcall	PL7	;call to abstracted procedure
  2520  0657  26EA  120A  118A   	fcall	___lwmod
  2521  065A  0854               	movf	?___lwmod+1,w
  2522  065B  00DB               	movwf	?___lwdiv+3
  2523  065C  0853               	movf	?___lwmod,w
  2524  065D  00DA               	movwf	?___lwdiv+2
  2525  065E  270E  120A  118A   	fcall	___lwdiv
  2526  0661  0858               	movf	?___lwdiv,w
  2527  0662  2738               	fcall	PL2	;call to abstracted procedure
  2528  0663  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2529  0668  00D0               	movwf	_RiseArray+2
  2530                           
  2531                           ;Main.c: 179: RiseArray[3] = digit[RiseStock%1000%100%10];
  2532  0669  273F  120A  118A   	fcall	PL4	;call to abstracted procedure
  2533  066C  26EA  120A  118A   	fcall	___lwmod
  2534  066F  2748  120A  118A   	fcall	PL7	;call to abstracted procedure
  2535  0672  26EA  120A  118A   	fcall	___lwmod
  2536  0675  0854               	movf	?___lwmod+1,w
  2537  0676  00E0               	movwf	_LoadStockToArray$1091+1
  2538  0677  0853               	movf	?___lwmod,w
  2539  0678  00DF               	movwf	_LoadStockToArray$1091
  2540                           
  2541                           ;Main.c: 179: RiseArray[3] = digit[RiseStock%1000%100%10];
  2542  0679  300A               	movlw	10
  2543  067A  00D3               	movwf	?___lwmod
  2544  067B  01D4               	clrf	?___lwmod+1
  2545  067C  0860               	movf	_LoadStockToArray$1091+1,w
  2546  067D  00D6               	movwf	?___lwmod+3
  2547  067E  085F               	movf	_LoadStockToArray$1091,w
  2548  067F  00D5               	movwf	?___lwmod+2
  2549  0680  26EA  120A  118A   	fcall	___lwmod
  2550  0683  0853               	movf	?___lwmod,w
  2551  0684  2738               	fcall	PL2	;call to abstracted procedure
  2552  0685  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2553  068A  00D1               	movwf	_RiseArray+3
  2554                           
  2555                           ;Main.c: 180: SugarArray[0] = digit[SugarStock/100];
  2556  068B  3064               	movlw	100
  2557  068C  2750  120A  118A   	fcall	PL8	;call to abstracted procedure
  2558  068F  270E  120A  118A   	fcall	___lwdiv
  2559  0692  0858               	movf	?___lwdiv,w
  2560  0693  2738               	fcall	PL2	;call to abstracted procedure
  2561  0694  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2562  0699  00A4               	movwf	_SugarArray
  2563                           
  2564                           ;Main.c: 181: SugarArray[1] = digit[SugarStock/10];
  2565  069A  300A               	movlw	10
  2566  069B  2750  120A  118A   	fcall	PL8	;call to abstracted procedure
  2567  069E  270E  120A  118A   	fcall	___lwdiv
  2568  06A1  0858               	movf	?___lwdiv,w
  2569  06A2  2738               	fcall	PL2	;call to abstracted procedure
  2570  06A3  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2571  06A8  00A5               	movwf	_SugarArray+1
  2572                           
  2573                           ;Main.c: 182: SugarArray[2] = digit[SugarStock%10];
  2574  06A9  300A               	movlw	10
  2575  06AA  00D3               	movwf	?___lwmod
  2576  06AB  01D4               	clrf	?___lwmod+1
  2577  06AC  082D               	movf	_SugarStock+1,w
  2578  06AD  00D6               	movwf	?___lwmod+3
  2579  06AE  082C               	movf	_SugarStock,w
  2580  06AF  00D5               	movwf	?___lwmod+2
  2581  06B0  26EA  120A  118A   	fcall	___lwmod
  2582  06B3  0853               	movf	?___lwmod,w
  2583  06B4  2738               	fcall	PL2	;call to abstracted procedure
  2584  06B5  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2585  06BA  00A6               	movwf	_SugarArray+2
  2586                           
  2587                           ;Main.c: 183: KeroseneArray[0] = digit[KeroseneStock/100];
  2588  06BB  3064               	movlw	100
  2589  06BC  2757  120A  118A   	fcall	PL9	;call to abstracted procedure
  2590  06BF  270E  120A  118A   	fcall	___lwdiv
  2591  06C2  0858               	movf	?___lwdiv,w
  2592  06C3  2738               	fcall	PL2	;call to abstracted procedure
  2593  06C4  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2594  06C9  00A0               	movwf	_KeroseneArray
  2595                           
  2596                           ;Main.c: 184: KeroseneArray[1] = digit[KeroseneStock/10];
  2597  06CA  300A               	movlw	10
  2598  06CB  2757  120A  118A   	fcall	PL9	;call to abstracted procedure
  2599  06CE  270E  120A  118A   	fcall	___lwdiv
  2600  06D1  0858               	movf	?___lwdiv,w
  2601  06D2  2738               	fcall	PL2	;call to abstracted procedure
  2602  06D3  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2603  06D8  00A1               	movwf	_KeroseneArray+1
  2604                           
  2605                           ;Main.c: 185: KeroseneArray[2] = digit[KeroseneStock%10];
  2606  06D9  300A               	movlw	10
  2607  06DA  00D3               	movwf	?___lwmod
  2608  06DB  01D4               	clrf	?___lwmod+1
  2609  06DC  0829               	movf	_KeroseneStock+1,w
  2610  06DD  00D6               	movwf	?___lwmod+3
  2611  06DE  0828               	movf	_KeroseneStock,w
  2612  06DF  00D5               	movwf	?___lwmod+2
  2613  06E0  26EA  120A  118A   	fcall	___lwmod
  2614  06E3  0853               	movf	?___lwmod,w
  2615  06E4  2738               	fcall	PL2	;call to abstracted procedure
  2616  06E5  160A  118A  2000   	fcall	stringtab
  2617  06E8  00A2               	movwf	_KeroseneArray+2
  2618  06E9  0008               	return
  2619  06EA                     __end_of_LoadStockToArray:	
  2620  06EA                     __ptext1150:	
  2621 ;; =============== function ___lbdiv ends ============
  2622                           
  2623                           
  2624 ;; *************** function ___lwmod *****************
  2625 ;; Defined at:
  2626 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwmod.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  divisor         2    0[BANK0 ] unsigned int 
  2629 ;;  dividend        2    2[BANK0 ] unsigned int 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  counter         1    4[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2    0[BANK0 ] unsigned int 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 60/0
  2638 ;;		On exit  : 60/0
  2639 ;;		Unchanged: FFF9F/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       4       0       0       0
  2642 ;;      Locals:         0       1       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       5       0       0       0
  2645 ;;Total ram usage:        5 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    3
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_LoadStockToArray
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654  06EA                     ___lwmod:	
  2655                           
  2656                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2657  06EA  0854               	movf	___lwmod@divisor+1,w
  2658  06EB  0453               	iorwf	___lwmod@divisor,w
  2659  06EC  1903               	skipnz
  2660  06ED  2F09               	goto	l3730
  2661  06EE  01D7               	clrf	___lwmod@counter
  2662  06EF                     L10:	
  2663  06EF  0AD7               	incf	___lwmod@counter,f
  2664  06F0  1BD4               	btfsc	___lwmod@divisor+1,7
  2665  06F1  2EF6               	goto	l3722
  2666  06F2  1003               	clrc
  2667  06F3  0DD3               	rlf	___lwmod@divisor,f
  2668  06F4  0DD4               	rlf	___lwmod@divisor+1,f
  2669  06F5  2EEF               	goto	L10
  2670  06F6                     l3722:	
  2671  06F6  0854               	movf	___lwmod@divisor+1,w
  2672  06F7  0256               	subwf	___lwmod@dividend+1,w
  2673  06F8  1D03               	skipz
  2674  06F9  2EFC               	goto	u1655
  2675  06FA  0853               	movf	___lwmod@divisor,w
  2676  06FB  0255               	subwf	___lwmod@dividend,w
  2677  06FC                     u1655:	
  2678  06FC  1C03               	skipc
  2679  06FD  2F05               	goto	L11
  2680  06FE  0853               	movf	___lwmod@divisor,w
  2681  06FF  02D5               	subwf	___lwmod@dividend,f
  2682  0700  0854               	movf	___lwmod@divisor+1,w
  2683  0701  1C03               	skipc
  2684  0702  03D6               	decf	___lwmod@dividend+1,f
  2685  0703  02D6               	subwf	___lwmod@dividend+1,f
  2686  0704  1003               	clrc
  2687  0705                     L11:	
  2688  0705  0CD4               	rrf	___lwmod@divisor+1,f
  2689  0706  0CD3               	rrf	___lwmod@divisor,f
  2690  0707  0BD7               	decfsz	___lwmod@counter,f
  2691  0708  2EF6               	goto	l3722
  2692  0709                     l3730:	
  2693  0709  0856               	movf	___lwmod@dividend+1,w
  2694  070A  00D4               	movwf	?___lwmod+1
  2695  070B  0855               	movf	___lwmod@dividend,w
  2696  070C  00D3               	movwf	?___lwmod
  2697  070D  0008               	return
  2698  070E                     __end_of___lwmod:	
  2699  070E                     __ptext1151:	
  2700 ;; =============== function ___lwmod ends ============
  2701                           
  2702                           
  2703 ;; *************** function ___lwdiv *****************
  2704 ;; Defined at:
  2705 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  divisor         2    5[BANK0 ] unsigned int 
  2708 ;;  dividend        2    7[BANK0 ] unsigned int 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  quotient        2    9[BANK0 ] unsigned int 
  2711 ;;  counter         1   11[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2    5[BANK0 ] unsigned int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 60/0
  2718 ;;		On exit  : 60/0
  2719 ;;		Unchanged: FFF9F/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       4       0       0       0
  2722 ;;      Locals:         0       3       0       0       0
  2723 ;;      Temps:          0       0       0       0       0
  2724 ;;      Totals:         0       7       0       0       0
  2725 ;;Total ram usage:        7 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    3
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_LoadStockToArray
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734  070E                     ___lwdiv:	
  2735                           
  2736                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2737  070E  01DC               	clrf	___lwdiv@quotient
  2738  070F  01DD               	clrf	___lwdiv@quotient+1
  2739  0710  0859               	movf	___lwdiv@divisor+1,w
  2740  0711  0458               	iorwf	___lwdiv@divisor,w
  2741  0712  1903               	skipnz
  2742  0713  2F33               	goto	l3004
  2743  0714  01DE               	clrf	___lwdiv@counter
  2744  0715                     L12:	
  2745  0715  0ADE               	incf	___lwdiv@counter,f
  2746  0716  1BD9               	btfsc	___lwdiv@divisor+1,7
  2747  0717  2F1C               	goto	l2992
  2748  0718  1003               	clrc
  2749  0719  0DD8               	rlf	___lwdiv@divisor,f
  2750  071A  0DD9               	rlf	___lwdiv@divisor+1,f
  2751  071B  2F15               	goto	L12
  2752  071C                     l2992:	
  2753  071C  1003               	clrc
  2754  071D  0DDC               	rlf	___lwdiv@quotient,f
  2755  071E  0DDD               	rlf	___lwdiv@quotient+1,f
  2756  071F  0859               	movf	___lwdiv@divisor+1,w
  2757  0720  025B               	subwf	___lwdiv@dividend+1,w
  2758  0721  1D03               	skipz
  2759  0722  2F25               	goto	u995
  2760  0723  0858               	movf	___lwdiv@divisor,w
  2761  0724  025A               	subwf	___lwdiv@dividend,w
  2762  0725                     u995:	
  2763  0725  1C03               	skipc
  2764  0726  2F2F               	goto	L13
  2765  0727  0858               	movf	___lwdiv@divisor,w
  2766  0728  02DA               	subwf	___lwdiv@dividend,f
  2767  0729  0859               	movf	___lwdiv@divisor+1,w
  2768  072A  1C03               	skipc
  2769  072B  03DB               	decf	___lwdiv@dividend+1,f
  2770  072C  02DB               	subwf	___lwdiv@dividend+1,f
  2771  072D  145C               	bsf	___lwdiv@quotient,0
  2772  072E  1003               	clrc
  2773  072F                     L13:	
  2774  072F  0CD9               	rrf	___lwdiv@divisor+1,f
  2775  0730  0CD8               	rrf	___lwdiv@divisor,f
  2776  0731  0BDE               	decfsz	___lwdiv@counter,f
  2777  0732  2F1C               	goto	l2992
  2778  0733                     l3004:	
  2779  0733  085D               	movf	___lwdiv@quotient+1,w
  2780  0734  00D9               	movwf	?___lwdiv+1
  2781  0735  085C               	movf	___lwdiv@quotient,w
  2782  0736  00D8               	movwf	?___lwdiv
  2783  0737  0008               	return
  2784  0738                     __end_of___lwdiv:	
  2785  0738                     PL2:	
  2786  0738  3E12               	addlw	low (_digit| (0+32768))
  2787  0739  0084               	movwf	4
  2788  073A  3090               	movlw	high (_digit| (0+32768))
  2789  073B  1803               	skipnc
  2790  073C  3E01               	addlw	1
  2791  073D  00FF               	movwf	127
  2792  073E  0008               	return
  2793  073F                     PL4:	
  2794  073F  082B               	movf	_RiseStock+1,w
  2795  0740  00D6               	movwf	?___lwmod+3
  2796  0741  082A               	movf	_RiseStock,w
  2797  0742  00D5               	movwf	?___lwmod+2
  2798  0743  30E8               	movlw	232
  2799  0744  00D3               	movwf	?___lwmod
  2800  0745  3003               	movlw	3
  2801  0746  00D4               	movwf	?___lwmod+1
  2802  0747  0008               	return
  2803  0748                     PL7:	
  2804  0748  0854               	movf	?___lwmod+1,w
  2805  0749  00D6               	movwf	?___lwmod+3
  2806  074A  0853               	movf	?___lwmod,w
  2807  074B  00D5               	movwf	?___lwmod+2
  2808  074C  3064               	movlw	100
  2809  074D  00D3               	movwf	?___lwmod
  2810  074E  01D4               	clrf	?___lwmod+1
  2811  074F  0008               	return
  2812  0750                     PL8:	
  2813  0750  00D8               	movwf	?___lwdiv
  2814  0751  01D9               	clrf	?___lwdiv+1
  2815  0752  082D               	movf	_SugarStock+1,w
  2816  0753  00DB               	movwf	?___lwdiv+3
  2817  0754  082C               	movf	_SugarStock,w
  2818  0755  00DA               	movwf	?___lwdiv+2
  2819  0756  0008               	return
  2820  0757                     PL9:	
  2821  0757  00D8               	movwf	?___lwdiv
  2822  0758  01D9               	clrf	?___lwdiv+1
  2823  0759  0829               	movf	_KeroseneStock+1,w
  2824  075A  00DB               	movwf	?___lwdiv+3
  2825  075B  0828               	movf	_KeroseneStock,w
  2826  075C  00DA               	movwf	?___lwdiv+2
  2827  075D  0008               	return
  2828                           
  2829                           	psect	text1128
  2830  0011                     __ptext1128:	
  2831 ;; =============== function _DisplayKerosene ends ============
  2832                           
  2833                           
  2834 ;; *************** function _DisplayRise *****************
  2835 ;; Defined at:
  2836 ;;		line 132 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  Location        1    wreg     unsigned char 
  2839 ;;  Rise            1    5[BANK0 ] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  Location        1    6[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 60/0
  2848 ;;		On exit  : 60/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       1       0       0       0
  2852 ;;      Locals:         0       1       0       0       0
  2853 ;;      Temps:          0       0       0       0       0
  2854 ;;      Totals:         0       2       0       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    5
  2858 ;; This function calls:
  2859 ;;		_lcdcmd
  2860 ;;		___lbdiv
  2861 ;;		_lcddata
  2862 ;;		___lbmod
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867  0011                     _DisplayRise:	
  2868                           
  2869                           ; Regs used in _DisplayRise: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2870                           ;DisplayRise@Location stored from wreg
  2871  0011  00D9               	movwf	DisplayRise@Location
  2872                           
  2873                           ;Main.c: 133: lcdcmd(Location);
  2874  0012  221C  120A  118A   	fcall	_lcdcmd
  2875                           
  2876                           ;Main.c: 134: lcddata(digit[Rise/10]);
  2877  0015  300A               	movlw	10
  2878  0016  00D3               	movwf	?___lbdiv
  2879  0017  0858               	movf	DisplayRise@Rise,w
  2880  0018  23A9               	fcall	___lbdiv
  2881  0019  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  2882  001E  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2883  0023  231F  120A  118A   	fcall	_lcddata
  2884                           
  2885                           ;Main.c: 135: lcddata(digit[Rise%10]);
  2886  0026  300A               	movlw	10
  2887  0027  00D3               	movwf	?___lbmod
  2888  0028  0858               	movf	DisplayRise@Rise,w
  2889  0029  23C4               	fcall	___lbmod
  2890  002A  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  2891  002F  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2892  0034  2B1F               	ljmp	_lcddata
  2893  0035                     __end_of_DisplayRise:	
  2894  0035                     __ptext1129:	
  2895 ;; =============== function _DisplayRise ends ============
  2896                           
  2897                           
  2898 ;; *************** function _DisplaySugar *****************
  2899 ;; Defined at:
  2900 ;;		line 126 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  Location        1    wreg     unsigned char 
  2903 ;;  Sugar           1    5[BANK0 ] unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  Location        1    6[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 60/0
  2912 ;;		On exit  : 60/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       1       0       0       0
  2916 ;;      Locals:         0       1       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         0       2       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    5
  2922 ;; This function calls:
  2923 ;;		_lcdcmd
  2924 ;;		___lbdiv
  2925 ;;		_lcddata
  2926 ;;		___lbmod
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931  0035                     _DisplaySugar:	
  2932                           
  2933                           ; Regs used in _DisplaySugar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2934                           ;DisplaySugar@Location stored from wreg
  2935  0035  00D9               	movwf	DisplaySugar@Location
  2936                           
  2937                           ;Main.c: 127: lcdcmd(Location);
  2938  0036  221C  120A  118A   	fcall	_lcdcmd
  2939                           
  2940                           ;Main.c: 128: lcddata(digit[Sugar/10]);
  2941  0039  300A               	movlw	10
  2942  003A  00D3               	movwf	?___lbdiv
  2943  003B  0858               	movf	DisplaySugar@Sugar,w
  2944  003C  23A9               	fcall	___lbdiv
  2945  003D  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  2946  0042  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2947  0047  231F  120A  118A   	fcall	_lcddata
  2948                           
  2949                           ;Main.c: 129: lcddata(digit[Sugar%10]);
  2950  004A  300A               	movlw	10
  2951  004B  00D3               	movwf	?___lbmod
  2952  004C  0858               	movf	DisplaySugar@Sugar,w
  2953  004D  23C4               	fcall	___lbmod
  2954  004E  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  2955  0053  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  2956  0058  2B1F               	ljmp	_lcddata
  2957  0059                     __end_of_DisplaySugar:	
  2958  0059                     __ptext1125:	
  2959 ;; =============== function _startup ends ============
  2960                           
  2961                           
  2962 ;; *************** function _DisplayStock *****************
  2963 ;; Defined at:
  2964 ;;		line 112 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;		None               void
  2971 ;; Registers used:
  2972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 60/0
  2975 ;;		On exit  : 60/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    6
  2985 ;; This function calls:
  2986 ;;		_lcdcmd
  2987 ;;		_lcdstring
  2988 ;;		_DisplayAmnt
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993  0059                     _DisplayStock:	
  2994                           
  2995                           ;Main.c: 113: lcdcmd(0x80);
  2996                           
  2997                           ; Regs used in _DisplayStock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2998  0059  3080               	movlw	128
  2999  005A  221C  120A  118A   	fcall	_lcdcmd
  3000                           
  3001                           ;Main.c: 114: lcdstring("    STOCK DETAILS   ");
  3002  005D  302C               	movlw	low (STR_19| (0+32768))
  3003  005E  00D8               	movwf	?_lcdstring
  3004  005F  3091               	movlw	high (STR_19| (0+32768))
  3005  0060  00D9               	movwf	?_lcdstring+1
  3006  0061  2233  120A  118A   	fcall	_lcdstring
  3007                           
  3008                           ;Main.c: 115: lcdcmd(0xC0);
  3009  0064  30C0               	movlw	192
  3010  0065  221C  120A  118A   	fcall	_lcdcmd
  3011                           
  3012                           ;Main.c: 116: lcdstring("RISE:      Kg       ");
  3013  0068  3002               	movlw	low (STR_20| (0+32768))
  3014  0069  00D8               	movwf	?_lcdstring
  3015  006A  3091               	movlw	high (STR_20| (0+32768))
  3016  006B  00D9               	movwf	?_lcdstring+1
  3017  006C  2233  120A  118A   	fcall	_lcdstring
  3018                           
  3019                           ;Main.c: 117: DisplayAmnt(0XC5,RiseStock);
  3020  006F  082B               	movf	_RiseStock+1,w
  3021  0070  00E2               	movwf	?_DisplayAmnt+1
  3022  0071  082A               	movf	_RiseStock,w
  3023  0072  00E1               	movwf	?_DisplayAmnt
  3024  0073  30C5               	movlw	197
  3025  0074  2265  120A  118A   	fcall	_DisplayAmnt
  3026                           
  3027                           ;Main.c: 118: lcdcmd(0x94);
  3028  0077  3094               	movlw	148
  3029  0078  221C  120A  118A   	fcall	_lcdcmd
  3030                           
  3031                           ;Main.c: 119: lcdstring("SUGAR:    Kg         ");
  3032  007B  306D               	movlw	low (STR_21| (0+32768))
  3033  007C  00D8               	movwf	?_lcdstring
  3034  007D  3090               	movlw	high (STR_21| (0+32768))
  3035  007E  00D9               	movwf	?_lcdstring+1
  3036  007F  2233  120A  118A   	fcall	_lcdstring
  3037                           
  3038                           ;Main.c: 120: DisplayAmnt(0x9A,SugarStock);
  3039  0082  082D               	movf	_SugarStock+1,w
  3040  0083  00E2               	movwf	?_DisplayAmnt+1
  3041  0084  082C               	movf	_SugarStock,w
  3042  0085  00E1               	movwf	?_DisplayAmnt
  3043  0086  309A               	movlw	154
  3044  0087  2265  120A  118A   	fcall	_DisplayAmnt
  3045                           
  3046                           ;Main.c: 121: lcdcmd(0xD4);
  3047  008A  30D4               	movlw	212
  3048  008B  221C  120A  118A   	fcall	_lcdcmd
  3049                           
  3050                           ;Main.c: 122: lcdstring("KEROSENE:     Lts    ");
  3051  008E  3083               	movlw	low (STR_22| (0+32768))
  3052  008F  00D8               	movwf	?_lcdstring
  3053  0090  3090               	movlw	high (STR_22| (0+32768))
  3054  0091  00D9               	movwf	?_lcdstring+1
  3055  0092  2233  120A  118A   	fcall	_lcdstring
  3056                           
  3057                           ;Main.c: 123: DisplayAmnt(0XDD,KeroseneStock);
  3058  0095  0829               	movf	_KeroseneStock+1,w
  3059  0096  00E2               	movwf	?_DisplayAmnt+1
  3060  0097  0828               	movf	_KeroseneStock,w
  3061  0098  00E1               	movwf	?_DisplayAmnt
  3062  0099  30DD               	movlw	221
  3063  009A  2A65               	ljmp	_DisplayAmnt
  3064  009B                     __end_of_DisplayStock:	
  3065  009B                     __ptext1133:	
  3066 ;; =============== function _lcd_init ends ============
  3067                           
  3068                           
  3069 ;; *************** function _SendRiseStock *****************
  3070 ;; Defined at:
  3071 ;;		line 189 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  d               1    0        unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 60/0
  3082 ;;		On exit  : 60/20
  3083 ;;		Unchanged: FFE9F/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    5
  3092 ;; This function calls:
  3093 ;;		_usartstring
  3094 ;;		_transmit
  3095 ;;		_receive
  3096 ;; This function is called by:
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100  009B                     _SendRiseStock:	
  3101                           
  3102                           ;Main.c: 190: unsigned char d;
  3103                           ;Main.c: 191: PIE1=0X00;
  3104                           
  3105                           ; Regs used in _SendRiseStock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3106  009B  1683               	bsf	3,5	;RP0=1, select bank1
  3107  009C  018C               	clrf	12	;volatile
  3108                           
  3109                           ;Main.c: 192: usartstring("AT+CMGS=\"+919790080510\"");
  3110  009D  3055               	movlw	low (STR_9| (0+32768))
  3111  009E  1283               	bcf	3,5	;RP0=0, select bank0
  3112  009F  00D4               	movwf	?_usartstring
  3113  00A0  3090               	movlw	high (STR_9| (0+32768))
  3114  00A1  00D5               	movwf	?_usartstring+1
  3115  00A2  2165  120A  118A   	fcall	_usartstring
  3116                           
  3117                           ;Main.c: 193: transmit(0x0D);
  3118  00A5  300D               	movlw	13
  3119  00A6  215F  120A  118A   	fcall	_transmit
  3120  00A9                     l3938:	
  3121                           ;Main.c: 194: while((d=receive())!='>');
  3122                           
  3123  00A9  2156  120A  118A   	fcall	_receive
  3124  00AC  3A3E               	xorlw	62
  3125  00AD  1D03               	skipz
  3126  00AE  28A9               	goto	l3938
  3127                           
  3128                           ;Main.c: 195: usartstring("Rise Stock:");
  3129  00AF  30FA               	movlw	low (STR_28| (0+32768))
  3130  00B0  00D4               	movwf	?_usartstring
  3131  00B1  3091               	movlw	high (STR_28| (0+32768))
  3132  00B2  00D5               	movwf	?_usartstring+1
  3133  00B3  2165  120A  118A   	fcall	_usartstring
  3134                           
  3135                           ;Main.c: 196: usartstring(RiseArray);
  3136  00B6  304E               	movlw	_RiseArray& (0+255)
  3137  00B7  00D4               	movwf	?_usartstring
  3138  00B8  3000               	movlw	0
  3139  00B9  00D5               	movwf	?_usartstring+1
  3140  00BA  2165  120A  118A   	fcall	_usartstring
  3141                           
  3142                           ;Main.c: 197: usartstring(" Kgs");
  3143  00BD  3036               	movlw	low (STR_29| (0+32768))
  3144  00BE  00D4               	movwf	?_usartstring
  3145  00BF  3092               	movlw	high (STR_29| (0+32768))
  3146  00C0  00D5               	movwf	?_usartstring+1
  3147  00C1  2165  120A  118A   	fcall	_usartstring
  3148                           
  3149                           ;Main.c: 198: transmit(0x1A);
  3150  00C4  301A               	movlw	26
  3151  00C5  215F  120A  118A   	fcall	_transmit
  3152  00C8                     l3944:	
  3153                           ;Main.c: 199: while((d=receive())!='K');
  3154                           
  3155  00C8  2156  120A  118A   	fcall	_receive
  3156  00CB  3A4B               	xorlw	75
  3157  00CC  1D03               	skipz
  3158  00CD  28C8               	goto	l3944
  3159                           
  3160                           ;Main.c: 200: PIE1=0X20;
  3161  00CE  3020               	movlw	32
  3162  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  3163  00D0  008C               	movwf	12	;volatile
  3164  00D1  0008               	return
  3165  00D2                     __end_of_SendRiseStock:	
  3166  00D2                     __ptext1126:	
  3167 ;; =============== function _DisplayStock ends ============
  3168                           
  3169                           
  3170 ;; *************** function _gsm_init *****************
  3171 ;; Defined at:
  3172 ;;		line 29 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  d               1    0        unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/40
  3183 ;;		On exit  : 60/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    6
  3193 ;; This function calls:
  3194 ;;		_lcdcmd
  3195 ;;		_lcdstring
  3196 ;;		_DelayS
  3197 ;;		_usartstring
  3198 ;;		_transmit
  3199 ;;		_receive
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204  00D2                     _gsm_init:	
  3205                           
  3206                           ;UART.C: 30: unsigned char d;
  3207                           ;UART.C: 31: lcdcmd(0X80);
  3208                           
  3209                           ; Regs used in _gsm_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3210  00D2  3080               	movlw	128
  3211  00D3  221C  120A  118A   	fcall	_lcdcmd
  3212                           
  3213                           ;UART.C: 32: lcdstring("GSM INITIALIZING");
  3214  00D6  30E9               	movlw	low (STR_1| (0+32768))
  3215  00D7  00D8               	movwf	?_lcdstring
  3216  00D8  3091               	movlw	high (STR_1| (0+32768))
  3217  00D9  00D9               	movwf	?_lcdstring+1
  3218  00DA  2233  120A  118A   	fcall	_lcdstring
  3219                           
  3220                           ;UART.C: 33: lcdcmd(0XC0);
  3221  00DD  30C0               	movlw	192
  3222  00DE  221C  120A  118A   	fcall	_lcdcmd
  3223                           
  3224                           ;UART.C: 34: lcdstring("PLS WAIT........");
  3225  00E1  30D8               	movlw	low (STR_2| (0+32768))
  3226  00E2  00D8               	movwf	?_lcdstring
  3227  00E3  3091               	movlw	high (STR_2| (0+32768))
  3228  00E4  00D9               	movwf	?_lcdstring+1
  3229  00E5  2233  120A  118A   	fcall	_lcdstring
  3230                           
  3231                           ;UART.C: 35: DelayS(5);
  3232  00E8  3005               	movlw	5
  3233  00E9  238A  120A  118A   	fcall	_DelayS
  3234                           
  3235                           ;UART.C: 36: lcdcmd(0x01);
  3236  00EC  3001               	movlw	1
  3237  00ED  221C  120A  118A   	fcall	_lcdcmd
  3238                           
  3239                           ;UART.C: 38: usartstring("AT\r");
  3240  00F0  303B               	movlw	low (STR_3| (0+32768))
  3241  00F1  00D4               	movwf	?_usartstring
  3242  00F2  3092               	movlw	high (STR_3| (0+32768))
  3243  00F3  00D5               	movwf	?_usartstring+1
  3244  00F4  2165  120A  118A   	fcall	_usartstring
  3245                           
  3246                           ;UART.C: 39: transmit(0x0D);
  3247  00F7  300D               	movlw	13
  3248  00F8  215F  120A  118A   	fcall	_transmit
  3249  00FB                     l4006:	
  3250                           ;UART.C: 40: while((d=receive())!='K');
  3251                           
  3252  00FB  2156  120A  118A   	fcall	_receive
  3253  00FE  3A4B               	xorlw	75
  3254  00FF  1D03               	skipz
  3255  0100  28FB               	goto	l4006
  3256                           
  3257                           ;UART.C: 42: usartstring("AT+CPIN?\r");
  3258  0101  301C               	movlw	low (STR_4| (0+32768))
  3259  0102  00D4               	movwf	?_usartstring
  3260  0103  3092               	movlw	high (STR_4| (0+32768))
  3261  0104  00D5               	movwf	?_usartstring+1
  3262  0105  2165  120A  118A   	fcall	_usartstring
  3263                           
  3264                           ;UART.C: 43: transmit(0x0D);
  3265  0108  300D               	movlw	13
  3266  0109  215F  120A  118A   	fcall	_transmit
  3267  010C                     l4012:	
  3268                           ;UART.C: 44: while((d=receive())!='K');
  3269                           
  3270  010C  2156  120A  118A   	fcall	_receive
  3271  010F  3A4B               	xorlw	75
  3272  0110  1D03               	skipz
  3273  0111  290C               	goto	l4012
  3274                           
  3275                           ;UART.C: 46: usartstring("AT+CSDH=1\r");
  3276  0112  3011               	movlw	low (STR_5| (0+32768))
  3277  0113  00D4               	movwf	?_usartstring
  3278  0114  3092               	movlw	high (STR_5| (0+32768))
  3279  0115  00D5               	movwf	?_usartstring+1
  3280  0116  2165  120A  118A   	fcall	_usartstring
  3281                           
  3282                           ;UART.C: 47: transmit(0x0D);
  3283  0119  300D               	movlw	13
  3284  011A  215F  120A  118A   	fcall	_transmit
  3285  011D                     l4018:	
  3286                           ;UART.C: 48: while((d=receive())!='K');
  3287                           
  3288  011D  2156  120A  118A   	fcall	_receive
  3289  0120  3A4B               	xorlw	75
  3290  0121  1D03               	skipz
  3291  0122  291D               	goto	l4018
  3292                           
  3293                           ;UART.C: 50: usartstring("AT+CMGF=1\r");
  3294  0123  3006               	movlw	low (STR_6| (0+32768))
  3295  0124  00D4               	movwf	?_usartstring
  3296  0125  3092               	movlw	high (STR_6| (0+32768))
  3297  0126  00D5               	movwf	?_usartstring+1
  3298  0127  2165  120A  118A   	fcall	_usartstring
  3299                           
  3300                           ;UART.C: 51: transmit(0x0D);
  3301  012A  300D               	movlw	13
  3302  012B  215F  120A  118A   	fcall	_transmit
  3303  012E                     l4024:	
  3304                           ;UART.C: 52: while((d=receive())!='K');
  3305                           
  3306  012E  2156  120A  118A   	fcall	_receive
  3307  0131  3A4B               	xorlw	75
  3308  0132  1D03               	skipz
  3309  0133  292E               	goto	l4024
  3310                           
  3311                           ;UART.C: 54: usartstring("AT+CNMI=2,2,0,0,0\r");
  3312  0134  307D               	movlw	low (STR_7| (0+32768))
  3313  0135  00D4               	movwf	?_usartstring
  3314  0136  3091               	movlw	high (STR_7| (0+32768))
  3315  0137  00D5               	movwf	?_usartstring+1
  3316  0138  2165  120A  118A   	fcall	_usartstring
  3317                           
  3318                           ;UART.C: 55: transmit(0x0D);
  3319  013B  300D               	movlw	13
  3320  013C  215F  120A  118A   	fcall	_transmit
  3321  013F                     l4030:	
  3322                           ;UART.C: 56: while((d=receive())!='K');
  3323                           
  3324  013F  2156  120A  118A   	fcall	_receive
  3325  0142  3A4B               	xorlw	75
  3326  0143  1D03               	skipz
  3327  0144  293F               	goto	l4030
  3328                           
  3329                           ;UART.C: 57: lcdcmd(0x80);
  3330  0145  3080               	movlw	128
  3331  0146  221C  120A  118A   	fcall	_lcdcmd
  3332                           
  3333                           ;UART.C: 58: lcdstring("GSM READY");
  3334  0149  3026               	movlw	low (STR_8| (0+32768))
  3335  014A  00D8               	movwf	?_lcdstring
  3336  014B  3092               	movlw	high (STR_8| (0+32768))
  3337  014C  00D9               	movwf	?_lcdstring+1
  3338  014D  2233  120A  118A   	fcall	_lcdstring
  3339                           
  3340                           ;UART.C: 59: DelayS(10);
  3341  0150  300A               	movlw	10
  3342  0151  238A  120A  118A   	fcall	_DelayS
  3343                           
  3344                           ;UART.C: 60: lcdcmd(0x01);
  3345  0154  3001               	movlw	1
  3346  0155  2A1C               	ljmp	_lcdcmd
  3347  0156                     __end_of_gsm_init:	
  3348  0156                     __ptext1158:	
  3349 ;; =============== function _transmit ends ============
  3350                           
  3351                           
  3352 ;; *************** function _receive *****************
  3353 ;; Defined at:
  3354 ;;		line 2 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      unsigned char 
  3361 ;; Registers used:
  3362 ;;		wreg
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 60/0
  3366 ;;		Unchanged: FFF9F/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    3
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_gsm_init
  3379 ;;		_SendRiseStock
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382  0156                     _receive:	
  3383  0156  23F1               	call	PL10	;select bank 0
  3384                           
  3385                           ;UART.C: 3: if(OERR){CREN=0;CREN=1;}
  3386                           
  3387                           ; Regs used in _receive: [wreg]
  3388  0157  1C98               	btfss	24,1
  3389  0158  295B               	goto	l1013
  3390  0159  1218               	bcf	24,4
  3391  015A  1618               	bsf	24,4
  3392  015B                     l1013:	
  3393  015B  1E8C               	btfss	12,5
  3394  015C  295B               	goto	l1013
  3395                           
  3396                           ;UART.C: 5: return(RCREG);
  3397  015D  081A               	movf	26,w	;volatile
  3398  015E  0008               	return
  3399  015F                     __end_of_receive:	
  3400  015F                     __ptext1157:	
  3401 ;; =============== function _eeprom_read ends ============
  3402                           
  3403                           
  3404 ;; *************** function _transmit *****************
  3405 ;; Defined at:
  3406 ;;		line 8 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  data            1    wreg     unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  data            1    0[BANK0 ] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;		None               void
  3413 ;; Registers used:
  3414 ;;		wreg
  3415 ;; Tracked objects:
  3416 ;;		On entry : 60/0
  3417 ;;		On exit  : 60/0
  3418 ;;		Unchanged: FFF9F/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       0       0       0       0
  3421 ;;      Locals:         0       1       0       0       0
  3422 ;;      Temps:          0       0       0       0       0
  3423 ;;      Totals:         0       1       0       0       0
  3424 ;;Total ram usage:        1 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    3
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_usartstring
  3431 ;;		_gsm_init
  3432 ;;		_SendRiseStock
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435  015F                     _transmit:	
  3436                           
  3437                           ; Regs used in _transmit: [wreg]
  3438                           ;transmit@data stored from wreg
  3439  015F  00D3               	movwf	transmit@data
  3440  0160                     l1019:	
  3441                           ;UART.C: 9: while(!TXIF);
  3442                           
  3443  0160  1E0C               	btfss	12,4
  3444  0161  2960               	goto	l1019
  3445                           
  3446                           ;UART.C: 10: TXREG =data;
  3447  0162  0853               	movf	transmit@data,w
  3448  0163  0099               	movwf	25	;volatile
  3449  0164  0008               	return
  3450  0165                     __end_of_transmit:	
  3451  0165                     __ptext1141:	
  3452 ;; =============== function _ReadAmnt ends ============
  3453                           
  3454                           
  3455 ;; *************** function _usartstring *****************
  3456 ;; Defined at:
  3457 ;;		line 22 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  st              2    1[BANK0 ] PTR const unsigned char 
  3460 ;;		 -> STR_29(5), STR_28(12), STR_27(24), RiseArray(5), 
  3461 ;;		 -> STR_18(20), STR_17(24), STR_16(20), STR_15(24), 
  3462 ;;		 -> STR_14(20), STR_13(24), STR_12(29), STR_11(24), 
  3463 ;;		 -> STR_10(27), STR_9(24), STR_7(19), STR_6(11), 
  3464 ;;		 -> STR_5(11), STR_4(10), STR_3(4), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;		None               void
  3469 ;; Registers used:
  3470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 60/0
  3473 ;;		On exit  : 60/0
  3474 ;;		Unchanged: FFE9F/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       2       0       0       0
  3477 ;;      Locals:         0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         0       2       0       0       0
  3480 ;;Total ram usage:        2 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    4
  3483 ;; This function calls:
  3484 ;;		_transmit
  3485 ;; This function is called by:
  3486 ;;		_gsm_init
  3487 ;;		_SendRiseStock
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490  0165                     _usartstring:	
  3491  0165                     l3860:	
  3492                           ;UART.C: 23: while(*st)
  3493                           
  3494                           ; Regs used in _usartstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3495                           
  3496  0165  0855               	movf	usartstring@st+1,w
  3497  0166  00FF               	movwf	127
  3498  0167  0854               	movf	usartstring@st,w
  3499  0168  0084               	movwf	4
  3500  0169  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3501  016E  3800               	iorlw	0
  3502  016F  1903               	btfsc	3,2
  3503  0170  0008               	return
  3504                           
  3505                           ;UART.C: 24: transmit(*st++);
  3506  0171  0855               	movf	usartstring@st+1,w
  3507  0172  00FF               	movwf	127
  3508  0173  0854               	movf	usartstring@st,w
  3509  0174  0084               	movwf	4
  3510  0175  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3511  017A  215F  120A  118A   	fcall	_transmit
  3512  017D  0AD4               	incf	usartstring@st,f
  3513  017E  1903               	skipnz
  3514  017F  0AD5               	incf	usartstring@st+1,f
  3515  0180  2965               	goto	l3860
  3516  0181                     __end_of_usartstring:	
  3517  0181                     __ptext1124:	
  3518 ;; =============== function _main ends ============
  3519                           
  3520                           
  3521 ;; *************** function _startup *****************
  3522 ;; Defined at:
  3523 ;;		line 159 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;		None               void
  3530 ;; Registers used:
  3531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/40
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3537 ;;      Params:         0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0
  3539 ;;      Temps:          0       3       0       0       0
  3540 ;;      Totals:         0       3       0       0       0
  3541 ;;Total ram usage:        3 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    6
  3544 ;; This function calls:
  3545 ;;		_lcdcmd
  3546 ;;		_lcdstring
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551  0181                     _startup:	
  3552                           
  3553                           ;Main.c: 160: lcdcmd(0x80);
  3554                           
  3555                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3556  0181  3080               	movlw	128
  3557  0182  221C  120A  118A   	fcall	_lcdcmd
  3558                           
  3559                           ;Main.c: 161: lcdstring("AUTOMATIC RATION ");
  3560  0185  30C6               	movlw	low (STR_23| (0+32768))
  3561  0186  00D8               	movwf	?_lcdstring
  3562  0187  3091               	movlw	high (STR_23| (0+32768))
  3563  0188  00D9               	movwf	?_lcdstring+1
  3564  0189  2233  120A  118A   	fcall	_lcdstring
  3565                           
  3566                           ;Main.c: 162: lcdcmd(0xC0);
  3567  018C  30C0               	movlw	192
  3568  018D  221C  120A  118A   	fcall	_lcdcmd
  3569                           
  3570                           ;Main.c: 163: lcdstring("   CARD SYSTEM   ");
  3571  0190  30A2               	movlw	low (STR_24| (0+32768))
  3572  0191  00D8               	movwf	?_lcdstring
  3573  0192  3091               	movlw	high (STR_24| (0+32768))
  3574  0193  00D9               	movwf	?_lcdstring+1
  3575  0194  2233  120A  118A   	fcall	_lcdstring
  3576                           
  3577                           ;Main.c: 164: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3578  0197  301A               	movlw	26
  3579  0198  00DC               	movwf	??_startup+2
  3580  0199  3045               	movlw	69
  3581  019A  00DB               	movwf	??_startup+1
  3582  019B  307E               	movlw	126
  3583  019C  00DA               	movwf	??_startup
  3584  019D                     u2067:	
  3585  019D  0BDA               	decfsz	??_startup,f
  3586  019E  299D               	goto	u2067
  3587  019F  0BDB               	decfsz	??_startup+1,f
  3588  01A0  299D               	goto	u2067
  3589  01A1  0BDC               	decfsz	??_startup+2,f
  3590  01A2  299D               	goto	u2067
  3591                           
  3592                           ;Main.c: 165: lcdcmd(0x01);
  3593  01A3  3001               	movlw	1
  3594  01A4  221C  120A  118A   	fcall	_lcdcmd
  3595                           
  3596                           ;Main.c: 166: _delay((unsigned long)((500)*(20000000/4000.0)));
  3597  01A7  300D               	movlw	13
  3598  01A8  00DC               	movwf	??_startup+2
  3599  01A9  30A3               	movlw	163
  3600  01AA  00DB               	movwf	??_startup+1
  3601  01AB  30BD               	movlw	189
  3602  01AC  00DA               	movwf	??_startup
  3603  01AD                     u2077:	
  3604  01AD  0BDA               	decfsz	??_startup,f
  3605  01AE  29AD               	goto	u2077
  3606  01AF  0BDB               	decfsz	??_startup+1,f
  3607  01B0  29AD               	goto	u2077
  3608  01B1  0BDC               	decfsz	??_startup+2,f
  3609  01B2  29AD               	goto	u2077
  3610  01B3  0064               	clrwdt
  3611                           
  3612                           ;Main.c: 167: lcdcmd(0x80);
  3613  01B4  3080               	movlw	128
  3614  01B5  221C  120A  118A   	fcall	_lcdcmd
  3615                           
  3616                           ;Main.c: 168: lcdstring("PLEASE TAP YOUR  ");
  3617  01B8  30B4               	movlw	low (STR_25| (0+32768))
  3618  01B9  00D8               	movwf	?_lcdstring
  3619  01BA  3091               	movlw	high (STR_25| (0+32768))
  3620  01BB  00D9               	movwf	?_lcdstring+1
  3621  01BC  2233  120A  118A   	fcall	_lcdstring
  3622                           
  3623                           ;Main.c: 169: lcdcmd(0xC0);
  3624  01BF  30C0               	movlw	192
  3625  01C0  221C  120A  118A   	fcall	_lcdcmd
  3626                           
  3627                           ;Main.c: 170: lcdstring("SMART CARD       ");
  3628  01C3  3090               	movlw	low (STR_26| (0+32768))
  3629  01C4  00D8               	movwf	?_lcdstring
  3630  01C5  3091               	movlw	high (STR_26| (0+32768))
  3631  01C6  00D9               	movwf	?_lcdstring+1
  3632  01C7  2233  120A  118A   	fcall	_lcdstring
  3633                           
  3634                           ;Main.c: 171: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3635  01CA  301A               	movlw	26
  3636  01CB  00DC               	movwf	??_startup+2
  3637  01CC  3045               	movlw	69
  3638  01CD  00DB               	movwf	??_startup+1
  3639  01CE  307E               	movlw	126
  3640  01CF  00DA               	movwf	??_startup
  3641  01D0                     u2087:	
  3642  01D0  0BDA               	decfsz	??_startup,f
  3643  01D1  29D0               	goto	u2087
  3644  01D2  0BDB               	decfsz	??_startup+1,f
  3645  01D3  29D0               	goto	u2087
  3646  01D4  0BDC               	decfsz	??_startup+2,f
  3647  01D5  29D0               	goto	u2087
  3648  01D6  0008               	return
  3649  01D7                     __end_of_startup:	
  3650  01D7                     __ptext1132:	
  3651 ;; =============== function _lcdstring ends ============
  3652                           
  3653                           
  3654 ;; *************** function _lcd_init *****************
  3655 ;; Defined at:
  3656 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;		None               void
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 17F/0
  3667 ;;		On exit  : 60/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0
  3672 ;;      Temps:          0       2       0       0       0
  3673 ;;      Totals:         0       2       0       0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    5
  3677 ;; This function calls:
  3678 ;;		_lcdport
  3679 ;;		_lcdcmd
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684  01D7                     _lcd_init:	
  3685                           
  3686                           ;lcd.c: 72: lcdport(0x00);
  3687                           
  3688                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3689  01D7  3000               	movlw	0
  3690  01D8  224F  120A  118A   	fcall	_lcdport
  3691                           
  3692                           ;lcd.c: 73: _delay((unsigned long)((20)*(20000000/4000.0)));
  3693  01DB  3082               	movlw	130
  3694  01DC  00D9               	movwf	??_lcd_init+1
  3695  01DD  30DD               	movlw	221
  3696  01DE  00D8               	movwf	??_lcd_init
  3697  01DF                     u2097:	
  3698  01DF  0BD8               	decfsz	??_lcd_init,f
  3699  01E0  29DF               	goto	u2097
  3700  01E1  0BD9               	decfsz	??_lcd_init+1,f
  3701  01E2  29DF               	goto	u2097
  3702  01E3  29E4               	nop2
  3703                           
  3704                           ;lcd.c: 74: lcdcmd(0x03);
  3705  01E4  3003               	movlw	3
  3706  01E5  221C  120A  118A   	fcall	_lcdcmd
  3707                           
  3708                           ;lcd.c: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
  3709  01E8  3021               	movlw	33
  3710  01E9  00D9               	movwf	??_lcd_init+1
  3711  01EA  3076               	movlw	118
  3712  01EB  00D8               	movwf	??_lcd_init
  3713  01EC                     u2107:	
  3714  01EC  0BD8               	decfsz	??_lcd_init,f
  3715  01ED  29EC               	goto	u2107
  3716  01EE  0BD9               	decfsz	??_lcd_init+1,f
  3717  01EF  29EC               	goto	u2107
  3718  01F0  0064               	clrwdt
  3719                           
  3720                           ;lcd.c: 76: lcdcmd(0x03);
  3721  01F1  3003               	movlw	3
  3722  01F2  221C  120A  118A   	fcall	_lcdcmd
  3723                           
  3724                           ;lcd.c: 77: _delay((unsigned long)((11)*(20000000/4000.0)));
  3725  01F5  3048               	movlw	72
  3726  01F6  00D9               	movwf	??_lcd_init+1
  3727  01F7  306C               	movlw	108
  3728  01F8  00D8               	movwf	??_lcd_init
  3729  01F9                     u2117:	
  3730  01F9  0BD8               	decfsz	??_lcd_init,f
  3731  01FA  29F9               	goto	u2117
  3732  01FB  0BD9               	decfsz	??_lcd_init+1,f
  3733  01FC  29F9               	goto	u2117
  3734  01FD  0064               	clrwdt
  3735                           
  3736                           ;lcd.c: 78: lcdcmd(0x03);
  3737  01FE  3003               	movlw	3
  3738  01FF  221C  120A  118A   	fcall	_lcdcmd
  3739                           
  3740                           ;lcd.c: 80: lcdcmd(0x02);
  3741  0202  3002               	movlw	2
  3742  0203  221C  120A  118A   	fcall	_lcdcmd
  3743                           
  3744                           ;lcd.c: 81: lcdcmd(0x02);
  3745  0206  3002               	movlw	2
  3746  0207  221C  120A  118A   	fcall	_lcdcmd
  3747                           
  3748                           ;lcd.c: 82: lcdcmd(0x28);
  3749  020A  3028               	movlw	40
  3750  020B  221C  120A  118A   	fcall	_lcdcmd
  3751                           
  3752                           ;lcd.c: 83: lcdcmd(0x00);
  3753  020E  3000               	movlw	0
  3754  020F  221C  120A  118A   	fcall	_lcdcmd
  3755                           
  3756                           ;lcd.c: 84: lcdcmd(0x0C);
  3757  0212  300C               	movlw	12
  3758  0213  221C  120A  118A   	fcall	_lcdcmd
  3759                           
  3760                           ;lcd.c: 85: lcdcmd(0x00);
  3761  0216  3000               	movlw	0
  3762  0217  221C  120A  118A   	fcall	_lcdcmd
  3763                           
  3764                           ;lcd.c: 86: lcdcmd(0x06);
  3765  021A  3006               	movlw	6
  3766  021B  2A1C               	ljmp	_lcdcmd
  3767  021C                     __end_of_lcd_init:	
  3768  021C                     __ptext1136:	
  3769 ;; =============== function _lcddata ends ============
  3770                           
  3771                           
  3772 ;; *************** function _lcdcmd *****************
  3773 ;; Defined at:
  3774 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  a               1    wreg     unsigned char 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  a               1    4[BANK0 ] unsigned char 
  3779 ;;  z               1    3[BANK0 ] unsigned char 
  3780 ;;  y               1    2[BANK0 ] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;		None               void
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 60/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3790 ;;      Params:         0       0       0       0       0
  3791 ;;      Locals:         0       3       0       0       0
  3792 ;;      Temps:          0       0       0       0       0
  3793 ;;      Totals:         0       3       0       0       0
  3794 ;;Total ram usage:        3 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    4
  3797 ;; This function calls:
  3798 ;;		_lcdport
  3799 ;;		_enable
  3800 ;; This function is called by:
  3801 ;;		_lcd_init
  3802 ;;		_gsm_init
  3803 ;;		_DisplayAmnt
  3804 ;;		_DisplayStock
  3805 ;;		_DisplaySugar
  3806 ;;		_DisplayRise
  3807 ;;		_DisplayKerosene
  3808 ;;		_startup
  3809 ;;		_main
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812  021C                     _lcdcmd:	
  3813  021C  23F1               	call	PL10	;select bank 0
  3814                           
  3815                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+pclath+cstack]
  3816                           ;lcdcmd@a stored from wreg
  3817  021D  00D7               	movwf	lcdcmd@a
  3818                           
  3819                           ;lcd.c: 40: unsigned char y,z;
  3820                           ;lcd.c: 41: z=a>>4&0x0F;
  3821  021E  0E57               	swapf	lcdcmd@a,w
  3822  021F  390F               	andlw	15
  3823  0220  00D6               	movwf	lcdcmd@z
  3824  0221  300F               	movlw	15
  3825  0222  05D6               	andwf	lcdcmd@z,f
  3826                           
  3827                           ;lcd.c: 42: y=a&0x0F;
  3828  0223  0857               	movf	lcdcmd@a,w
  3829  0224  00D5               	movwf	lcdcmd@y
  3830  0225  300F               	movlw	15
  3831  0226  05D5               	andwf	lcdcmd@y,f
  3832                           
  3833                           ;lcd.c: 44: lcdport(z);
  3834  0227  0856               	movf	lcdcmd@z,w
  3835  0228  224F  120A  118A   	fcall	_lcdport
  3836                           
  3837                           ;lcd.c: 45: enable();
  3838  022B  237D  120A  118A   	fcall	_enable
  3839                           
  3840                           ;lcd.c: 46: lcdport(y);
  3841  022E  0855               	movf	lcdcmd@y,w
  3842  022F  224F  120A  118A   	fcall	_lcdport
  3843                           
  3844                           ;lcd.c: 47: enable();
  3845  0232  2B7D               	ljmp	l3820
  3846  0233                     __end_of_lcdcmd:	
  3847  0233                     __ptext1131:	
  3848 ;; =============== function _DisplayAmnt ends ============
  3849                           
  3850                           
  3851 ;; *************** function _lcdstring *****************
  3852 ;; Defined at:
  3853 ;;		line 90 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  a               2    5[BANK0 ] PTR const unsigned char 
  3856 ;;		 -> STR_43(21), STR_42(21), STR_41(21), STR_40(21), 
  3857 ;;		 -> STR_39(21), STR_38(21), STR_37(21), STR_36(21), 
  3858 ;;		 -> STR_35(21), STR_34(21), STR_33(21), STR_32(21), 
  3859 ;;		 -> STR_31(18), STR_30(18), STR_26(18), STR_25(18), 
  3860 ;;		 -> STR_24(18), STR_23(18), STR_22(22), STR_21(22), 
  3861 ;;		 -> STR_20(21), STR_19(21), sms(20), STR_8(10), 
  3862 ;;		 -> STR_2(17), STR_1(17), 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;		None               void
  3867 ;; Registers used:
  3868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 60/0
  3871 ;;		On exit  : 60/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3874 ;;      Params:         0       2       0       0       0
  3875 ;;      Locals:         0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0
  3877 ;;      Totals:         0       2       0       0       0
  3878 ;;Total ram usage:        2 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    5
  3881 ;; This function calls:
  3882 ;;		_lcddata
  3883 ;; This function is called by:
  3884 ;;		_gsm_init
  3885 ;;		_DisplayStock
  3886 ;;		_startup
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890  0233                     _lcdstring:	
  3891  0233                     l3964:	
  3892                           ;lcd.c: 91: while(*a)
  3893                           
  3894                           ; Regs used in _lcdstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3895                           
  3896  0233  0859               	movf	lcdstring@a+1,w
  3897  0234  00FF               	movwf	127
  3898  0235  0858               	movf	lcdstring@a,w
  3899  0236  0084               	movwf	4
  3900  0237  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3901  023C  3800               	iorlw	0
  3902  023D  1903               	btfsc	3,2
  3903  023E  0008               	return
  3904                           
  3905                           ;lcd.c: 92: {
  3906                           ;lcd.c: 93: lcddata(*a++);
  3907  023F  0859               	movf	lcdstring@a+1,w
  3908  0240  00FF               	movwf	127
  3909  0241  0858               	movf	lcdstring@a,w
  3910  0242  0084               	movwf	4
  3911  0243  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3912  0248  231F  120A  118A   	fcall	_lcddata
  3913  024B  0AD8               	incf	lcdstring@a,f
  3914  024C  1903               	skipnz
  3915  024D  0AD9               	incf	lcdstring@a+1,f
  3916  024E  2A33               	goto	l3964
  3917  024F                     __end_of_lcdstring:	
  3918  024F                     __ptext1159:	
  3919 ;; =============== function _receive ends ============
  3920                           
  3921                           
  3922 ;; *************** function _lcdport *****************
  3923 ;; Defined at:
  3924 ;;		line 16 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  a               1    wreg     unsigned char 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  a               1    0[BANK0 ] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;		None               void
  3931 ;; Registers used:
  3932 ;;		wreg
  3933 ;; Tracked objects:
  3934 ;;		On entry : 60/0
  3935 ;;		On exit  : 60/0
  3936 ;;		Unchanged: FFF9F/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         0       0       0       0       0
  3939 ;;      Locals:         0       1       0       0       0
  3940 ;;      Temps:          0       0       0       0       0
  3941 ;;      Totals:         0       1       0       0       0
  3942 ;;Total ram usage:        1 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    3
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_lcdcmd
  3949 ;;		_lcddata
  3950 ;;		_lcd_init
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953  024F                     _lcdport:	
  3954                           
  3955                           ; Regs used in _lcdport: [wreg]
  3956                           ;lcdport@a stored from wreg
  3957  024F  00D3               	movwf	lcdport@a
  3958                           
  3959                           ;lcd.c: 17: if(a & 1)
  3960  0250  1C53               	btfss	lcdport@a,0
  3961  0251  2A54               	goto	l952
  3962                           
  3963                           ;lcd.c: 18: RD4 = 1;
  3964  0252  1608               	bsf	8,4
  3965  0253  2A55               	goto	l953
  3966  0254                     l952:	
  3967                           
  3968                           ;lcd.c: 19: else
  3969                           ;lcd.c: 20: RD4 = 0;
  3970  0254  1208               	bcf	8,4
  3971  0255                     l953:	
  3972                           
  3973                           ;lcd.c: 22: if(a & 2)
  3974  0255  1CD3               	btfss	lcdport@a,1
  3975  0256  2A59               	goto	l954
  3976                           
  3977                           ;lcd.c: 23: RD5 = 1;
  3978  0257  1688               	bsf	8,5
  3979  0258  2A5A               	goto	l955
  3980  0259                     l954:	
  3981                           
  3982                           ;lcd.c: 24: else
  3983                           ;lcd.c: 25: RD5 = 0;
  3984  0259  1288               	bcf	8,5
  3985  025A                     l955:	
  3986                           
  3987                           ;lcd.c: 27: if(a & 4)
  3988  025A  1D53               	btfss	lcdport@a,2
  3989  025B  2A5E               	goto	l956
  3990                           
  3991                           ;lcd.c: 28: RD6 = 1;
  3992  025C  1708               	bsf	8,6
  3993  025D  2A5F               	goto	l957
  3994  025E                     l956:	
  3995                           
  3996                           ;lcd.c: 29: else
  3997                           ;lcd.c: 30: RD6 = 0;
  3998  025E  1308               	bcf	8,6
  3999  025F                     l957:	
  4000                           
  4001                           ;lcd.c: 32: if(a & 8)
  4002  025F  1DD3               	btfss	lcdport@a,3
  4003  0260  2A63               	goto	l958
  4004                           
  4005                           ;lcd.c: 33: RD7 = 1;
  4006  0261  1788               	bsf	8,7
  4007  0262  0008               	return
  4008  0263                     l958:	
  4009                           
  4010                           ;lcd.c: 34: else
  4011                           ;lcd.c: 35: RD7 = 0;
  4012  0263  1388               	bcf	8,7
  4013  0264  0008               	return
  4014  0265                     __end_of_lcdport:	
  4015  0265                     __ptext1130:	
  4016 ;; =============== function _DisplaySugar ends ============
  4017                           
  4018                           
  4019 ;; *************** function _DisplayAmnt *****************
  4020 ;; Defined at:
  4021 ;;		line 80 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  Location        1    wreg     unsigned char 
  4024 ;;  Amnt            2   14[BANK0 ] int 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  Location        1   16[BANK0 ] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 60/0
  4033 ;;		On exit  : 60/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       2       0       0       0
  4037 ;;      Locals:         0       3       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         0       5       0       0       0
  4040 ;;Total ram usage:        5 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    5
  4043 ;; This function calls:
  4044 ;;		_lcdcmd
  4045 ;;		___awdiv
  4046 ;;		_lcddata
  4047 ;;		___awmod
  4048 ;; This function is called by:
  4049 ;;		_DisplayStock
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053  0265                     _DisplayAmnt:	
  4054                           
  4055                           ; Regs used in _DisplayAmnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4056                           ;DisplayAmnt@Location stored from wreg
  4057  0265  00E3               	movwf	DisplayAmnt@Location
  4058                           
  4059                           ;Main.c: 81: lcdcmd(Location);
  4060  0266  221C  120A  118A   	fcall	_lcdcmd
  4061                           
  4062                           ;Main.c: 82: lcddata(digit[Amnt/1000]);
  4063  0269  30E8               	movlw	232
  4064  026A  00D9               	movwf	?___awdiv
  4065  026B  3003               	movlw	3
  4066  026C  00DA               	movwf	?___awdiv+1
  4067  026D  0862               	movf	DisplayAmnt@Amnt+1,w
  4068  026E  00DC               	movwf	?___awdiv+3
  4069  026F  0861               	movf	DisplayAmnt@Amnt,w
  4070  0270  00DB               	movwf	?___awdiv+2
  4071  0271  2338               	fcall	___awdiv
  4072  0272  0859               	movf	?___awdiv,w
  4073  0273  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4074  0278  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4075  027D  231F  120A  118A   	fcall	_lcddata
  4076                           
  4077                           ;Main.c: 83: lcddata(digit[Amnt%1000/100]);
  4078  0280  3064               	movlw	100
  4079  0281  00D9               	movwf	?___awdiv
  4080  0282  01DA               	clrf	?___awdiv+1
  4081  0283  23E0  120A  118A   	fcall	PL5	;call to abstracted procedure
  4082  0286  22E2  120A  118A   	fcall	___awmod
  4083  0289  0854               	movf	?___awmod+1,w
  4084  028A  00DC               	movwf	?___awdiv+3
  4085  028B  0853               	movf	?___awmod,w
  4086  028C  00DB               	movwf	?___awdiv+2
  4087  028D  2338               	fcall	___awdiv
  4088  028E  0859               	movf	?___awdiv,w
  4089  028F  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4090  0294  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4091  0299  231F  120A  118A   	fcall	_lcddata
  4092                           
  4093                           ;Main.c: 84: lcddata(digit[Amnt%1000%100/10]);
  4094  029C  300A               	movlw	10
  4095  029D  00D9               	movwf	?___awdiv
  4096  029E  01DA               	clrf	?___awdiv+1
  4097  029F  23E0  120A  118A   	fcall	PL5	;call to abstracted procedure
  4098  02A2  22E2  120A  118A   	fcall	___awmod
  4099  02A5  23E9  120A  118A   	fcall	PL6	;call to abstracted procedure
  4100  02A8  22E2  120A  118A   	fcall	___awmod
  4101  02AB  0854               	movf	?___awmod+1,w
  4102  02AC  00DC               	movwf	?___awdiv+3
  4103  02AD  0853               	movf	?___awmod,w
  4104  02AE  00DB               	movwf	?___awdiv+2
  4105  02AF  2338               	fcall	___awdiv
  4106  02B0  0859               	movf	?___awdiv,w
  4107  02B1  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4108  02B6  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4109  02BB  231F  120A  118A   	fcall	_lcddata
  4110                           
  4111                           ;Main.c: 85: lcddata(digit[Amnt%1000%100%10]);
  4112  02BE  23E0  120A  118A   	fcall	PL5	;call to abstracted procedure
  4113  02C1  22E2  120A  118A   	fcall	___awmod
  4114  02C4  23E9  120A  118A   	fcall	PL6	;call to abstracted procedure
  4115  02C7  22E2  120A  118A   	fcall	___awmod
  4116  02CA  0854               	movf	?___awmod+1,w
  4117  02CB  00E5               	movwf	_DisplayAmnt$1090+1
  4118  02CC  0853               	movf	?___awmod,w
  4119  02CD  00E4               	movwf	_DisplayAmnt$1090
  4120                           
  4121                           ;Main.c: 85: lcddata(digit[Amnt%1000%100%10]);
  4122  02CE  300A               	movlw	10
  4123  02CF  00D3               	movwf	?___awmod
  4124  02D0  01D4               	clrf	?___awmod+1
  4125  02D1  0865               	movf	_DisplayAmnt$1090+1,w
  4126  02D2  00D6               	movwf	?___awmod+3
  4127  02D3  0864               	movf	_DisplayAmnt$1090,w
  4128  02D4  00D5               	movwf	?___awmod+2
  4129  02D5  22E2               	fcall	___awmod
  4130  02D6  0853               	movf	?___awmod,w
  4131  02D7  120A  118A  2738   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  4132  02DC  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  4133  02E1  2B1F               	ljmp	_lcddata
  4134  02E2                     __end_of_DisplayAmnt:	
  4135  02E2                     __ptext1146:	
  4136 ;; =============== function _DelayS ends ============
  4137                           
  4138                           
  4139 ;; *************** function ___awmod *****************
  4140 ;; Defined at:
  4141 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awmod.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  divisor         2    0[BANK0 ] int 
  4144 ;;  dividend        2    2[BANK0 ] int 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  sign            1    5[BANK0 ] unsigned char 
  4147 ;;  counter         1    4[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[BANK0 ] int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 60/0
  4154 ;;		On exit  : 60/0
  4155 ;;		Unchanged: FFF9F/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       4       0       0       0
  4158 ;;      Locals:         0       2       0       0       0
  4159 ;;      Temps:          0       0       0       0       0
  4160 ;;      Totals:         0       6       0       0       0
  4161 ;;Total ram usage:        6 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    3
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_DisplayAmnt
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170  02E2                     ___awmod:	
  4171                           
  4172                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4173  02E2  01D8               	clrf	___awmod@sign
  4174  02E3  1FD6               	btfss	___awmod@dividend+1,7
  4175  02E4  2AEC               	goto	l3784
  4176  02E5  09D5               	comf	___awmod@dividend,f
  4177  02E6  09D6               	comf	___awmod@dividend+1,f
  4178  02E7  0AD5               	incf	___awmod@dividend,f
  4179  02E8  1903               	skipnz
  4180  02E9  0AD6               	incf	___awmod@dividend+1,f
  4181  02EA  01D8               	clrf	___awmod@sign
  4182  02EB  0AD8               	incf	___awmod@sign,f
  4183  02EC                     l3784:	
  4184  02EC  1FD4               	btfss	___awmod@divisor+1,7
  4185  02ED  2AF3               	goto	l3788
  4186  02EE  09D3               	comf	___awmod@divisor,f
  4187  02EF  09D4               	comf	___awmod@divisor+1,f
  4188  02F0  0AD3               	incf	___awmod@divisor,f
  4189  02F1  1903               	skipnz
  4190  02F2  0AD4               	incf	___awmod@divisor+1,f
  4191  02F3                     l3788:	
  4192  02F3  0854               	movf	___awmod@divisor+1,w
  4193  02F4  0453               	iorwf	___awmod@divisor,w
  4194  02F5  1903               	skipnz
  4195  02F6  2B12               	goto	l3804
  4196  02F7  01D7               	clrf	___awmod@counter
  4197  02F8                     L4:	
  4198  02F8  0AD7               	incf	___awmod@counter,f
  4199  02F9  1BD4               	btfsc	___awmod@divisor+1,7
  4200  02FA  2AFF               	goto	l3796
  4201  02FB  1003               	clrc
  4202  02FC  0DD3               	rlf	___awmod@divisor,f
  4203  02FD  0DD4               	rlf	___awmod@divisor+1,f
  4204  02FE  2AF8               	goto	L4
  4205  02FF                     l3796:	
  4206  02FF  0854               	movf	___awmod@divisor+1,w
  4207  0300  0256               	subwf	___awmod@dividend+1,w
  4208  0301  1D03               	skipz
  4209  0302  2B05               	goto	u1785
  4210  0303  0853               	movf	___awmod@divisor,w
  4211  0304  0255               	subwf	___awmod@dividend,w
  4212  0305                     u1785:	
  4213  0305  1C03               	skipc
  4214  0306  2B0E               	goto	L5
  4215  0307  0853               	movf	___awmod@divisor,w
  4216  0308  02D5               	subwf	___awmod@dividend,f
  4217  0309  0854               	movf	___awmod@divisor+1,w
  4218  030A  1C03               	skipc
  4219  030B  03D6               	decf	___awmod@dividend+1,f
  4220  030C  02D6               	subwf	___awmod@dividend+1,f
  4221  030D  1003               	clrc
  4222  030E                     L5:	
  4223  030E  0CD4               	rrf	___awmod@divisor+1,f
  4224  030F  0CD3               	rrf	___awmod@divisor,f
  4225  0310  0BD7               	decfsz	___awmod@counter,f
  4226  0311  2AFF               	goto	l3796
  4227  0312                     l3804:	
  4228  0312  0858               	movf	___awmod@sign,w
  4229  0313  1903               	btfsc	3,2
  4230  0314  2B1A               	goto	l3808
  4231  0315  09D5               	comf	___awmod@dividend,f
  4232  0316  09D6               	comf	___awmod@dividend+1,f
  4233  0317  0AD5               	incf	___awmod@dividend,f
  4234  0318  1903               	skipnz
  4235  0319  0AD6               	incf	___awmod@dividend+1,f
  4236  031A                     l3808:	
  4237  031A  0856               	movf	___awmod@dividend+1,w
  4238  031B  00D4               	movwf	?___awmod+1
  4239  031C  0855               	movf	___awmod@dividend,w
  4240  031D  00D3               	movwf	?___awmod
  4241  031E  0008               	return
  4242  031F                     __end_of___awmod:	
  4243  031F                     __ptext1135:	
  4244 ;; =============== function _RFID_read ends ============
  4245                           
  4246                           
  4247 ;; *************** function _lcddata *****************
  4248 ;; Defined at:
  4249 ;;		line 51 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  a               1    wreg     unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  a               1    4[BANK0 ] unsigned char 
  4254 ;;  z               1    3[BANK0 ] unsigned char 
  4255 ;;  y               1    2[BANK0 ] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;		None               void
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 60/0
  4262 ;;		On exit  : 60/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         0       0       0       0       0
  4266 ;;      Locals:         0       3       0       0       0
  4267 ;;      Temps:          0       0       0       0       0
  4268 ;;      Totals:         0       3       0       0       0
  4269 ;;Total ram usage:        3 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    4
  4272 ;; This function calls:
  4273 ;;		_lcdport
  4274 ;;		_enable
  4275 ;; This function is called by:
  4276 ;;		_lcdstring
  4277 ;;		_DisplayAmnt
  4278 ;;		_DisplaySugar
  4279 ;;		_DisplayRise
  4280 ;;		_DisplayKerosene
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283  031F                     _lcddata:	
  4284                           
  4285                           ; Regs used in _lcddata: [wreg+status,2+status,0+pclath+cstack]
  4286                           ;lcddata@a stored from wreg
  4287  031F  00D7               	movwf	lcddata@a
  4288                           
  4289                           ;lcd.c: 52: unsigned char y,z;
  4290                           ;lcd.c: 53: z=a>>4&0x0F;
  4291  0320  0E57               	swapf	lcddata@a,w
  4292  0321  390F               	andlw	15
  4293  0322  00D6               	movwf	lcddata@z
  4294  0323  300F               	movlw	15
  4295  0324  05D6               	andwf	lcddata@z,f
  4296                           
  4297                           ;lcd.c: 54: y=a&0x0F;
  4298  0325  0857               	movf	lcddata@a,w
  4299  0326  00D5               	movwf	lcddata@y
  4300  0327  300F               	movlw	15
  4301  0328  05D5               	andwf	lcddata@y,f
  4302                           
  4303                           ;lcd.c: 55: RD2=1;
  4304  0329  1508               	bsf	8,2
  4305                           
  4306                           ;lcd.c: 56: lcdport(z);
  4307  032A  0856               	movf	lcddata@z,w
  4308  032B  224F  120A  118A   	fcall	_lcdport
  4309                           
  4310                           ;lcd.c: 57: enable();
  4311  032E  237D  120A  118A   	fcall	_enable
  4312                           
  4313                           ;lcd.c: 58: lcdport(y);
  4314  0331  0855               	movf	lcddata@y,w
  4315  0332  224F  120A  118A   	fcall	_lcdport
  4316                           
  4317                           ;lcd.c: 59: enable();
  4318  0335  237D               	fcall	_enable
  4319                           
  4320                           ;lcd.c: 60: RD2 = 0;
  4321  0336  1108               	bcf	8,2
  4322  0337  0008               	return
  4323  0338                     __end_of_lcddata:	
  4324  0338                     __ptext1147:	
  4325 ;; =============== function ___awmod ends ============
  4326                           
  4327                           
  4328 ;; *************** function ___awdiv *****************
  4329 ;; Defined at:
  4330 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  divisor         2    6[BANK0 ] int 
  4333 ;;  dividend        2    8[BANK0 ] int 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  quotient        2   12[BANK0 ] int 
  4336 ;;  sign            1   11[BANK0 ] unsigned char 
  4337 ;;  counter         1   10[BANK0 ] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  2    6[BANK0 ] int 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 60/0
  4344 ;;		On exit  : 60/0
  4345 ;;		Unchanged: FFF9F/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4347 ;;      Params:         0       4       0       0       0
  4348 ;;      Locals:         0       4       0       0       0
  4349 ;;      Temps:          0       0       0       0       0
  4350 ;;      Totals:         0       8       0       0       0
  4351 ;;Total ram usage:        8 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    3
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_DisplayAmnt
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360  0338                     ___awdiv:	
  4361                           
  4362                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4363  0338  01DE               	clrf	___awdiv@sign
  4364  0339  1FDA               	btfss	___awdiv@divisor+1,7
  4365  033A  2B42               	goto	l3078
  4366  033B  09D9               	comf	___awdiv@divisor,f
  4367  033C  09DA               	comf	___awdiv@divisor+1,f
  4368  033D  0AD9               	incf	___awdiv@divisor,f
  4369  033E  1903               	skipnz
  4370  033F  0ADA               	incf	___awdiv@divisor+1,f
  4371  0340  01DE               	clrf	___awdiv@sign
  4372  0341  0ADE               	incf	___awdiv@sign,f
  4373  0342                     l3078:	
  4374  0342  1FDC               	btfss	___awdiv@dividend+1,7
  4375  0343  2B4B               	goto	l3084
  4376  0344  09DB               	comf	___awdiv@dividend,f
  4377  0345  09DC               	comf	___awdiv@dividend+1,f
  4378  0346  0ADB               	incf	___awdiv@dividend,f
  4379  0347  1903               	skipnz
  4380  0348  0ADC               	incf	___awdiv@dividend+1,f
  4381  0349  3001               	movlw	1
  4382  034A  06DE               	xorwf	___awdiv@sign,f
  4383  034B                     l3084:	
  4384  034B  01DF               	clrf	___awdiv@quotient
  4385  034C  01E0               	clrf	___awdiv@quotient+1
  4386  034D  085A               	movf	___awdiv@divisor+1,w
  4387  034E  0459               	iorwf	___awdiv@divisor,w
  4388  034F  1903               	skipnz
  4389  0350  2B70               	goto	l3106
  4390  0351  01DD               	clrf	___awdiv@counter
  4391  0352                     L6:	
  4392  0352  0ADD               	incf	___awdiv@counter,f
  4393  0353  1BDA               	btfsc	___awdiv@divisor+1,7
  4394  0354  2B59               	goto	l3094
  4395  0355  1003               	clrc
  4396  0356  0DD9               	rlf	___awdiv@divisor,f
  4397  0357  0DDA               	rlf	___awdiv@divisor+1,f
  4398  0358  2B52               	goto	L6
  4399  0359                     l3094:	
  4400  0359  1003               	clrc
  4401  035A  0DDF               	rlf	___awdiv@quotient,f
  4402  035B  0DE0               	rlf	___awdiv@quotient+1,f
  4403  035C  085A               	movf	___awdiv@divisor+1,w
  4404  035D  025C               	subwf	___awdiv@dividend+1,w
  4405  035E  1D03               	skipz
  4406  035F  2B62               	goto	u1165
  4407  0360  0859               	movf	___awdiv@divisor,w
  4408  0361  025B               	subwf	___awdiv@dividend,w
  4409  0362                     u1165:	
  4410  0362  1C03               	skipc
  4411  0363  2B6C               	goto	L7
  4412  0364  0859               	movf	___awdiv@divisor,w
  4413  0365  02DB               	subwf	___awdiv@dividend,f
  4414  0366  085A               	movf	___awdiv@divisor+1,w
  4415  0367  1C03               	skipc
  4416  0368  03DC               	decf	___awdiv@dividend+1,f
  4417  0369  02DC               	subwf	___awdiv@dividend+1,f
  4418  036A  145F               	bsf	___awdiv@quotient,0
  4419  036B  1003               	clrc
  4420  036C                     L7:	
  4421  036C  0CDA               	rrf	___awdiv@divisor+1,f
  4422  036D  0CD9               	rrf	___awdiv@divisor,f
  4423  036E  0BDD               	decfsz	___awdiv@counter,f
  4424  036F  2B59               	goto	l3094
  4425  0370                     l3106:	
  4426  0370  085E               	movf	___awdiv@sign,w
  4427  0371  1903               	btfsc	3,2
  4428  0372  2B78               	goto	l3110
  4429  0373  09DF               	comf	___awdiv@quotient,f
  4430  0374  09E0               	comf	___awdiv@quotient+1,f
  4431  0375  0ADF               	incf	___awdiv@quotient,f
  4432  0376  1903               	skipnz
  4433  0377  0AE0               	incf	___awdiv@quotient+1,f
  4434  0378                     l3110:	
  4435  0378  0860               	movf	___awdiv@quotient+1,w
  4436  0379  00DA               	movwf	?___awdiv+1
  4437  037A  085F               	movf	___awdiv@quotient,w
  4438  037B  00D9               	movwf	?___awdiv
  4439  037C  0008               	return
  4440  037D                     __end_of___awdiv:	
  4441  037D                     __ptext1144:	
  4442 ;; =============== function _SoftWareUart_Init ends ============
  4443                           
  4444                           
  4445 ;; *************** function _enable *****************
  4446 ;; Defined at:
  4447 ;;		line 9 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;		None               void
  4454 ;; Registers used:
  4455 ;;		wreg
  4456 ;; Tracked objects:
  4457 ;;		On entry : 60/0
  4458 ;;		On exit  : 60/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0
  4463 ;;      Temps:          0       2       0       0       0
  4464 ;;      Totals:         0       2       0       0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    3
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_lcdcmd
  4472 ;;		_lcddata
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475  037D                     _enable:	
  4476  037D                     l3820:	
  4477                           ; Regs used in _enable: [wreg]
  4478                           
  4479                           
  4480                           ;lcd.c: 10: RD3 = 1;
  4481  037D  1588               	bsf	8,3
  4482                           
  4483                           ;lcd.c: 11: _delay((unsigned long)((4)*(20000000/4000.0)));
  4484  037E  301A               	movlw	26
  4485  037F  00D4               	movwf	??_enable+1
  4486  0380  30F8               	movlw	248
  4487  0381  00D3               	movwf	??_enable
  4488  0382                     u2167:	
  4489  0382  0BD3               	decfsz	??_enable,f
  4490  0383  2B82               	goto	u2167
  4491  0384  0BD4               	decfsz	??_enable+1,f
  4492  0385  2B82               	goto	u2167
  4493  0386  0064               	clrwdt
  4494  0387  23F1               	call	PL10	;select bank 0
  4495                           
  4496                           ;lcd.c: 12: RD3 = 0;
  4497  0388  1188               	bcf	8,3
  4498  0389  0008               	return
  4499  038A                     __end_of_enable:	
  4500  038A                     __ptext1145:	
  4501 ;; =============== function _enable ends ============
  4502                           
  4503                           
  4504 ;; *************** function _DelayS *****************
  4505 ;; Defined at:
  4506 ;;		line 75 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Delay.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  cnt             1    wreg     unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  cnt             1    2[BANK0 ] unsigned char 
  4511 ;;  i               1    3[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;		None               void
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, pclath, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 60/0
  4518 ;;		On exit  : 60/0
  4519 ;;		Unchanged: FFE00/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         0       0       0       0       0
  4522 ;;      Locals:         0       2       0       0       0
  4523 ;;      Temps:          0       0       0       0       0
  4524 ;;      Totals:         0       2       0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    4
  4528 ;; This function calls:
  4529 ;;		_DelayMs
  4530 ;; This function is called by:
  4531 ;;		_gsm_init
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534  038A                     _DelayS:	
  4535                           
  4536                           ; Regs used in _DelayS: [wreg+status,2+status,0+pclath+cstack]
  4537                           ;DelayS@cnt stored from wreg
  4538  038A  00D5               	movwf	DelayS@cnt
  4539  038B                     l942:	
  4540                           ;Delay.c: 76: unsigned char i;
  4541                           ;Delay.c: 77: do {
  4542                           
  4543                           
  4544                           ;Delay.c: 78: i = 4;
  4545  038B  3004               	movlw	4
  4546  038C  00D6               	movwf	DelayS@i
  4547  038D                     l3814:	
  4548                           
  4549                           ;Delay.c: 80: DelayMs(250);
  4550  038D  30FA               	movlw	250
  4551  038E  2398  120A  118A   	fcall	_DelayMs
  4552  0391  0064               	clrwdt	;#
  4553  0392  23F1               	call	PL10	;select bank 0
  4554                           
  4555                           ;Delay.c: 82: } while(--i);
  4556  0393  0BD6               	decfsz	DelayS@i,f
  4557  0394  2B8D               	goto	l3814
  4558                           
  4559                           ;Delay.c: 83: } while(--cnt);
  4560  0395  0BD5               	decfsz	DelayS@cnt,f
  4561  0396  2B8B               	goto	l942
  4562  0397  0008               	return
  4563  0398                     __end_of_DelayS:	
  4564  0398                     __ptext1160:	
  4565 ;; =============== function _lcdport ends ============
  4566                           
  4567                           
  4568 ;; *************** function _DelayMs *****************
  4569 ;; Defined at:
  4570 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Delay.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  cnt             1    wreg     unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  cnt             1    0[BANK0 ] unsigned char 
  4575 ;;  i               1    1[BANK0 ] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg
  4580 ;; Tracked objects:
  4581 ;;		On entry : 60/0
  4582 ;;		On exit  : 60/0
  4583 ;;		Unchanged: FFE00/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         0       2       0       0       0
  4587 ;;      Temps:          0       0       0       0       0
  4588 ;;      Totals:         0       2       0       0       0
  4589 ;;Total ram usage:        2 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    3
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_DelayS
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598  0398                     _DelayMs:	
  4599                           
  4600                           ; Regs used in _DelayMs: [wreg]
  4601                           ;DelayMs@cnt stored from wreg
  4602  0398  00D3               	movwf	DelayMs@cnt
  4603  0399                     l921:	
  4604                           ;Delay.c: 40: unsigned char i;
  4605                           ;Delay.c: 41: do {
  4606                           
  4607                           
  4608                           ;Delay.c: 42: i = 4;
  4609  0399  3004               	movlw	4
  4610  039A  00D4               	movwf	DelayMs@i
  4611  039B                     l922:	
  4612                           ;Delay.c: 43: do {
  4613                           
  4614                           
  4615                           ;Delay.c: 44: { delayus_variable=(unsigned char)(250/4); asm("nop"); } asm("decfsz _dela
      +                          yus_variable,f"); asm("goto $ - 2");;
  4616  039B  303E               	movlw	62
  4617  039C  00F7               	movwf	_delayus_variable
  4618  039D  0000               	nop	;#
  4619  039E  120A  118A  0BF7   	decfsz	_delayus_variable,f	;#
  4620  03A1  280F               	goto	($+-2)	;#
  4621  03A2  0064               	clrwdt	;#
  4622  03A3  23F1               	call	PL10	;select bank 0
  4623                           
  4624                           ;Delay.c: 46: } while(--i);
  4625  03A4  0BD4               	decfsz	DelayMs@i,f
  4626  03A5  2B9B               	goto	l922
  4627                           
  4628                           ;Delay.c: 47: } while(--cnt);
  4629  03A6  0BD3               	decfsz	DelayMs@cnt,f
  4630  03A7  2B99               	goto	l921
  4631  03A8  0008               	return
  4632  03A9                     __end_of_DelayMs:	
  4633  03A9                     __ptext1149:	
  4634 ;; =============== function ___lbmod ends ============
  4635                           
  4636                           
  4637 ;; *************** function ___lbdiv *****************
  4638 ;; Defined at:
  4639 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbdiv.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  dividend        1    wreg     unsigned char 
  4642 ;;  divisor         1    0[BANK0 ] unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  dividend        1    1[BANK0 ] unsigned char 
  4645 ;;  quotient        1    3[BANK0 ] unsigned char 
  4646 ;;  counter         1    2[BANK0 ] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      unsigned char 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 60/0
  4653 ;;		On exit  : 60/0
  4654 ;;		Unchanged: FFF9F/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4656 ;;      Params:         0       1       0       0       0
  4657 ;;      Locals:         0       3       0       0       0
  4658 ;;      Temps:          0       0       0       0       0
  4659 ;;      Totals:         0       4       0       0       0
  4660 ;;Total ram usage:        4 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    3
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_DisplaySugar
  4667 ;;		_DisplayRise
  4668 ;;		_DisplayKerosene
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671  03A9                     ___lbdiv:	
  4672                           
  4673                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4674                           ;___lbdiv@dividend stored from wreg
  4675  03A9  00D4               	movwf	___lbdiv@dividend
  4676  03AA  01D6               	clrf	___lbdiv@quotient
  4677  03AB  0853               	movf	___lbdiv@divisor,w
  4678  03AC  1903               	btfsc	3,2
  4679  03AD  2BC2               	goto	l3754
  4680  03AE  01D5               	clrf	___lbdiv@counter
  4681  03AF                     l3740:	
  4682  03AF  0AD5               	incf	___lbdiv@counter,f
  4683  03B0  1BD3               	btfsc	___lbdiv@divisor,7
  4684  03B1  2BB5               	goto	l1242
  4685  03B2  1003               	clrc
  4686  03B3  0DD3               	rlf	___lbdiv@divisor,f
  4687  03B4  2BAF               	goto	l3740
  4688  03B5                     l1242:	
  4689  03B5  1003               	clrc
  4690  03B6  0DD6               	rlf	___lbdiv@quotient,f
  4691  03B7  0853               	movf	___lbdiv@divisor,w
  4692  03B8  0254               	subwf	___lbdiv@dividend,w
  4693  03B9  1C03               	skipc
  4694  03BA  2BBF               	goto	L9
  4695  03BB  0853               	movf	___lbdiv@divisor,w
  4696  03BC  02D4               	subwf	___lbdiv@dividend,f
  4697  03BD  1456               	bsf	___lbdiv@quotient,0
  4698  03BE  1003               	clrc
  4699  03BF                     L9:	
  4700  03BF  0CD3               	rrf	___lbdiv@divisor,f
  4701  03C0  0BD5               	decfsz	___lbdiv@counter,f
  4702  03C1  2BB5               	goto	l1242
  4703  03C2                     l3754:	
  4704  03C2  0856               	movf	___lbdiv@quotient,w
  4705  03C3  0008               	return
  4706  03C4                     __end_of___lbdiv:	
  4707  03C4                     __ptext1148:	
  4708 ;; =============== function ___awdiv ends ============
  4709                           
  4710                           
  4711 ;; *************** function ___lbmod *****************
  4712 ;; Defined at:
  4713 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbmod.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  dividend        1    wreg     unsigned char 
  4716 ;;  divisor         1    0[BANK0 ] unsigned char 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  dividend        1    2[BANK0 ] unsigned char 
  4719 ;;  rem             1    4[BANK0 ] unsigned char 
  4720 ;;  counter         1    3[BANK0 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 60/0
  4727 ;;		On exit  : 60/0
  4728 ;;		Unchanged: FFF9F/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4730 ;;      Params:         0       1       0       0       0
  4731 ;;      Locals:         0       3       0       0       0
  4732 ;;      Temps:          0       1       0       0       0
  4733 ;;      Totals:         0       5       0       0       0
  4734 ;;Total ram usage:        5 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    3
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_DisplaySugar
  4741 ;;		_DisplayRise
  4742 ;;		_DisplayKerosene
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745  03C4                     ___lbmod:	
  4746                           
  4747                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4748                           ;___lbmod@dividend stored from wreg
  4749  03C4  00D5               	movwf	___lbmod@dividend
  4750  03C5  3008               	movlw	8
  4751  03C6  00D6               	movwf	___lbmod@counter
  4752  03C7  01D7               	clrf	___lbmod@rem
  4753  03C8                     l3762:	
  4754  03C8  0855               	movf	___lbmod@dividend,w
  4755  03C9  00D4               	movwf	??___lbmod
  4756  03CA  3007               	movlw	7
  4757  03CB  1003               	clrc
  4758  03CC                     L8:	
  4759  03CC  0CD4               	rrf	??___lbmod,f
  4760  03CD  3EFF               	addlw	-1
  4761  03CE  1003               	clrc
  4762  03CF  1D03               	skipz
  4763  03D0  2BCC               	goto	L8
  4764  03D1  0D57               	rlf	___lbmod@rem,w
  4765  03D2  0454               	iorwf	??___lbmod,w
  4766  03D3  00D7               	movwf	___lbmod@rem
  4767  03D4  1003               	clrc
  4768  03D5  0DD5               	rlf	___lbmod@dividend,f
  4769  03D6  0853               	movf	___lbmod@divisor,w
  4770  03D7  0257               	subwf	___lbmod@rem,w
  4771  03D8  1C03               	skipc
  4772  03D9  2BDC               	goto	l3770
  4773  03DA  0853               	movf	___lbmod@divisor,w
  4774  03DB  02D7               	subwf	___lbmod@rem,f
  4775  03DC                     l3770:	
  4776  03DC  0BD6               	decfsz	___lbmod@counter,f
  4777  03DD  2BC8               	goto	l3762
  4778  03DE  0857               	movf	___lbmod@rem,w
  4779  03DF  0008               	return
  4780  03E0                     __end_of___lbmod:	
  4781  03E0                     PL5:	
  4782  03E0  0862               	movf	DisplayAmnt@Amnt+1,w
  4783  03E1  00D6               	movwf	?___awmod+3
  4784  03E2  0861               	movf	DisplayAmnt@Amnt,w
  4785  03E3  00D5               	movwf	?___awmod+2
  4786  03E4  30E8               	movlw	232
  4787  03E5  00D3               	movwf	?___awmod
  4788  03E6  3003               	movlw	3
  4789  03E7  00D4               	movwf	?___awmod+1
  4790  03E8  0008               	return
  4791  03E9                     PL6:	
  4792  03E9  0854               	movf	?___awmod+1,w
  4793  03EA  00D6               	movwf	?___awmod+3
  4794  03EB  0853               	movf	?___awmod,w
  4795  03EC  00D5               	movwf	?___awmod+2
  4796  03ED  3064               	movlw	100
  4797  03EE  00D3               	movwf	?___awmod
  4798  03EF  01D4               	clrf	?___awmod+1
  4799  03F0  0008               	return
  4800  03F1                     PL10:	
  4801  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4802  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4803  03F3  0008               	return
  4804                           
  4805                           	psect	text1134
  4806  075E                     __ptext1134:	
  4807 ;; =============== function _SendRiseStock ends ============
  4808                           
  4809                           
  4810 ;; *************** function _RFID_read *****************
  4811 ;; Defined at:
  4812 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  i               2    3[BANK0 ] int 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;		None               void
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4826 ;;      Params:         0       0       0       0       0
  4827 ;;      Locals:         0       2       0       0       0
  4828 ;;      Temps:          0       0       0       0       0
  4829 ;;      Totals:         0       2       0       0       0
  4830 ;;Total ram usage:        2 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    4
  4833 ;; This function calls:
  4834 ;;		_softreceive
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839  075E                     _RFID_read:	
  4840                           
  4841                           ;Main.c: 72: if(!rfid_flag)
  4842                           
  4843                           ; Regs used in _RFID_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4844  075E  1876               	btfsc	_rfid_flag/(0+8),_rfid_flag& (0+7)
  4845  075F  0008               	return
  4846  0760  279D               	call	PL11	;select bank 0
  4847                           
  4848                           ;Main.c: 73: {
  4849                           ;Main.c: 74: for(int i=0;i<12;i++)
  4850  0761  01D6               	clrf	RFID_read@i
  4851  0762  01D7               	clrf	RFID_read@i+1
  4852  0763                     l3926:	
  4853  0763  279D               	call	PL11	;select bank 0
  4854                           
  4855                           ;Main.c: 75: {card_store[i]=softreceive();}
  4856  0764  0856               	movf	RFID_read@i,w
  4857  0765  3E3F               	addlw	_card_store& (0+255)
  4858  0766  0084               	movwf	4
  4859  0767  277C  120A  118A   	fcall	_softreceive
  4860  076A  1383               	bcf	3,7	;select IRP bank0
  4861  076B  0080               	movwf	0
  4862  076C  0AD6               	incf	RFID_read@i,f
  4863  076D  1903               	skipnz
  4864  076E  0AD7               	incf	RFID_read@i+1,f
  4865  076F  0857               	movf	RFID_read@i+1,w
  4866  0770  3A80               	xorlw	128
  4867  0771  00FF               	movwf	127
  4868  0772  3080               	movlw	128
  4869  0773  027F               	subwf	127,w
  4870  0774  1D03               	skipz
  4871  0775  2F78               	goto	u1885
  4872  0776  300C               	movlw	12
  4873  0777  0256               	subwf	RFID_read@i,w
  4874  0778                     u1885:	
  4875  0778  1C03               	skipc
  4876  0779  2F63               	goto	l3926
  4877                           
  4878                           ;Main.c: 76: rfid_flag=1;
  4879  077A  1476               	bsf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  4880  077B  0008               	return
  4881  077C                     __end_of_RFID_read:	
  4882  077C                     __ptext1142:	
  4883 ;; =============== function _usartstring ends ============
  4884                           
  4885                           
  4886 ;; *************** function _softreceive *****************
  4887 ;; Defined at:
  4888 ;;		line 21 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  mask            1    2[BANK0 ] unsigned char 
  4893 ;;  Data            1    1[BANK0 ] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      unsigned char 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 60/0
  4900 ;;		On exit  : 60/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4903 ;;      Params:         0       0       0       0       0
  4904 ;;      Locals:         0       2       0       0       0
  4905 ;;      Temps:          0       1       0       0       0
  4906 ;;      Totals:         0       3       0       0       0
  4907 ;;Total ram usage:        3 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    3
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_RFID_read
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916  077C                     _softreceive:	
  4917                           
  4918                           ;softuart.c: 22: char mask;
  4919                           ;softuart.c: 23: char Data;
  4920                           ;softuart.c: 24: Data=0;
  4921                           
  4922                           ; Regs used in _softreceive: [wreg+status,2+status,0]
  4923  077C  01D4               	clrf	softreceive@Data
  4924  077D                     l990:	
  4925                           ;softuart.c: 25: while(RD0);
  4926                           
  4927  077D  1808               	btfsc	8,0
  4928  077E  2F7D               	goto	l990
  4929                           
  4930                           ;softuart.c: 26: _delay((unsigned long)(((((1000000/9600)-2)/2))*(20000000/4000000.0)));
  4931  077F  3054               	movlw	84
  4932  0780  00D3               	movwf	??_softreceive
  4933  0781                     u2127:	
  4934  0781  0BD3               	decfsz	??_softreceive,f
  4935  0782  2F81               	goto	u2127
  4936  0783  2F84               	nop2	;nop
  4937  0784  279D               	call	PL11	;select bank 0
  4938                           
  4939                           ;softuart.c: 27: for(mask=0x01;mask!=0;mask=mask<<1)
  4940  0785  01D5               	clrf	softreceive@mask
  4941  0786  0AD5               	incf	softreceive@mask,f
  4942  0787                     l3840:	
  4943                           
  4944                           ;softuart.c: 28: {
  4945                           ;softuart.c: 29: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  4946  0787  30A9               	movlw	169
  4947  0788  00D3               	movwf	??_softreceive
  4948  0789                     u2137:	
  4949  0789  0BD3               	decfsz	??_softreceive,f
  4950  078A  2F89               	goto	u2137
  4951  078B  2F8C               	nop2	;nop
  4952  078C  279D               	call	PL11	;select bank 0
  4953                           
  4954                           ;softuart.c: 30: if(RD0)Data=Data|mask;
  4955  078D  0855               	movf	softreceive@mask,w
  4956  078E  1808               	btfsc	8,0
  4957  078F  04D4               	iorwf	softreceive@Data,f
  4958  0790  1003               	clrc
  4959  0791  0DD5               	rlf	softreceive@mask,f
  4960  0792  08D5               	movf	softreceive@mask,f
  4961  0793  1D03               	skipz
  4962  0794  2F87               	goto	l3840
  4963                           
  4964                           ;softuart.c: 31: }
  4965                           ;softuart.c: 32: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  4966  0795  30A9               	movlw	169
  4967  0796  00D3               	movwf	??_softreceive
  4968  0797                     u2147:	
  4969  0797  0BD3               	decfsz	??_softreceive,f
  4970  0798  2F97               	goto	u2147
  4971  0799  2F9A               	nop2	;nop
  4972  079A  279D               	call	PL11	;select bank 0
  4973                           
  4974                           ;softuart.c: 33: return Data;
  4975  079B  0854               	movf	softreceive@Data,w
  4976  079C  0008               	return
  4977  079D                     __end_of_softreceive:	
  4978  079D                     PL11:	
  4979  079D  1283               	bcf	3,5	;RP0=0, select bank0
  4980  079E  1303               	bcf	3,6	;RP1=0, select bank0
  4981  079F  0008               	return
  4982                           
  4983                           	psect	text1138
  4984  0F0F                     __ptext1138:	
  4985 ;; =============== function _LoadStockToArray ends ============
  4986                           
  4987                           
  4988 ;; *************** function _paramter *****************
  4989 ;; Defined at:
  4990 ;;		line 154 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;		None               void
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0, pclath, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 60/0
  5001 ;;		On exit  : 60/40
  5002 ;;		Unchanged: FFE00/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         0       0       0       0       0
  5005 ;;      Locals:         0       0       0       0       0
  5006 ;;      Temps:          0       0       0       0       0
  5007 ;;      Totals:         0       0       0       0       0
  5008 ;;Total ram usage:        0 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    4
  5011 ;; This function calls:
  5012 ;;		_eeprom_read
  5013 ;;		___wmul
  5014 ;; This function is called by:
  5015 ;;		_main
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018  0F0F                     _paramter:	
  5019                           
  5020                           ;Main.c: 155: c1=(eeprom_read(0)*100)+eeprom_read(1);
  5021                           
  5022                           ; Regs used in _paramter: [wreg+status,2+status,0+pclath+cstack]
  5023  0F0F  3000               	movlw	0
  5024  0F10  27C3  120A  158A   	fcall	_eeprom_read
  5025  0F13  27F9  120A  158A   	fcall	PL3	;call to abstracted procedure
  5026  0F16  27E0  120A  158A   	fcall	___wmul
  5027  0F19  3001               	movlw	1
  5028  0F1A  27C3  120A  158A   	fcall	_eeprom_read
  5029                           
  5030                           ;Main.c: 156: c2=(eeprom_read(2)*100)+eeprom_read(3);
  5031  0F1D  3002               	movlw	2
  5032  0F1E  27C3  120A  158A   	fcall	_eeprom_read
  5033  0F21  27F9  120A  158A   	fcall	PL3	;call to abstracted procedure
  5034  0F24  27E0  120A  158A   	fcall	___wmul
  5035  0F27  3003               	movlw	3
  5036  0F28  2FC3               	ljmp	_eeprom_read
  5037  0F29                     __end_of_paramter:	
  5038  0F29                     __ptext1139:	
  5039 ;; =============== function _paramter ends ============
  5040                           
  5041                           
  5042 ;; *************** function _ReadStock *****************
  5043 ;; Defined at:
  5044 ;;		line 105 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;		None
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;		None
  5049 ;; Return value:  Size  Location     Type
  5050 ;;		None               void
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, status,0, pclath, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 60/0
  5055 ;;		On exit  : 60/0
  5056 ;;		Unchanged: FFE00/0
  5057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5058 ;;      Params:         0       0       0       0       0
  5059 ;;      Locals:         0       0       0       0       0
  5060 ;;      Temps:          0       0       0       0       0
  5061 ;;      Totals:         0       0       0       0       0
  5062 ;;Total ram usage:        0 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    4
  5065 ;; This function calls:
  5066 ;;		_eeprom_read
  5067 ;;		___wmul
  5068 ;; This function is called by:
  5069 ;;		_main
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072  0F29                     _ReadStock:	
  5073                           
  5074                           ;Main.c: 106: RiseStock=(eeprom_read(24)*100)+eeprom_read(25);
  5075                           
  5076                           ; Regs used in _ReadStock: [wreg+status,2+status,0+pclath+cstack]
  5077  0F29  3018               	movlw	24
  5078  0F2A  27C3  120A  158A   	fcall	_eeprom_read
  5079  0F2D  27F9  120A  158A   	fcall	PL3	;call to abstracted procedure
  5080  0F30  27E0  120A  158A   	fcall	___wmul
  5081  0F33  0857               	movf	?___wmul+1,w
  5082  0F34  00AB               	movwf	_RiseStock+1
  5083  0F35  0856               	movf	?___wmul,w
  5084  0F36  00AA               	movwf	_RiseStock
  5085  0F37  3019               	movlw	25
  5086  0F38  27C3  120A  158A   	fcall	_eeprom_read
  5087  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  5088  0F3C  07AA               	addwf	_RiseStock,f
  5089  0F3D  1803               	skipnc
  5090  0F3E  0AAB               	incf	_RiseStock+1,f
  5091                           
  5092                           ;Main.c: 107: SugarStock=eeprom_read(26);
  5093  0F3F  301A               	movlw	26
  5094  0F40  27C3  120A  158A   	fcall	_eeprom_read
  5095  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0F44  00AC               	movwf	_SugarStock
  5097  0F45  01AD               	clrf	_SugarStock+1
  5098                           
  5099                           ;Main.c: 108: KeroseneStock=eeprom_read(27);
  5100  0F46  301B               	movlw	27
  5101  0F47  27C3               	fcall	_eeprom_read
  5102  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0F49  00A8               	movwf	_KeroseneStock
  5104  0F4A  01A9               	clrf	_KeroseneStock+1
  5105  0F4B  0008               	return
  5106  0F4C                     __end_of_ReadStock:	
  5107  0F4C                     __ptext1140:	
  5108 ;; =============== function _ReadStock ends ============
  5109                           
  5110                           
  5111 ;; *************** function _ReadAmnt *****************
  5112 ;; Defined at:
  5113 ;;		line 89 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;		None               void
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0, pclath, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 160/0
  5124 ;;		On exit  : 60/0
  5125 ;;		Unchanged: FFE00/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5127 ;;      Params:         0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    4
  5134 ;; This function calls:
  5135 ;;		_eeprom_read
  5136 ;;		___wmul
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141  0F4C                     _ReadAmnt:	
  5142                           
  5143                           ;Main.c: 90: User1amt=(eeprom_read(0)*100)+eeprom_read(1);
  5144                           
  5145                           ; Regs used in _ReadAmnt: [wreg+status,2+status,0+pclath+cstack]
  5146  0F4C  3000               	movlw	0
  5147  0F4D  27C3  120A  158A   	fcall	_eeprom_read
  5148  0F50  27F9  120A  158A   	fcall	PL3	;call to abstracted procedure
  5149  0F53  27E0  120A  158A   	fcall	___wmul
  5150  0F56  0857               	movf	?___wmul+1,w
  5151  0F57  00B1               	movwf	_User1amt+1
  5152  0F58  0856               	movf	?___wmul,w
  5153  0F59  00B0               	movwf	_User1amt
  5154  0F5A  3001               	movlw	1
  5155  0F5B  27C3  120A  158A   	fcall	_eeprom_read
  5156  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  5157  0F5F  07B0               	addwf	_User1amt,f
  5158  0F60  1803               	skipnc
  5159  0F61  0AB1               	incf	_User1amt+1,f
  5160                           
  5161                           ;Main.c: 91: User2amt=(eeprom_read(8)*100)+eeprom_read(15);
  5162  0F62  3008               	movlw	8
  5163  0F63  27C3  120A  158A   	fcall	_eeprom_read
  5164  0F66  27F9  120A  158A   	fcall	PL3	;call to abstracted procedure
  5165  0F69  27E0  120A  158A   	fcall	___wmul
  5166  0F6C  0857               	movf	?___wmul+1,w
  5167  0F6D  00B3               	movwf	_User2amt+1
  5168  0F6E  0856               	movf	?___wmul,w
  5169  0F6F  00B2               	movwf	_User2amt
  5170  0F70  300F               	movlw	15
  5171  0F71  27C3  120A  158A   	fcall	_eeprom_read
  5172  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0F75  07B2               	addwf	_User2amt,f
  5174  0F76  1803               	skipnc
  5175  0F77  0AB3               	incf	_User2amt+1,f
  5176                           
  5177                           ;Main.c: 92: User3amt=(eeprom_read(16)*100)+eeprom_read(23);
  5178  0F78  3010               	movlw	16
  5179  0F79  27C3  120A  158A   	fcall	_eeprom_read
  5180  0F7C  27F9  120A  158A   	fcall	PL3	;call to abstracted procedure
  5181  0F7F  27E0  120A  158A   	fcall	___wmul
  5182  0F82  0857               	movf	?___wmul+1,w
  5183  0F83  00B5               	movwf	_User3amt+1
  5184  0F84  0856               	movf	?___wmul,w
  5185  0F85  00B4               	movwf	_User3amt
  5186  0F86  3017               	movlw	23
  5187  0F87  27C3  120A  158A   	fcall	_eeprom_read
  5188  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0F8B  07B4               	addwf	_User3amt,f
  5190  0F8C  1803               	skipnc
  5191  0F8D  0AB5               	incf	_User3amt+1,f
  5192                           
  5193                           ;Main.c: 93: User1Rise = eeprom_read(2);
  5194  0F8E  3002               	movlw	2
  5195  0F8F  27C3  120A  158A   	fcall	_eeprom_read
  5196  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0F93  00B7               	movwf	_User1Rise
  5198                           
  5199                           ;Main.c: 94: User2Rise = eeprom_read(10);
  5200  0F94  300A               	movlw	10
  5201  0F95  27C3  120A  158A   	fcall	_eeprom_read
  5202  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  5203  0F99  00BA               	movwf	_User2Rise
  5204                           
  5205                           ;Main.c: 95: User3Rise = eeprom_read(18);
  5206  0F9A  3012               	movlw	18
  5207  0F9B  27C3  120A  158A   	fcall	_eeprom_read
  5208  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  5209  0F9F  00BD               	movwf	_User3Rise
  5210                           
  5211                           ;Main.c: 96: User1Kerosene = eeprom_read(4);
  5212  0FA0  3004               	movlw	4
  5213  0FA1  27C3  120A  158A   	fcall	_eeprom_read
  5214  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  5215  0FA5  00B6               	movwf	_User1Kerosene
  5216                           
  5217                           ;Main.c: 97: User2Kerosene = eeprom_read(12);
  5218  0FA6  300C               	movlw	12
  5219  0FA7  27C3  120A  158A   	fcall	_eeprom_read
  5220  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0FAB  00B9               	movwf	_User2Kerosene
  5222                           
  5223                           ;Main.c: 98: User3Kerosene = eeprom_read(20);
  5224  0FAC  3014               	movlw	20
  5225  0FAD  27C3  120A  158A   	fcall	_eeprom_read
  5226  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  5227  0FB1  00BC               	movwf	_User3Kerosene
  5228                           
  5229                           ;Main.c: 99: User1Sugar = eeprom_read(3);
  5230  0FB2  3003               	movlw	3
  5231  0FB3  27C3  120A  158A   	fcall	_eeprom_read
  5232  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  5233  0FB7  00B8               	movwf	_User1Sugar
  5234                           
  5235                           ;Main.c: 100: User2Sugar = eeprom_read(11);
  5236  0FB8  300B               	movlw	11
  5237  0FB9  27C3  120A  158A   	fcall	_eeprom_read
  5238  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0FBD  00BB               	movwf	_User2Sugar
  5240                           
  5241                           ;Main.c: 101: User3Sugar = eeprom_read(19);
  5242  0FBE  3013               	movlw	19
  5243  0FBF  27C3               	fcall	_eeprom_read
  5244  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  5245  0FC1  00BE               	movwf	_User3Sugar
  5246  0FC2  0008               	return
  5247  0FC3                     __end_of_ReadAmnt:	
  5248  0FC3                     __ptext1156:	
  5249 ;; =============== function _uart_init ends ============
  5250                           
  5251                           
  5252 ;; *************** function _eeprom_read *****************
  5253 ;; Defined at:
  5254 ;;		line 8 in file "eeread.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  addr            1    wreg     unsigned char 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  addr            1    2[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 20/0
  5265 ;;		On exit  : 60/40
  5266 ;;		Unchanged: FFE00/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       0       0       0       0
  5269 ;;      Locals:         0       1       0       0       0
  5270 ;;      Temps:          0       2       0       0       0
  5271 ;;      Totals:         0       3       0       0       0
  5272 ;;Total ram usage:        3 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    3
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_ReadAmnt
  5279 ;;		_ReadStock
  5280 ;;		_paramter
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283  0FC3                     _eeprom_read:	
  5284                           
  5285                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5286                           ;eeprom_read@addr stored from wreg
  5287  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0FC4  00D5               	movwf	eeprom_read@addr
  5289  0FC5                     l1186:	
  5290  0FC5  0064               	clrwdt	;#
  5291  0FC6  1683               	bsf	3,5	;RP0=1, select bank3
  5292  0FC7  1703               	bsf	3,6	;RP1=1, select bank3
  5293  0FC8  188C               	btfsc	12,1
  5294  0FC9  2FC5               	goto	l1186
  5295  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0FCC  0855               	movf	eeprom_read@addr,w
  5298  0FCD  1703               	bsf	3,6	;RP1=1, select bank2
  5299  0FCE  008D               	movwf	13	;volatile
  5300  0FCF  303F               	movlw	63
  5301  0FD0  1683               	bsf	3,5	;RP0=1, select bank3
  5302  0FD1  058C               	andwf	12,f	;volatile
  5303  0FD2  140C               	bsf	12,0
  5304  0FD3  1003               	clrc
  5305  0FD4  180C               	btfsc	12,0
  5306  0FD5  1403               	setc
  5307  0FD6  3000               	movlw	0
  5308  0FD7  1803               	skipnc
  5309  0FD8  3001               	movlw	1
  5310  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5312  0FDB  00D3               	movwf	??_eeprom_read
  5313  0FDC  01D4               	clrf	??_eeprom_read+1
  5314  0FDD  1703               	bsf	3,6	;RP1=1, select bank2
  5315  0FDE  080C               	movf	12,w	;volatile
  5316  0FDF  0008               	return
  5317  0FE0                     __end_of_eeprom_read:	
  5318  0FE0                     __ptext1152:	
  5319 ;; =============== function ___lwdiv ends ============
  5320                           
  5321                           
  5322 ;; *************** function ___wmul *****************
  5323 ;; Defined at:
  5324 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  multiplier      2    3[BANK0 ] unsigned int 
  5327 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  product         2    7[BANK0 ] unsigned int 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  2    3[BANK0 ] unsigned int 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0
  5334 ;; Tracked objects:
  5335 ;;		On entry : 60/0
  5336 ;;		On exit  : 60/0
  5337 ;;		Unchanged: FFF9F/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5339 ;;      Params:         0       4       0       0       0
  5340 ;;      Locals:         0       2       0       0       0
  5341 ;;      Temps:          0       0       0       0       0
  5342 ;;      Totals:         0       6       0       0       0
  5343 ;;Total ram usage:        6 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    3
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_ReadAmnt
  5350 ;;		_ReadStock
  5351 ;;		_paramter
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354  0FE0                     ___wmul:	
  5355                           
  5356                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5357  0FE0  01DA               	clrf	___wmul@product
  5358  0FE1  01DB               	clrf	___wmul@product+1
  5359  0FE2                     l2968:	
  5360  0FE2  1C56               	btfss	___wmul@multiplier,0
  5361  0FE3  2FEA               	goto	l2972
  5362  0FE4  0858               	movf	___wmul@multiplicand,w
  5363  0FE5  07DA               	addwf	___wmul@product,f
  5364  0FE6  1803               	skipnc
  5365  0FE7  0ADB               	incf	___wmul@product+1,f
  5366  0FE8  0859               	movf	___wmul@multiplicand+1,w
  5367  0FE9  07DB               	addwf	___wmul@product+1,f
  5368  0FEA                     l2972:	
  5369  0FEA  1003               	clrc
  5370  0FEB  0DD8               	rlf	___wmul@multiplicand,f
  5371  0FEC  0DD9               	rlf	___wmul@multiplicand+1,f
  5372  0FED  1003               	clrc
  5373  0FEE  0CD7               	rrf	___wmul@multiplier+1,f
  5374  0FEF  0CD6               	rrf	___wmul@multiplier,f
  5375  0FF0  0857               	movf	___wmul@multiplier+1,w
  5376  0FF1  0456               	iorwf	___wmul@multiplier,w
  5377  0FF2  1D03               	skipz
  5378  0FF3  2FE2               	goto	l2968
  5379  0FF4  085B               	movf	___wmul@product+1,w
  5380  0FF5  00D7               	movwf	?___wmul+1
  5381  0FF6  085A               	movf	___wmul@product,w
  5382  0FF7  00D6               	movwf	?___wmul
  5383  0FF8  0008               	return
  5384  0FF9                     __end_of___wmul:	
  5385  0FF9                     PL3:	
  5386  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  5387  0FFA  00D6               	movwf	?___wmul
  5388  0FFB  01D7               	clrf	?___wmul+1
  5389  0FFC  3064               	movlw	100
  5390  0FFD  00D8               	movwf	?___wmul+2
  5391  0FFE  01D9               	clrf	?___wmul+3
  5392  0FFF  0008               	return
  5393                           
  5394                           	psect	text1143
  5395  0E6A                     __ptext1143:	
  5396 ;; =============== function _softreceive ends ============
  5397                           
  5398                           
  5399 ;; *************** function _SoftWareUart_Init *****************
  5400 ;; Defined at:
  5401 ;;		line 10 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;		None               void
  5408 ;; Registers used:
  5409 ;;		wreg
  5410 ;; Tracked objects:
  5411 ;;		On entry : 60/40
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5415 ;;      Params:         0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0
  5417 ;;      Temps:          0       1       0       0       0
  5418 ;;      Totals:         0       1       0       0       0
  5419 ;;Total ram usage:        1 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    3
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_main
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428  0E6A                     _SoftWareUart_Init:	
  5429                           
  5430                           ;softuart.c: 11: RD1=1;
  5431                           
  5432                           ; Regs used in _SoftWareUart_Init: [wreg]
  5433  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0E6B  1488               	bsf	8,1
  5435                           
  5436                           ;softuart.c: 12: RD0=1;
  5437  0E6C  1408               	bsf	8,0
  5438                           
  5439                           ;softuart.c: 13: TRISD1=0;
  5440  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  5441  0E6E  1088               	bcf	8,1
  5442                           
  5443                           ;softuart.c: 14: TRISD0=1;
  5444  0E6F  1408               	bsf	8,0
  5445                           
  5446                           ;softuart.c: 15: RD1=1;
  5447  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0E71  1488               	bsf	8,1
  5449                           
  5450                           ;softuart.c: 16: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  5451  0E72  30A9               	movlw	169
  5452  0E73  00D3               	movwf	??_SoftWareUart_Init
  5453  0E74                     u2157:	
  5454  0E74  0BD3               	decfsz	??_SoftWareUart_Init,f
  5455  0E75  2E74               	goto	u2157
  5456  0E76  2E77               	nop2	;nop
  5457  0E77  0008               	return
  5458  0E78                     __end_of_SoftWareUart_Init:	
  5459                           
  5460                           	psect	text1153
  5461  0ED9                     __ptext1153:	
  5462 ;; =============== function ___wmul ends ============
  5463                           
  5464                           
  5465 ;; *************** function _memcmp *****************
  5466 ;; Defined at:
  5467 ;;		line 4 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\memcmp.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  s1              2    0[BANK0 ] PTR const void 
  5470 ;;		 -> STR_44(6), 
  5471 ;;  s2              1    2[BANK0 ] PTR const void 
  5472 ;;		 -> sms(20), 
  5473 ;;  n               2    3[BANK0 ] unsigned int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  2    0[BANK0 ] int 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5480 ;; Tracked objects:
  5481 ;;		On entry : 60/0
  5482 ;;		On exit  : 60/0
  5483 ;;		Unchanged: FFE9F/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5485 ;;      Params:         0       5       0       0       0
  5486 ;;      Locals:         0       0       0       0       0
  5487 ;;      Temps:          0       1       0       0       0
  5488 ;;      Totals:         0       6       0       0       0
  5489 ;;Total ram usage:        6 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    3
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_main
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498  0ED9                     _memcmp:	
  5499  0ED9                     l3708:	
  5500                           ; Regs used in _memcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5501                           
  5502  0ED9  3001               	movlw	1
  5503  0EDA  02D6               	subwf	memcmp@n,f
  5504  0EDB  3000               	movlw	0
  5505  0EDC  1C03               	skipc
  5506  0EDD  03D7               	decf	memcmp@n+1,f
  5507  0EDE  02D7               	subwf	memcmp@n+1,f
  5508  0EDF  0A56               	incf	memcmp@n,w
  5509  0EE0  1903               	skipnz
  5510  0EE1  0A57               	incf	memcmp@n+1,w
  5511  0EE2  1903               	btfsc	3,2
  5512  0EE3  2F0C               	goto	l3710
  5513  0EE4  0855               	movf	memcmp@s2,w
  5514  0EE5  0084               	movwf	4
  5515  0EE6  1383               	bcf	3,7	;select IRP bank0
  5516  0EE7  0800               	movf	0,w
  5517  0EE8  00D8               	movwf	??_memcmp
  5518  0EE9  0854               	movf	memcmp@s1+1,w
  5519  0EEA  00FF               	movwf	127
  5520  0EEB  0853               	movf	memcmp@s1,w
  5521  0EEC  0084               	movwf	4
  5522  0EED  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  5523  0EF2  0658               	xorwf	??_memcmp,w
  5524  0EF3  1903               	skipnz
  5525  0EF4  2F07               	goto	l3706
  5526  0EF5  0854               	movf	memcmp@s1+1,w
  5527  0EF6  00FF               	movwf	127
  5528  0EF7  0853               	movf	memcmp@s1,w
  5529  0EF8  0084               	movwf	4
  5530  0EF9  160A  118A  2000   	fcall	stringtab
  5531  0EFC  00D8               	movwf	??_memcmp
  5532  0EFD  0855               	movf	memcmp@s2,w
  5533  0EFE  0084               	movwf	4
  5534  0EFF  1383               	bcf	3,7	;select IRP bank0
  5535  0F00  0800               	movf	0,w
  5536  0F01  0258               	subwf	??_memcmp,w
  5537  0F02  00D3               	movwf	?_memcmp
  5538  0F03  01D4               	clrf	?_memcmp+1
  5539  0F04  1C03               	skipc
  5540  0F05  03D4               	decf	?_memcmp+1,f
  5541  0F06  0008               	return
  5542  0F07                     l3706:	
  5543  0F07  0AD3               	incf	memcmp@s1,f
  5544  0F08  1903               	skipnz
  5545  0F09  0AD4               	incf	memcmp@s1+1,f
  5546  0F0A  0AD5               	incf	memcmp@s2,f
  5547  0F0B  2ED9               	goto	l3708
  5548  0F0C                     l3710:	
  5549  0F0C  01D3               	clrf	?_memcmp
  5550  0F0D  01D4               	clrf	?_memcmp+1
  5551  0F0E  0008               	return
  5552  0F0F                     __end_of_memcmp:	
  5553                           
  5554                           	psect	text1154
  5555  0E99                     __ptext1154:	
  5556 ;; =============== function _memcmp ends ============
  5557                           
  5558                           
  5559 ;; *************** function _strcmp *****************
  5560 ;; Defined at:
  5561 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strcmp.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  s1              1    wreg     PTR const unsigned char 
  5564 ;;		 -> card_store(15), 
  5565 ;;  s2              1    0[BANK0 ] PTR const unsigned char 
  5566 ;;		 -> User3(13), User2(13), User1(13), 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  s1              1    5[BANK0 ] PTR const unsigned char 
  5569 ;;		 -> card_store(15), 
  5570 ;;  r               1    4[BANK0 ] char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  2    0[BANK0 ] int 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 60/0
  5577 ;;		On exit  : 160/0
  5578 ;;		Unchanged: FFE9F/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         0       2       0       0       0
  5581 ;;      Locals:         0       2       0       0       0
  5582 ;;      Temps:          0       2       0       0       0
  5583 ;;      Totals:         0       6       0       0       0
  5584 ;;Total ram usage:        6 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    3
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593  0E99                     _strcmp:	
  5594                           
  5595                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  5596                           ;strcmp@s1 stored from wreg
  5597  0E99  00D8               	movwf	strcmp@s1
  5598  0E9A  2EA1               	goto	l3690
  5599  0E9B                     l3692:	
  5600  0E9B  0858               	movf	strcmp@s1,w
  5601  0E9C  0AD8               	incf	strcmp@s1,f
  5602  0E9D  0084               	movwf	4
  5603  0E9E  0880               	movf	0,f
  5604  0E9F  1903               	btfsc	3,2
  5605  0EA0  2EB1               	goto	l3694
  5606  0EA1                     l3690:	
  5607  0EA1  0853               	movf	strcmp@s2,w
  5608  0EA2  0AD3               	incf	strcmp@s2,f
  5609  0EA3  0084               	movwf	4
  5610  0EA4  1383               	bcf	3,7	;select IRP bank0
  5611  0EA5  0800               	movf	0,w
  5612  0EA6  00D5               	movwf	??_strcmp
  5613  0EA7  0858               	movf	strcmp@s1,w
  5614  0EA8  0084               	movwf	4
  5615  0EA9  0800               	movf	0,w
  5616  0EAA  00D6               	movwf	??_strcmp+1
  5617  0EAB  0855               	movf	??_strcmp,w
  5618  0EAC  0256               	subwf	??_strcmp+1,w
  5619  0EAD  00D7               	movwf	strcmp@r
  5620  0EAE  08D7               	movf	strcmp@r,f
  5621  0EAF  1903               	btfsc	3,2
  5622  0EB0  2E9B               	goto	l3692
  5623  0EB1                     l3694:	
  5624  0EB1  0857               	movf	strcmp@r,w
  5625  0EB2  00D3               	movwf	?_strcmp
  5626  0EB3  01D4               	clrf	?_strcmp+1
  5627  0EB4  1BD3               	btfsc	?_strcmp,7
  5628  0EB5  03D4               	decf	?_strcmp+1,f
  5629  0EB6  0008               	return
  5630  0EB7                     __end_of_strcmp:	
  5631                           
  5632                           	psect	text1155
  5633  0E78                     __ptext1155:	
  5634 ;; =============== function _strcmp ends ============
  5635                           
  5636                           
  5637 ;; *************** function _uart_init *****************
  5638 ;; Defined at:
  5639 ;;		line 145 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;		None
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;		None               void
  5646 ;; Registers used:
  5647 ;;		wreg, status,2
  5648 ;; Tracked objects:
  5649 ;;		On entry : 17F/0
  5650 ;;		On exit  : 17F/0
  5651 ;;		Unchanged: FFE80/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5653 ;;      Params:         0       0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0
  5656 ;;      Totals:         0       0       0       0       0
  5657 ;;Total ram usage:        0 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    3
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666  0E78                     _uart_init:	
  5667                           
  5668                           ;Main.c: 146: PORTC=0xFF;
  5669                           
  5670                           ; Regs used in _uart_init: [wreg+status,2]
  5671  0E78  30FF               	movlw	255
  5672  0E79  0087               	movwf	7	;volatile
  5673                           
  5674                           ;Main.c: 147: TRISC=0x80;
  5675  0E7A  3080               	movlw	128
  5676  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  5677  0E7C  0087               	movwf	7	;volatile
  5678                           
  5679                           ;Main.c: 148: TXSTA=0X24;
  5680  0E7D  3024               	movlw	36
  5681  0E7E  0098               	movwf	24	;volatile
  5682                           
  5683                           ;Main.c: 149: RCSTA=0X90;
  5684  0E7F  3090               	movlw	144
  5685  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  5686  0E81  0098               	movwf	24	;volatile
  5687                           
  5688                           ;Main.c: 150: SPBRG=129;
  5689  0E82  3081               	movlw	129
  5690  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  5691  0E84  0099               	movwf	25	;volatile
  5692                           
  5693                           ;Main.c: 151: RCREG=0;
  5694  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  5695  0E86  019A               	clrf	26	;volatile
  5696  0E87  0008               	return
  5697  0E88                     __end_of_uart_init:	
  5698                           
  5699                           	psect	text1161
  5700  07A0                     __ptext1161:	
  5701 ;; =============== function _DelayMs ends ============
  5702                           
  5703                           
  5704 ;; *************** function _ISR *****************
  5705 ;; Defined at:
  5706 ;;		line 63 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;		None               void
  5713 ;; Registers used:
  5714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 60/0
  5718 ;;		Unchanged: FFE9F/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5720 ;;      Params:         0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0
  5722 ;;      Temps:          3       0       0       0       0
  5723 ;;      Totals:         3       0       0       0       0
  5724 ;;Total ram usage:        3 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    2
  5727 ;; This function calls:
  5728 ;;		_gsm_read_line2
  5729 ;; This function is called by:
  5730 ;;		Interrupt level 1
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733  07A0                     _ISR:	
  5734                           
  5735                           ;Main.c: 64: if (RCIF==1)
  5736  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  5737  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  5738  07A2  1E8C               	btfss	12,5
  5739  07A3  2FA6               	goto	i1l1105
  5740                           
  5741                           ;Main.c: 65: {
  5742                           ;Main.c: 66: gsm_read_line2(sms);
  5743  07A4  30C7               	movlw	_sms& (0+255)
  5744  07A5  27AF               	fcall	_gsm_read_line2
  5745  07A6                     i1l1105:	
  5746  07A6  0875               	movf	??_ISR+2,w
  5747  07A7  008A               	movwf	10
  5748  07A8  0874               	movf	??_ISR+1,w
  5749  07A9  0084               	movwf	4
  5750  07AA  0873               	movf	??_ISR,w
  5751  07AB  0083               	movwf	3
  5752  07AC  0EFE               	swapf	126,f
  5753  07AD  0E7E               	swapf	126,w
  5754  07AE  0009               	retfie
  5755  07AF                     __end_of_ISR:	
  5756  07AF                     __ptext1162:	
  5757 ;; =============== function _ISR ends ============
  5758                           
  5759                           
  5760 ;; *************** function _gsm_read_line2 *****************
  5761 ;; Defined at:
  5762 ;;		line 46 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  buffer          1    wreg     PTR unsigned char 
  5765 ;;		 -> sms(20), 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  buffer          1    1[COMMON] PTR unsigned char 
  5768 ;;		 -> sms(20), 
  5769 ;;  rec_data        1    2[COMMON] unsigned char 
  5770 ;;  flag            1    0[COMMON] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;		None               void
  5773 ;; Registers used:
  5774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 60/0
  5777 ;;		On exit  : 160/0
  5778 ;;		Unchanged: FFE9F/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5780 ;;      Params:         0       0       0       0       0
  5781 ;;      Locals:         3       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0
  5783 ;;      Totals:         3       0       0       0       0
  5784 ;;Total ram usage:        3 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    1
  5787 ;; This function calls:
  5788 ;;		i1_receive
  5789 ;; This function is called by:
  5790 ;;		_ISR
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793  07AF                     _gsm_read_line2:	
  5794                           
  5795                           ; Regs used in _gsm_read_line2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5796                           ;gsm_read_line2@buffer stored from wreg
  5797  07AF  00F1               	movwf	gsm_read_line2@buffer
  5798  07B0  01F0               	clrf	gsm_read_line2@flag
  5799  07B1                     i1l2910:	
  5800                           
  5801                           ;Main.c: 50: {
  5802                           ;Main.c: 51: rec_data = receive();
  5803  07B1  27D0  120A  118A   	fcall	i1_receive
  5804  07B4  00F2               	movwf	gsm_read_line2@rec_data
  5805                           
  5806                           ;Main.c: 52: if(rec_data=='#'){flag=1;rec_data = receive(); }
  5807  07B5  3A23               	xorlw	35
  5808  07B6  1D03               	skipz
  5809  07B7  2FBE               	goto	i1l2918
  5810  07B8  01F0               	clrf	gsm_read_line2@flag
  5811  07B9  0AF0               	incf	gsm_read_line2@flag,f
  5812  07BA  27D0  120A  118A   	fcall	i1_receive
  5813  07BD  00F2               	movwf	gsm_read_line2@rec_data
  5814  07BE                     i1l2918:	
  5815                           
  5816                           ;Main.c: 53: if(flag)
  5817  07BE  0870               	movf	gsm_read_line2@flag,w
  5818  07BF  1903               	btfsc	3,2
  5819  07C0  2FC7               	goto	i1l2924
  5820                           
  5821                           ;Main.c: 54: {
  5822                           ;Main.c: 55: *buffer++ = rec_data;
  5823  07C1  0871               	movf	gsm_read_line2@buffer,w
  5824  07C2  0084               	movwf	4
  5825  07C3  0872               	movf	gsm_read_line2@rec_data,w
  5826  07C4  1383               	bcf	3,7	;select IRP bank0
  5827  07C5  0080               	movwf	0
  5828  07C6  0AF1               	incf	gsm_read_line2@buffer,f
  5829  07C7                     i1l2924:	
  5830                           
  5831                           ;Main.c: 56: }
  5832                           ;Main.c: 57: }while (rec_data != '\n');
  5833  07C7  0872               	movf	gsm_read_line2@rec_data,w
  5834  07C8  3A0A               	xorlw	10
  5835  07C9  1D03               	skipz
  5836  07CA  2FB1               	goto	i1l2910
  5837                           
  5838                           ;Main.c: 58: *buffer='\0';
  5839  07CB  0871               	movf	gsm_read_line2@buffer,w
  5840  07CC  0084               	movwf	4
  5841  07CD  1383               	bcf	3,7	;select IRP bank0
  5842  07CE  0180               	clrf	0
  5843  07CF  0008               	return
  5844  07D0                     __end_of_gsm_read_line2:	
  5845  07D0                     __ptext1163:	
  5846 ;; =============== function _gsm_read_line2 ends ============
  5847                           
  5848                           
  5849 ;; *************** function i1_receive *****************
  5850 ;; Defined at:
  5851 ;;		line 2 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      unsigned char 
  5858 ;; Registers used:
  5859 ;;		wreg
  5860 ;; Tracked objects:
  5861 ;;		On entry : 60/0
  5862 ;;		On exit  : 60/0
  5863 ;;		Unchanged: FFF9F/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5865 ;;      Params:         0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0
  5868 ;;      Totals:         0       0       0       0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_gsm_read_line2
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877  07D0                     i1_receive:	
  5878                           
  5879                           ;UART.C: 3: if(OERR){CREN=0;CREN=1;}
  5880                           
  5881                           ; Regs used in i1_receive: [wreg]
  5882  07D0  1C98               	btfss	24,1
  5883  07D1  2FD4               	goto	i1l1013
  5884  07D2  1218               	bcf	24,4
  5885  07D3  1618               	bsf	24,4
  5886  07D4                     i1l1013:	
  5887  07D4  1E8C               	btfss	12,5
  5888  07D5  2FD4               	goto	i1l1013
  5889                           
  5890                           ;UART.C: 5: return(RCREG);
  5891  07D6  081A               	movf	26,w	;volatile
  5892  07D7  0008               	return
  5893  07D8                     __end_ofi1_receive:	
  5894                           
  5895                           	psect	intentry
  5896  0004                     __pintentry:	
  5897                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5898                           
  5899  0004                     interrupt_function:	
  5900  007E                     saved_w	set	btemp
  5901  0004  00FE               	movwf	btemp
  5902  0005  0803               	movf	3,w
  5903  0006  00F3               	movwf	??_ISR
  5904  0007  0804               	movf	4,w
  5905  0008  00F4               	movwf	??_ISR+1
  5906  0009  080A               	movf	10,w
  5907  000A  00F5               	movwf	??_ISR+2
  5908  000B  120A  118A  2FA0   	ljmp	_ISR
  5909                           
  5910                           	psect	text1164
  5911  0000                     __ptext1164:	
  5912 ;; =============== function i1_receive ends ============
  5913                           
  5914  007E                     btemp	set	126	;btemp
  5915  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Fri Mar 04 02:23:16 2016

                         pc 0002                 _softreceive 077C                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 005E                          fsr 0004  
       ___wmul@multiplicand 0058                         l921 0399                         l922 039B  
                       l923 0000                         l925 0000                         l942 038B  
                       l952 0254                         l944 0000                         l953 0255  
                       l954 0259                         l946 0000                         l955 025A  
                       l963 0000                         l956 025E                         l972 0000  
                       l957 025F                         l949 0000                         l958 0263  
                       l990 077D                         l966 0000                         l978 0000  
                       l987 0000                         l996 0000                         _RC0 0038  
                       _RC1 0039                         _RD0 0040                         _RD1 0041  
                       _RD2 0042                         _RD3 0043                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       _ISR 07A0                         u995 0725                         fsr0 0004  
                       _sms 00C7                         indf 0000                ___awmod@sign 0058  
 __end_of_SoftWareUart_Init 0E78                        ?_ISR 0070                        l1013 015B  
                      l1022 0000                        l1031 0000                        l1016 0000  
                      l1120 0000                        l1114 0000                        l1019 0160  
                      l1203 0000                        l1123 0000                        l1132 0000  
                      l1117 0000                        l1141 0000                        l1126 0000  
                      l1135 0000                        l1215 0000                        l1144 0000  
                      l1225 0000                        l1153 0000                        l1129 0000  
                      l1049 0000                        l3002 0000                        l1242 03B5  
                      l1138 0000                        l1235 0000                        l1251 0000  
                      l3004 0733                        l3100 0000                        l1245 0000  
                      l3110 0378                        l1430 0000                        l3104 0000  
                      l4000 0000                        l1186 0FC5                        l1362 0000  
                      l3106 0370                        l4010 0000                        l4002 0000  
                      l1188 0000                        l3108 0000                        l4012 010C  
                      l4004 0000                        l3070 0000                        l4030 013F  
                      l4022 0000                        l4006 00FB                        l4102 0000  
                      l4110 044D                        l3072 0000                        l4024 012E  
                      l4016 0000                        l4040 0000                        l4200 0000  
                      l4112 0000                        l4104 0000                        l3082 0000  
                      l4034 0000                        l4018 011D                        l4050 0000  
                      l4042 0000                        l4202 0000                        l4122 0471  
                      l4114 0000                        l4106 0000                        l3084 034B  
                      l3076 0000                        l4036 0000                        l4028 0000  
                      l4052 0000                        l4044 0000                        l4060 0000  
                      l4140 0000                        l4116 0000                        l4108 0000  
                      l3094 0359                        l3086 0000                        l3078 0342  
                      l4038 0000                        l4046 0000                        l4070 0000  
                      l4062 0000                        l4054 0000                        l4214 0000  
                      l4206 05CD                        l4150 0000                        l4142 0000  
                      l4134 048E                        l3096 0000                        l4048 0000  
                      l4072 0000                        l4064 0000                        l4056 0000  
                      l4208 0000                        l4160 0000                        l4144 0000  
                      l4136 0000                        l4128 047F                        l4080 0000  
                      l4066 0000                        l4058 0000                        l4170 0000  
                      l4162 0000                        l4154 04F4                        l4146 0000  
                      l4138 0000                        l4090 0000                        l4082 0000  
                      l4074 0000                        l4068 0000                        l4180 0000  
                      l4164 0000                        l4156 0000                        l4148 0000  
                      l4092 0000                        l4084 0000                        l4076 0000  
                      l3710 0F0C                        l4190 0000                        l4182 0000  
                      l4174 0551                        l4166 0000                        l4158 0000  
                      l4094 0000                        l4086 0000                        l4078 0000  
                      l4184 0000                        l4176 0000                        l4168 0000  
                      l4096 0000                        l4088 0000                        l3706 0F07  
                      l3722 06F6                        l3730 0709                        l3714 0000  
                      l3802 0000                        l4186 0000                        l4178 0000  
                      l4098 0425                        l3660 0000                        l3708 0ED9  
                      l3740 03AF                        l3804 0312                        l3812 0000  
                      l3820 037D                        l3900 0000                        l4188 0000  
                      l4196 05AE                        l3662 0000                        l3670 0000  
                      l3734 0000                        l3806 0000                        l3814 038D  
                      l3822 0000                        l3830 0000                        l3910 0000  
                      l3902 0000                        l4198 05BC                        l3664 0000  
                      l3680 0000                        l2936 0000                        l3728 0000  
                      l3752 0000                        l3744 0000                        l3736 0000  
                      l3760 0000                        l3808 031A                        l3816 0000  
                      l3824 0000                        l3840 0787                        l3912 0000  
                      l3904 0000                        l3666 0000                        l3658 0000  
                      l2938 0000                        l3690 0EA1                        l3738 0000  
                      l3754 03C2                        l3770 03DC                        l3762 03C8  
                      l3818 0000                        l3826 0000                        l3842 0000  
                      l3834 0000                        l3914 0000                        l3906 0000  
                      l3930 0000                        l3668 0000                        l3692 0E9B  
                      l2972 0FEA                        l3748 0000                        l3772 0000  
                      l3764 0000                        l3828 0000                        l3860 0165  
                      l3916 0000                        l3908 0000                        l3932 0000  
                      l3694 0EB1                        l2974 0000                        l2966 0000  
                      l2982 0000                        l3766 0000                        l3758 0000  
                      l3782 0000                        l3854 0000                        l3862 0000  
                      l3870 0000                        l3926 0763                        l3918 0000  
                      l3942 0000                        l3934 0000                        l3950 0000  
                      l2896 0000                        l3688 0000                        l2976 0000  
                      l2968 0FE2                        l2992 071C                        l2984 0000  
                      l3784 02EC                        l3776 0000                        l3848 0000  
                      l3864 0000                        l3880 0000                        l3872 0000  
                      l3928 0000                        l3944 00C8                        l3936 0000  
                      l3952 0000                        l3698 0000                        l2994 0000  
                      l3778 0000                        l3858 0000                        l3866 0000  
                      l3882 0000                        l3874 0000                        l3890 0000  
                      l3938 00A9                        l3954 0000                        l3962 0000  
                      l3970 0000                        l3796 02FF                        l3788 02F3  
                      l3884 0000                        l3876 0000                        l3868 0000  
                      l3892 0000                        l3956 0000                        l3948 0000  
                      l3964 0233                        l3972 0000                        l3980 0000  
                      l2998 0000                        l3878 0000                        l3894 0000  
                      l3886 0000                        l3958 0000                        l3974 0000  
                      l3966 0000                        l3982 0000                        l3990 0000  
                      l3896 0000                        l3888 0000                        l3968 0000  
                      l3976 0000                        l3984 0000                        l3992 0000  
                      l3898 0000                        l3978 0000                        l3986 0000  
                      l3994 0000                        l3988 0000                        l3996 0000  
                      l3998 0000                        STR_1 11E9                        STR_2 11D8  
                      STR_3 123B                        STR_4 121C                        STR_5 1211  
                      STR_6 1206                        STR_7 117D                        STR_8 1226  
                      STR_9 1055                        _CREN 00C4                        u2107 01EC  
                      u1165 0362                        u2117 01F9                        u2127 0781  
                      u2047 0446                        u2137 0789                        u2057 05D3  
                      u2147 0797                        u2067 019D                        u2157 0E74  
                      u2077 01AD                        u2167 0382                        u2087 01D0  
                      u2097 01DF                        u1655 06FC                        _PIE1 008C  
                      u1785 0305                        u1885 0778                        _RCIF 0065  
                      _OERR 00C1                        _TXIF 0064                        _User 002E  
                      _main 03F4                        btemp 007E                        start 000E  
           __end_of_DelayMs 03A9                 _usartstring 0165                       ??_ISR 0073  
       __end_of_DisplayAmnt 02E2         __end_of_DisplayRise 0035          __size_of_RFID_read 001E  
                     ?_main 0070             __end_of___awdiv 037D             __end_of___lbdiv 03C4  
                     _EEADR 010D                       STR_10 103A                       STR_20 1102  
                     STR_12 101D                       STR_21 106D                       STR_30 11B4  
                     STR_14 1141                       STR_22 1083                       STR_31 1190  
                     STR_23 11C6                       STR_24 11A2                       STR_16 1155  
                     STR_40 10ED                       STR_32 10C3                       STR_41 1099  
                     STR_25 11B4                       STR_33 1099                       STR_42 10AE  
                     STR_26 1190                       STR_18 1169                       STR_34 10AE  
                     STR_43 1117                       STR_27 1055                       STR_19 112C  
                     STR_35 1117                       STR_44 1230                       STR_28 11FA  
                     STR_36 10D8             __end_of___awmod 031F                       STR_37 1099  
                     STR_29 1236                       STR_38 10AE                       STR_39 1117  
           __end_of___lbmod 03E0                       _ANSEL 0188             ___awdiv@divisor 0059  
           __end_of___lwdiv 0738             __end_of___lwmod 070E             ___awdiv@counter 005D  
                     _RCREG 001A                       _RCSTA 0018                       _SPBRG 0099  
                     _PORTC 0007                       _PORTD 0008                       _TRISC 0087  
                     _TRISD 0088                       _TXREG 0019                       _TXSTA 0098  
                     _User1 00A0                       _User2 00AD                       _User3 00BA  
           __end_of_lcddata 0338             __end_of_lcdport 0265                       _digit 1012  
           __end_of_receive 015F              __pbitbssCOMMON 03B0                       pclath 000A  
         ?_LoadStockToArray 0070                       status 0003             __end_of_startup 01D7  
                     wtemp0 007E          ??_LoadStockToArray 0076             ___lbdiv@divisor 0053  
           ___lbdiv@counter 0055                __end_of_main 05F6            __end_of_ReadAmnt 0FC3  
        __size_ofi1_receive 0008               _KeroseneArray 0020                      ??_main 0066  
             _KeroseneStock 0028  __size_of_SoftWareUart_Init 000E        __end_of_DisplaySugar 0059  
      __end_of_DisplayStock 009B                      _EEDATA 010C                      _EECON1 018C  
          ___awdiv@dividend 005B                      _ANSELH 0189                      i1l1013 07D4  
                    i1l1101 0000                      i1l1016 0000                      i1l1105 07A6  
                    i1l3150 0000                      i1l2910 07B1                      i1l2920 0000  
                    i1l2912 0000                      i1l2922 0000                      i1l2924 07C7  
                    i1l2916 0000                      i1l2908 0000                      i1l2918 07BE  
                    i1l2928 0000                      _INTCON 000B                   ??_DelayMs 0076  
         __end_of_RFID_read 077C                      _TRISD0 0440                      _TRISD1 0441  
        __size_of_ReadStock 0023                      _DelayS 038A        __size_of_eeprom_read 001D  
               _DisplayAmnt 0265            __end_of_lcd_init 021C                 _DisplayRise 0011  
                    ___wmul 0FE0                   ??___awdiv 0076                   ??___lbdiv 0076  
                 ??___awmod 0076                   ??___lbmod 0054                      _enable 037D  
                 ??___lwdiv 0076                   ??___lwmod 0076                      _lcdcmd 021C  
          __end_of_gsm_init 0156                      _memcmp 0ED9            ___awdiv@quotient 005F  
           ___awmod@divisor 0053            __end_of_paramter 0F29             ___awmod@counter 0057  
           _DisplayKerosene 05F6                transmit@data 0053                   ??_lcddata 0076  
                    _strcmp 0E99                      clrloop 0E63                   ??_lcdport 0076  
    gsm_read_line2@rec_data 0072                  _User1Sugar 0038                  _User2Sugar 003B  
                _User3Sugar 003E                   ??_receive 0076                      saved_w 007E  
                _SugarArray 0024                  _SugarStock 002C            __end_of_transmit 0165  
                 ??_startup 005A            ___lbdiv@dividend 0054           __end_ofi1_receive 07D8  
           ___lbmod@divisor 0053           DisplaySugar@Sugar 0058             ___lbmod@counter 0056  
           eeprom_read@addr 0055              __pcstackCOMMON 0070                __pidataBANK1 07D8  
              ?_softreceive 0070            ___lbdiv@quotient 0056           __end_of_ReadStock 0F4C  
           softreceive@Data 0054             softreceive@mask 0055      __size_of_SendRiseStock 0037  
                __pbssBANK0 0020                  __pbssBANK1 00C7                  _card_store 003F  
        __size_of_lcdstring 001C                   ?_ReadAmnt 0070                     ?_DelayS 0070  
              ?_usartstring 0054                  __pmaintext 03F4     __end_of_DisplayKerosene 0620  
                   ?___wmul 0056                  __pintentry 0004                     ?_enable 0070  
                   ?_lcdcmd 0070                     ?_memcmp 0053                  __ptext1130 0265  
                __ptext1131 0233                  __ptext1140 0F4C                  __ptext1132 01D7  
                __ptext1124 0181                  __ptext1141 0165                  __ptext1133 009B  
                __ptext1125 0059                  __ptext1150 06EA                  __ptext1142 077C  
                __ptext1134 075E                  __ptext1126 00D2                  __ptext1151 070E  
                __ptext1143 0E6A                  __ptext1135 031F                  __ptext1127 05F6  
                __ptext1160 0398                  __ptext1152 0FE0                  __ptext1144 037D  
                __ptext1136 021C                  __ptext1128 0011                  __ptext1161 07A0  
                __ptext1153 0ED9                  __ptext1145 038A                  __ptext1137 0620  
                __ptext1129 0035                  __ptext1162 07AF                  __ptext1154 0E99  
                __ptext1146 02E2                  __ptext1138 0F0F                  __ptext1163 07D0  
                __ptext1155 0E78                  __ptext1147 0338                  __ptext1139 0F29  
                __ptext1164 0000                  __ptext1156 0FC3                  __ptext1148 03C4  
                __ptext1157 015F                  __ptext1149 03A9                  __ptext1158 0156  
                __ptext1159 024F                     ?_strcmp 0053       __size_of_DisplaySugar 0024  
     __size_of_DisplayStock 0042          __size_of_uart_init 0010                     DelayS@i 0056  
                 ?_lcd_init 0070     __size_of_gsm_read_line2 0021            _DisplayAmnt$1090 0064  
                   _DelayMs 0398                  ??_ReadAmnt 0076                   ?_gsm_init 0070  
                 ?_paramter 0070             __size_of_DelayS 000E                _DisplaySugar 0035  
              _DisplayStock 0059                     ___awdiv 0338                     ___lbdiv 03A9  
                   ___awmod 02E2                     ___lbmod 03C4               _SendRiseStock 009B  
           __size_of___wmul 0019                     ___lwdiv 070E                     ___lwmod 06EA  
 __size_of_LoadStockToArray 00CA                   ?_transmit 0070             __size_of_enable 000D  
           __size_of_lcdcmd 0017             __size_of_memcmp 0036           __end_of_lcdstring 024F  
                   _lcddata 031F             __size_of_strcmp 001E                __size_of_ISR 000F  
                   _lcdport 024F                     _receive 0156            ___awmod@dividend 0055  
                   lcdcmd@a 0057                     lcdcmd@y 0055                     lcdcmd@z 0056  
                   _startup 0181                  ??_lcd_init 0058                   DelayS@cnt 0055  
      end_of_initialization 0ED5                     memcmp@n 0056                     init_ram 0E8C  
                ??_gsm_init 0076                  ??_paramter 0076           __end_of_uart_init 0E88  
                 _RFID_read 075E                ?_DisplayAmnt 0061                ?_DisplayRise 0058  
            ?_SendRiseStock 0070            ?_DisplayKerosene 0058             DisplayAmnt@Amnt 0061  
              __pstringtext 1000                  ??_transmit 0076                     strcmp@r 0057  
      __size_of_softreceive 0021            ___lbmod@dividend 0055       _LoadStockToArray$1091 005F  
               ___lbmod@rem 0057               ??_eeprom_read 0053                   i1_receive 07D0  
            __end_of_DelayS 0398                  ?_RFID_read 0070             DisplayRise@Rise 0058  
      __size_of_usartstring 001C              __end_of___wmul 0FF9              __end_of_enable 038A  
            __end_of_lcdcmd 0233              __end_of_memcmp 0F0F            _delayus_variable 0077  
            __end_of_strcmp 0EB7         start_initialization 0EB7                 __end_of_ISR 07AF  
                lcdstring@a 0058                   _ReadStock 0F29              _gsm_read_line2 07AF  
                  ??_DelayS 0076                  ?i1_receive 0070           __size_of_ReadAmnt 0077  
                 _RiseArray 004E             ??_SendRiseStock 0076         DisplayRise@Location 0059  
                 _RiseStock 002A                    ??___wmul 0076         __end_of_eeprom_read 0FE0  
                  ??_enable 0053                    ??_lcdcmd 0076            _LoadStockToArray 0620  
               __pdataBANK1 00A0                   _User1Rise 0037                   _User2Rise 003A  
                 _User3Rise 003D                    ??_memcmp 0058                    ??_strcmp 0055  
       DisplayAmnt@Location 0063                 __pbssCOMMON 0077      __end_of_gsm_read_line2 07D0  
             __pcstackBANK0 0053                  ?_ReadStock 0070                  RFID_read@i 0056  
                  ?_DelayMs 0070           __size_of_lcd_init 0045           __size_of_gsm_init 0084  
          ___lwdiv@dividend 005A                 ??_RFID_read 0076           __size_of_paramter 001A  
                  ?___awdiv 0059                    ?___lbdiv 0053                    ?___awmod 0053  
                  ?___lbmod 0053        __size_of_DisplayAmnt 007D                    ?___lwdiv 0058  
                  ?___lwmod 0053        __size_of_DisplayRise 0024           __size_of_transmit 0006  
                  ?_lcddata 0070                    ?_lcdport 0070                    ?_receive 0070  
                 _lcdstring 0233             ?_gsm_read_line2 0070            ___lwdiv@quotient 005C  
                  ?_startup 0070           interrupt_function 0004                   _rfid_flag 03B0  
            ___wmul@product 005A                    DelayMs@i 0054                 ??i1_receive 0070  
               _eeprom_read 0FC3                   _uart_init 0E78                 __stringbase 1012  
         ___wmul@multiplier 0056                  ?_lcdstring 0058                 ??_ReadStock 0076  
             _User1Kerosene 0036                    _ReadAmnt 0F4C               _User2Kerosene 0039  
          __size_of_DelayMs 0011               _User3Kerosene 003C               usartstring@st 0054  
      gsm_read_line2@buffer 0071                   init_fetch 0E88               ??_softreceive 0053  
                ?_uart_init 0070                    _User1amt 0030                    _User2amt 0032  
                  _User3amt 0034            __size_of___awdiv 0045            __size_of___lbdiv 001B  
          __size_of___awmod 003D            __size_of___lbmod 001C            __size_of___lwdiv 002A  
          __size_of___lwmod 0024    __size_of_DisplayKerosene 002A            __size_of_lcddata 0019  
          __size_of_lcdport 0016            __size_of_receive 0009             ___lwdiv@divisor 0058  
           ___lwdiv@counter 005E                    _lcd_init 01D7            __size_of_startup 0056  
  __end_of_LoadStockToArray 06EA                    _gsm_init 00D2               __size_of_main 0202  
                  _paramter 0F0F               ??_usartstring 0076                    clear_ram 0E62  
                  _transmit 015F                    lcddata@a 0057                    lcddata@y 0055  
                  lcddata@z 0056                    lcdport@a 0053         __end_of_softreceive 079D  
                DelayMs@cnt 0053                 ??_lcdstring 0076                    memcmp@s1 0053  
                  memcmp@s2 0055                    intlevel1 0000            ___lwmod@dividend 0055  
                 stringcode 100A               ?_DisplaySugar 0058               ?_DisplayStock 0070  
     __end_of_SendRiseStock 00D2                 ??_uart_init 0076         __end_of_usartstring 0181  
          ??_gsm_read_line2 0070          gsm_read_line2@flag 0070                    strcmp@s1 0058  
                  strcmp@s2 0053             ___lwmod@divisor 0053             ___lwmod@counter 0057  
                  stringtab 1000              _sms_indication 03B1           _SoftWareUart_Init 0E6A  
         ??_DisplayKerosene 0076        DisplaySugar@Location 0059          ?_SoftWareUart_Init 0070  
              ?_eeprom_read 0070     DisplayKerosene@Kerosene 0058     DisplayKerosene@Location 0059  
             ??_DisplayAmnt 0076         ??_SoftWareUart_Init 0053               ??_DisplayRise 0076  
            ??_DisplaySugar 0076              ??_DisplayStock 0076  
