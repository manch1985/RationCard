

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Mon Mar 07 00:46:13 2016

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text968,local,class=CODE,delta=2
    20                           	psect	text974,local,class=CODE,delta=2
    21                           	psect	text977,local,class=CODE,delta=2
    22                           	psect	text978,local,class=CODE,delta=2
    23                           	psect	text982,local,class=CODE,delta=2
    24                           	psect	text991,local,class=CODE,delta=2
    25                           	psect	text992,local,class=CODE,delta=2
    26                           	psect	text993,local,class=CODE,delta=2
    27                           	psect	text994,local,class=CODE,delta=2
    28                           	psect	text997,local,class=CODE,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text1000,local,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  000A                     	;#
    34                           
    35                           	psect	config
    36  2007  2CE2               	dw	11490	;#
    37                           
    38                           	psect	eeprom_data
    39  0000  000A 0000 0032     	db	10,0,50,10,8,0,0,0	;#
      +       000A 0008 0000     
      +       0000 0000          
    40  0008  000A 0000 001E     	db	10,0,30,8,6,0,0,0	;#
      +       0008 0006 0000     
      +       0000 0000          
    41  0010  000A 0000 0014     	db	10,0,20,4,5,0,0,0	;#
      +       0004 0005 0000     
      +       0000 0000          
    42  0018  000A 0000 00FF     	db	10,0,255,200,200,0,0,0	;#
      +       00C8 00C8 0000     
      +       0000 0000          
    43                           
    44                           	psect	idataBANK1
    45  0CD6                     __pidataBANK1:	
    46                           
    47                           ;initializer for _User1
    48  0CD6  3431               	retlw	49
    49  0CD7  3443               	retlw	67
    50  0CD8  3430               	retlw	48
    51  0CD9  3430               	retlw	48
    52  0CDA  3438               	retlw	56
    53  0CDB  3432               	retlw	50
    54  0CDC  3443               	retlw	67
    55  0CDD  3445               	retlw	69
    56  0CDE  3436               	retlw	54
    57  0CDF  3439               	retlw	57
    58  0CE0  3433               	retlw	51
    59  0CE1  3439               	retlw	57
    60  0CE2  3400               	retlw	0
    61                           
    62                           ;initializer for _User2
    63  0CE3  3431               	retlw	49
    64  0CE4  3442               	retlw	66
    65  0CE5  3430               	retlw	48
    66  0CE6  3430               	retlw	48
    67  0CE7  3433               	retlw	51
    68  0CE8  3443               	retlw	67
    69  0CE9  3435               	retlw	53
    70  0CEA  3442               	retlw	66
    71  0CEB  3446               	retlw	70
    72  0CEC  3443               	retlw	67
    73  0CED  3438               	retlw	56
    74  0CEE  3430               	retlw	48
    75  0CEF  3400               	retlw	0
    76                           
    77                           ;initializer for _User3
    78  0CF0  3431               	retlw	49
    79  0CF1  3442               	retlw	66
    80  0CF2  3430               	retlw	48
    81  0CF3  3430               	retlw	48
    82  0CF4  3433               	retlw	51
    83  0CF5  3443               	retlw	67
    84  0CF6  3435               	retlw	53
    85  0CF7  3442               	retlw	66
    86  0CF8  3446               	retlw	70
    87  0CF9  3443               	retlw	67
    88  0CFA  3438               	retlw	56
    89  0CFB  3431               	retlw	49
    90  0CFC  3400               	retlw	0
    91                           
    92                           	psect	stringtext
    93  1000                     __pstringtext:	
    94  1000                     stringtab:	
    95                           ;	global	stringtab,__stringbase
    96                           
    97                           
    98                           ;	String table - string pointers are 2 bytes each
    99  1000  1BFF               	btfsc	btemp+1,7
   100  1001  280A               	ljmp	stringcode
   101  1002  1383               	bcf	3,7
   102  1003  187F               	btfsc	btemp+1,0
   103  1004  1783               	bsf	3,7
   104  1005  0800               	movf	0,w
   105  1006  0A84               	incf	4,f
   106  1007  1903               	skipnz
   107  1008  0AFF               	incf	btemp+1,f
   108  1009  0008               	return
   109  100A                     stringcode:	
   110  100A  087F               	movf	btemp+1,w
   111  100B  397F               	andlw	127
   112  100C  008A               	movwf	10
   113  100D  0804               	movf	4,w
   114  100E  0A84               	incf	4,f
   115  100F  1903               	skipnz
   116  1010  0AFF               	incf	btemp+1,f
   117  1011  0082               	movwf	2
   118  1012                     __stringbase:	
   119  1012                     _digit:	
   120  1012  3430               	retlw	48
   121  1013  3431               	retlw	49
   122  1014  3432               	retlw	50
   123  1015  3433               	retlw	51
   124  1016  3434               	retlw	52
   125  1017  3435               	retlw	53
   126  1018  3436               	retlw	54
   127  1019  3437               	retlw	55
   128  101A  3438               	retlw	56
   129  101B  3439               	retlw	57
   130  101C  3400               	retlw	0
   131  000B                     _INTCON	set	11
   132  0007                     _PORTC	set	7
   133  0008                     _PORTD	set	8
   134  001A                     _RCREG	set	26
   135  0018                     _RCSTA	set	24
   136  0018                     _CARRY	set	24
   137  00C4                     _CREN	set	196
   138  005F                     _GIE	set	95
   139  00C1                     _OERR	set	193
   140  0038                     _RC0	set	56
   141  0039                     _RC1	set	57
   142  003B                     _RC3	set	59
   143  003C                     _RC4	set	60
   144  0065                     _RCIF	set	101
   145  0040                     _RD0	set	64
   146  0041                     _RD1	set	65
   147  0042                     _RD2	set	66
   148  0043                     _RD3	set	67
   149  0044                     _RD4	set	68
   150  0045                     _RD5	set	69
   151  0046                     _RD6	set	70
   152  0047                     _RD7	set	71
   153  008C                     _PIE1	set	140
   154  0099                     _SPBRG	set	153
   155  0087                     _TRISC	set	135
   156  0088                     _TRISD	set	136
   157  0098                     _TXSTA	set	152
   158  0440                     _TRISD0	set	1088
   159  0441                     _TRISD1	set	1089
   160  010D                     _EEADR	set	269
   161  010C                     _EEDATA	set	268
   162  0188                     _ANSEL	set	392
   163  0189                     _ANSELH	set	393
   164  018C                     _EECON1	set	396
   165  018D                     _EECON2	set	397
   166  0C60                     _RD	set	3168
   167  0C61                     _WR	set	3169
   168  0C62                     _WREN	set	3170
   169  101D                     STR_12:	
   170  101D  346D               	retlw	109	;'m'
   171  101E  346F               	retlw	111	;'o'
   172  101F  3469               	retlw	105	;'i'
   173  1020  3473               	retlw	115	;'s'
   174  1021  3474               	retlw	116	;'t'
   175  1022  3465               	retlw	101	;'e'
   176  1023  3472               	retlw	114	;'r'
   177  1024  3420               	retlw	32	;' '
   178  1025  346C               	retlw	108	;'l'
   179  1026  3465               	retlw	101	;'e'
   180  1027  3476               	retlw	118	;'v'
   181  1028  3465               	retlw	101	;'e'
   182  1029  346C               	retlw	108	;'l'
   183  102A  3420               	retlw	32	;' '
   184  102B  3468               	retlw	104	;'h'
   185  102C  3469               	retlw	105	;'i'
   186  102D  3467               	retlw	103	;'g'
   187  102E  3468               	retlw	104	;'h'
   188  102F  3420               	retlw	32	;' '
   189  1030  346D               	retlw	109	;'m'
   190  1031  346F               	retlw	111	;'o'
   191  1032  3474               	retlw	116	;'t'
   192  1033  3465               	retlw	101	;'e'
   193  1034  3472               	retlw	114	;'r'
   194  1035  3420               	retlw	32	;' '
   195  1036  344F               	retlw	79	;'O'
   196  1037  3446               	retlw	70	;'F'
   197  1038  3446               	retlw	70	;'F'
   198  1039  3400               	retlw	0
   199  103A                     STR_10:	
   200  103A  346D               	retlw	109	;'m'
   201  103B  346F               	retlw	111	;'o'
   202  103C  3469               	retlw	105	;'i'
   203  103D  3473               	retlw	115	;'s'
   204  103E  3474               	retlw	116	;'t'
   205  103F  3465               	retlw	101	;'e'
   206  1040  3472               	retlw	114	;'r'
   207  1041  3420               	retlw	32	;' '
   208  1042  346C               	retlw	108	;'l'
   209  1043  3465               	retlw	101	;'e'
   210  1044  3476               	retlw	118	;'v'
   211  1045  3465               	retlw	101	;'e'
   212  1046  346C               	retlw	108	;'l'
   213  1047  3420               	retlw	32	;' '
   214  1048  346C               	retlw	108	;'l'
   215  1049  346F               	retlw	111	;'o'
   216  104A  3477               	retlw	119	;'w'
   217  104B  3420               	retlw	32	;' '
   218  104C  346D               	retlw	109	;'m'
   219  104D  346F               	retlw	111	;'o'
   220  104E  3474               	retlw	116	;'t'
   221  104F  3465               	retlw	101	;'e'
   222  1050  3472               	retlw	114	;'r'
   223  1051  3420               	retlw	32	;' '
   224  1052  344F               	retlw	79	;'O'
   225  1053  344E               	retlw	78	;'N'
   226  1054  3400               	retlw	0
   227  1055                     STR_27:	
   228  1055  3441               	retlw	65	;'A'
   229  1056  3454               	retlw	84	;'T'
   230  1057  342B               	retlw	43	;'+'
   231  1058  3443               	retlw	67	;'C'
   232  1059  344D               	retlw	77	;'M'
   233  105A  3447               	retlw	71	;'G'
   234  105B  3453               	retlw	83	;'S'
   235  105C  343D               	retlw	61	;'='
   236  105D  3422               	retlw	34	;'"'
   237  105E  342B               	retlw	43	;'+'
   238  105F  3439               	retlw	57	;'9'
   239  1060  3431               	retlw	49	;'1'
   240  1061  3439               	retlw	57	;'9'
   241  1062  3438               	retlw	56	;'8'
   242  1063  3439               	retlw	57	;'9'
   243  1064  3434               	retlw	52	;'4'
   244  1065  3437               	retlw	55	;'7'
   245  1066  3434               	retlw	52	;'4'
   246  1067  3438               	retlw	56	;'8'
   247  1068  3432               	retlw	50	;'2'
   248  1069  3430               	retlw	48	;'0'
   249  106A  3430               	retlw	48	;'0'
   250  106B  3422               	retlw	34	;'"'
   251  106C  3400               	retlw	0
   252  106D                     STR_9:	
   253  106D  3441               	retlw	65	;'A'
   254  106E  3454               	retlw	84	;'T'
   255  106F  342B               	retlw	43	;'+'
   256  1070  3443               	retlw	67	;'C'
   257  1071  344D               	retlw	77	;'M'
   258  1072  3447               	retlw	71	;'G'
   259  1073  3453               	retlw	83	;'S'
   260  1074  343D               	retlw	61	;'='
   261  1075  3422               	retlw	34	;'"'
   262  1076  342B               	retlw	43	;'+'
   263  1077  3439               	retlw	57	;'9'
   264  1078  3431               	retlw	49	;'1'
   265  1079  3439               	retlw	57	;'9'
   266  107A  3437               	retlw	55	;'7'
   267  107B  3439               	retlw	57	;'9'
   268  107C  3430               	retlw	48	;'0'
   269  107D  3430               	retlw	48	;'0'
   270  107E  3438               	retlw	56	;'8'
   271  107F  3430               	retlw	48	;'0'
   272  1080  3435               	retlw	53	;'5'
   273  1081  3431               	retlw	49	;'1'
   274  1082  3430               	retlw	48	;'0'
   275  1083  3422               	retlw	34	;'"'
   276  1084  3400               	retlw	0
   277  1085                     STR_21:	
   278  1085  3453               	retlw	83	;'S'
   279  1086  3455               	retlw	85	;'U'
   280  1087  3447               	retlw	71	;'G'
   281  1088  3441               	retlw	65	;'A'
   282  1089  3452               	retlw	82	;'R'
   283  108A  343A               	retlw	58	;':'
   284  108B  3420               	retlw	32	;' '
   285  108C  3420               	retlw	32	;' '
   286  108D  3420               	retlw	32	;' '
   287  108E  3420               	retlw	32	;' '
   288  108F  344B               	retlw	75	;'K'
   289  1090  3467               	retlw	103	;'g'
   290  1091  3420               	retlw	32	;' '
   291  1092  3420               	retlw	32	;' '
   292  1093  3420               	retlw	32	;' '
   293  1094  3420               	retlw	32	;' '
   294  1095  3420               	retlw	32	;' '
   295  1096  3420               	retlw	32	;' '
   296  1097  3420               	retlw	32	;' '
   297  1098  3420               	retlw	32	;' '
   298  1099  3420               	retlw	32	;' '
   299  109A  3400               	retlw	0
   300  109B                     STR_22:	
   301  109B  344B               	retlw	75	;'K'
   302  109C  3445               	retlw	69	;'E'
   303  109D  3452               	retlw	82	;'R'
   304  109E  344F               	retlw	79	;'O'
   305  109F  3453               	retlw	83	;'S'
   306  10A0  3445               	retlw	69	;'E'
   307  10A1  344E               	retlw	78	;'N'
   308  10A2  3445               	retlw	69	;'E'
   309  10A3  343A               	retlw	58	;':'
   310  10A4  3420               	retlw	32	;' '
   311  10A5  3420               	retlw	32	;' '
   312  10A6  3420               	retlw	32	;' '
   313  10A7  3420               	retlw	32	;' '
   314  10A8  3420               	retlw	32	;' '
   315  10A9  344C               	retlw	76	;'L'
   316  10AA  3474               	retlw	116	;'t'
   317  10AB  3473               	retlw	115	;'s'
   318  10AC  3420               	retlw	32	;' '
   319  10AD  3420               	retlw	32	;' '
   320  10AE  3420               	retlw	32	;' '
   321  10AF  3420               	retlw	32	;' '
   322  10B0  3400               	retlw	0
   323  10B1                     STR_37:	
   324  10B1  3452               	retlw	82	;'R'
   325  10B2  3449               	retlw	73	;'I'
   326  10B3  3453               	retlw	83	;'S'
   327  10B4  3445               	retlw	69	;'E'
   328  10B5  343A               	retlw	58	;':'
   329  10B6  3420               	retlw	32	;' '
   330  10B7  3420               	retlw	32	;' '
   331  10B8  3420               	retlw	32	;' '
   332  10B9  344B               	retlw	75	;'K'
   333  10BA  3467               	retlw	103	;'g'
   334  10BB  3420               	retlw	32	;' '
   335  10BC  3420               	retlw	32	;' '
   336  10BD  3420               	retlw	32	;' '
   337  10BE  3420               	retlw	32	;' '
   338  10BF  3420               	retlw	32	;' '
   339  10C0  3420               	retlw	32	;' '
   340  10C1  3420               	retlw	32	;' '
   341  10C2  3420               	retlw	32	;' '
   342  10C3  3420               	retlw	32	;' '
   343  10C4  3420               	retlw	32	;' '
   344  10C5  3400               	retlw	0
   345  10C6                     STR_38:	
   346  10C6  3453               	retlw	83	;'S'
   347  10C7  3455               	retlw	85	;'U'
   348  10C8  3447               	retlw	71	;'G'
   349  10C9  3441               	retlw	65	;'A'
   350  10CA  3452               	retlw	82	;'R'
   351  10CB  343A               	retlw	58	;':'
   352  10CC  3420               	retlw	32	;' '
   353  10CD  3420               	retlw	32	;' '
   354  10CE  3420               	retlw	32	;' '
   355  10CF  344B               	retlw	75	;'K'
   356  10D0  3467               	retlw	103	;'g'
   357  10D1  3420               	retlw	32	;' '
   358  10D2  3420               	retlw	32	;' '
   359  10D3  3420               	retlw	32	;' '
   360  10D4  3420               	retlw	32	;' '
   361  10D5  3420               	retlw	32	;' '
   362  10D6  3420               	retlw	32	;' '
   363  10D7  3420               	retlw	32	;' '
   364  10D8  3420               	retlw	32	;' '
   365  10D9  3420               	retlw	32	;' '
   366  10DA  3400               	retlw	0
   367  10DB                     STR_36:	
   368  10DB  3455               	retlw	85	;'U'
   369  10DC  3453               	retlw	83	;'S'
   370  10DD  3445               	retlw	69	;'E'
   371  10DE  3452               	retlw	82	;'R'
   372  10DF  3431               	retlw	49	;'1'
   373  10E0  3420               	retlw	32	;' '
   374  10E1  3441               	retlw	65	;'A'
   375  10E2  344D               	retlw	77	;'M'
   376  10E3  344F               	retlw	79	;'O'
   377  10E4  3455               	retlw	85	;'U'
   378  10E5  344E               	retlw	78	;'N'
   379  10E6  3454               	retlw	84	;'T'
   380  10E7  343A               	retlw	58	;':'
   381  10E8  3420               	retlw	32	;' '
   382  10E9  3420               	retlw	32	;' '
   383  10EA  3420               	retlw	32	;' '
   384  10EB  3420               	retlw	32	;' '
   385  10EC  3420               	retlw	32	;' '
   386  10ED  3420               	retlw	32	;' '
   387  10EE  3420               	retlw	32	;' '
   388  10EF  3400               	retlw	0
   389  10F0                     STR_43:	
   390  10F0  3455               	retlw	85	;'U'
   391  10F1  3453               	retlw	83	;'S'
   392  10F2  3445               	retlw	69	;'E'
   393  10F3  3452               	retlw	82	;'R'
   394  10F4  3432               	retlw	50	;'2'
   395  10F5  3420               	retlw	32	;' '
   396  10F6  3441               	retlw	65	;'A'
   397  10F7  344D               	retlw	77	;'M'
   398  10F8  344F               	retlw	79	;'O'
   399  10F9  3455               	retlw	85	;'U'
   400  10FA  344E               	retlw	78	;'N'
   401  10FB  3454               	retlw	84	;'T'
   402  10FC  343A               	retlw	58	;':'
   403  10FD  3420               	retlw	32	;' '
   404  10FE  3420               	retlw	32	;' '
   405  10FF  3420               	retlw	32	;' '
   406  1100  3420               	retlw	32	;' '
   407  1101  3420               	retlw	32	;' '
   408  1102  3420               	retlw	32	;' '
   409  1103  3420               	retlw	32	;' '
   410  1104  3400               	retlw	0
   411  1105                     STR_50:	
   412  1105  3455               	retlw	85	;'U'
   413  1106  3453               	retlw	83	;'S'
   414  1107  3445               	retlw	69	;'E'
   415  1108  3452               	retlw	82	;'R'
   416  1109  3433               	retlw	51	;'3'
   417  110A  3420               	retlw	32	;' '
   418  110B  3441               	retlw	65	;'A'
   419  110C  344D               	retlw	77	;'M'
   420  110D  344F               	retlw	79	;'O'
   421  110E  3455               	retlw	85	;'U'
   422  110F  344E               	retlw	78	;'N'
   423  1110  3454               	retlw	84	;'T'
   424  1111  343A               	retlw	58	;':'
   425  1112  3420               	retlw	32	;' '
   426  1113  3420               	retlw	32	;' '
   427  1114  3420               	retlw	32	;' '
   428  1115  3420               	retlw	32	;' '
   429  1116  3420               	retlw	32	;' '
   430  1117  3420               	retlw	32	;' '
   431  1118  3420               	retlw	32	;' '
   432  1119  3400               	retlw	0
   433  111A                     STR_20:	
   434  111A  3452               	retlw	82	;'R'
   435  111B  3449               	retlw	73	;'I'
   436  111C  3453               	retlw	83	;'S'
   437  111D  3445               	retlw	69	;'E'
   438  111E  343A               	retlw	58	;':'
   439  111F  3420               	retlw	32	;' '
   440  1120  3420               	retlw	32	;' '
   441  1121  3420               	retlw	32	;' '
   442  1122  3420               	retlw	32	;' '
   443  1123  3420               	retlw	32	;' '
   444  1124  3420               	retlw	32	;' '
   445  1125  344B               	retlw	75	;'K'
   446  1126  3467               	retlw	103	;'g'
   447  1127  3420               	retlw	32	;' '
   448  1128  3420               	retlw	32	;' '
   449  1129  3420               	retlw	32	;' '
   450  112A  3420               	retlw	32	;' '
   451  112B  3420               	retlw	32	;' '
   452  112C  3420               	retlw	32	;' '
   453  112D  3420               	retlw	32	;' '
   454  112E  3400               	retlw	0
   455  112F                     STR_39:	
   456  112F  344B               	retlw	75	;'K'
   457  1130  3445               	retlw	69	;'E'
   458  1131  3452               	retlw	82	;'R'
   459  1132  344F               	retlw	79	;'O'
   460  1133  3453               	retlw	83	;'S'
   461  1134  3445               	retlw	69	;'E'
   462  1135  344E               	retlw	78	;'N'
   463  1136  3445               	retlw	69	;'E'
   464  1137  343A               	retlw	58	;':'
   465  1138  3420               	retlw	32	;' '
   466  1139  3420               	retlw	32	;' '
   467  113A  3420               	retlw	32	;' '
   468  113B  344C               	retlw	76	;'L'
   469  113C  3474               	retlw	116	;'t'
   470  113D  3473               	retlw	115	;'s'
   471  113E  3420               	retlw	32	;' '
   472  113F  3420               	retlw	32	;' '
   473  1140  3420               	retlw	32	;' '
   474  1141  3420               	retlw	32	;' '
   475  1142  3420               	retlw	32	;' '
   476  1143  3400               	retlw	0
   477  1144                     STR_19:	
   478  1144  3420               	retlw	32	;' '
   479  1145  3420               	retlw	32	;' '
   480  1146  3420               	retlw	32	;' '
   481  1147  3420               	retlw	32	;' '
   482  1148  3453               	retlw	83	;'S'
   483  1149  3454               	retlw	84	;'T'
   484  114A  344F               	retlw	79	;'O'
   485  114B  3443               	retlw	67	;'C'
   486  114C  344B               	retlw	75	;'K'
   487  114D  3420               	retlw	32	;' '
   488  114E  3444               	retlw	68	;'D'
   489  114F  3445               	retlw	69	;'E'
   490  1150  3454               	retlw	84	;'T'
   491  1151  3441               	retlw	65	;'A'
   492  1152  3449               	retlw	73	;'I'
   493  1153  344C               	retlw	76	;'L'
   494  1154  3453               	retlw	83	;'S'
   495  1155  3420               	retlw	32	;' '
   496  1156  3420               	retlw	32	;' '
   497  1157  3420               	retlw	32	;' '
   498  1158  3400               	retlw	0
   499  1159                     STR_14:	
   500  1159  3443               	retlw	67	;'C'
   501  115A  3472               	retlw	114	;'r'
   502  115B  346F               	retlw	111	;'o'
   503  115C  3470               	retlw	112	;'p'
   504  115D  3420               	retlw	32	;' '
   505  115E  3463               	retlw	99	;'c'
   506  115F  3472               	retlw	114	;'r'
   507  1160  346F               	retlw	111	;'o'
   508  1161  3473               	retlw	115	;'s'
   509  1162  3473               	retlw	115	;'s'
   510  1163  3465               	retlw	101	;'e'
   511  1164  3464               	retlw	100	;'d'
   512  1165  3420               	retlw	32	;' '
   513  1166  3473               	retlw	115	;'s'
   514  1167  3474               	retlw	116	;'t'
   515  1168  3461               	retlw	97	;'a'
   516  1169  3467               	retlw	103	;'g'
   517  116A  3465               	retlw	101	;'e'
   518  116B  3431               	retlw	49	;'1'
   519  116C  3400               	retlw	0
   520  116D                     STR_16:	
   521  116D  3443               	retlw	67	;'C'
   522  116E  3472               	retlw	114	;'r'
   523  116F  346F               	retlw	111	;'o'
   524  1170  3470               	retlw	112	;'p'
   525  1171  3420               	retlw	32	;' '
   526  1172  3463               	retlw	99	;'c'
   527  1173  3472               	retlw	114	;'r'
   528  1174  346F               	retlw	111	;'o'
   529  1175  3473               	retlw	115	;'s'
   530  1176  3473               	retlw	115	;'s'
   531  1177  3465               	retlw	101	;'e'
   532  1178  3464               	retlw	100	;'d'
   533  1179  3420               	retlw	32	;' '
   534  117A  3473               	retlw	115	;'s'
   535  117B  3474               	retlw	116	;'t'
   536  117C  3461               	retlw	97	;'a'
   537  117D  3467               	retlw	103	;'g'
   538  117E  3465               	retlw	101	;'e'
   539  117F  3432               	retlw	50	;'2'
   540  1180  3400               	retlw	0
   541  1181                     STR_18:	
   542  1181  3443               	retlw	67	;'C'
   543  1182  3472               	retlw	114	;'r'
   544  1183  346F               	retlw	111	;'o'
   545  1184  3470               	retlw	112	;'p'
   546  1185  3420               	retlw	32	;' '
   547  1186  3463               	retlw	99	;'c'
   548  1187  3472               	retlw	114	;'r'
   549  1188  346F               	retlw	111	;'o'
   550  1189  3473               	retlw	115	;'s'
   551  118A  3473               	retlw	115	;'s'
   552  118B  3465               	retlw	101	;'e'
   553  118C  3464               	retlw	100	;'d'
   554  118D  3420               	retlw	32	;' '
   555  118E  3473               	retlw	115	;'s'
   556  118F  3474               	retlw	116	;'t'
   557  1190  3461               	retlw	97	;'a'
   558  1191  3467               	retlw	103	;'g'
   559  1192  3465               	retlw	101	;'e'
   560  1193  3433               	retlw	51	;'3'
   561  1194  3400               	retlw	0
   562  1195                     STR_7:	
   563  1195  3441               	retlw	65	;'A'
   564  1196  3454               	retlw	84	;'T'
   565  1197  342B               	retlw	43	;'+'
   566  1198  3443               	retlw	67	;'C'
   567  1199  344E               	retlw	78	;'N'
   568  119A  344D               	retlw	77	;'M'
   569  119B  3449               	retlw	73	;'I'
   570  119C  343D               	retlw	61	;'='
   571  119D  3432               	retlw	50	;'2'
   572  119E  342C               	retlw	44	;','
   573  119F  3432               	retlw	50	;'2'
   574  11A0  342C               	retlw	44	;','
   575  11A1  3430               	retlw	48	;'0'
   576  11A2  342C               	retlw	44	;','
   577  11A3  3430               	retlw	48	;'0'
   578  11A4  342C               	retlw	44	;','
   579  11A5  3430               	retlw	48	;'0'
   580  11A6  340D               	retlw	13
   581  11A7  3400               	retlw	0
   582  11A8                     STR_26:	
   583  11A8  3453               	retlw	83	;'S'
   584  11A9  344D               	retlw	77	;'M'
   585  11AA  3441               	retlw	65	;'A'
   586  11AB  3452               	retlw	82	;'R'
   587  11AC  3454               	retlw	84	;'T'
   588  11AD  3420               	retlw	32	;' '
   589  11AE  3443               	retlw	67	;'C'
   590  11AF  3441               	retlw	65	;'A'
   591  11B0  3452               	retlw	82	;'R'
   592  11B1  3444               	retlw	68	;'D'
   593  11B2  3420               	retlw	32	;' '
   594  11B3  3420               	retlw	32	;' '
   595  11B4  3420               	retlw	32	;' '
   596  11B5  3420               	retlw	32	;' '
   597  11B6  3420               	retlw	32	;' '
   598  11B7  3420               	retlw	32	;' '
   599  11B8  3420               	retlw	32	;' '
   600  11B9  3400               	retlw	0
   601  11BA                     STR_42:	
   602  11BA  3420               	retlw	32	;' '
   603  11BB  3420               	retlw	32	;' '
   604  11BC  3420               	retlw	32	;' '
   605  11BD  3420               	retlw	32	;' '
   606  11BE  3420               	retlw	32	;' '
   607  11BF  3420               	retlw	32	;' '
   608  11C0  3456               	retlw	86	;'V'
   609  11C1  344F               	retlw	79	;'O'
   610  11C2  344C               	retlw	76	;'L'
   611  11C3  3455               	retlw	85	;'U'
   612  11C4  3445               	retlw	69	;'E'
   613  11C5  3420               	retlw	32	;' '
   614  11C6  3420               	retlw	32	;' '
   615  11C7  3420               	retlw	32	;' '
   616  11C8  3420               	retlw	32	;' '
   617  11C9  3420               	retlw	32	;' '
   618  11CA  3420               	retlw	32	;' '
   619  11CB  3400               	retlw	0
   620  11CC                     STR_24:	
   621  11CC  3420               	retlw	32	;' '
   622  11CD  3420               	retlw	32	;' '
   623  11CE  3420               	retlw	32	;' '
   624  11CF  3443               	retlw	67	;'C'
   625  11D0  3441               	retlw	65	;'A'
   626  11D1  3452               	retlw	82	;'R'
   627  11D2  3444               	retlw	68	;'D'
   628  11D3  3420               	retlw	32	;' '
   629  11D4  3453               	retlw	83	;'S'
   630  11D5  3459               	retlw	89	;'Y'
   631  11D6  3453               	retlw	83	;'S'
   632  11D7  3454               	retlw	84	;'T'
   633  11D8  3445               	retlw	69	;'E'
   634  11D9  344D               	retlw	77	;'M'
   635  11DA  3420               	retlw	32	;' '
   636  11DB  3420               	retlw	32	;' '
   637  11DC  3420               	retlw	32	;' '
   638  11DD  3400               	retlw	0
   639  11DE                     STR_25:	
   640  11DE  3450               	retlw	80	;'P'
   641  11DF  344C               	retlw	76	;'L'
   642  11E0  3445               	retlw	69	;'E'
   643  11E1  3441               	retlw	65	;'A'
   644  11E2  3453               	retlw	83	;'S'
   645  11E3  3445               	retlw	69	;'E'
   646  11E4  3420               	retlw	32	;' '
   647  11E5  3454               	retlw	84	;'T'
   648  11E6  3441               	retlw	65	;'A'
   649  11E7  3450               	retlw	80	;'P'
   650  11E8  3420               	retlw	32	;' '
   651  11E9  3459               	retlw	89	;'Y'
   652  11EA  344F               	retlw	79	;'O'
   653  11EB  3455               	retlw	85	;'U'
   654  11EC  3452               	retlw	82	;'R'
   655  11ED  3420               	retlw	32	;' '
   656  11EE  3420               	retlw	32	;' '
   657  11EF  3400               	retlw	0
   658  11F0                     STR_41:	
   659  11F0  3420               	retlw	32	;' '
   660  11F1  3443               	retlw	67	;'C'
   661  11F2  3441               	retlw	65	;'A'
   662  11F3  344E               	retlw	78	;'N'
   663  11F4  3420               	retlw	32	;' '
   664  11F5  344F               	retlw	79	;'O'
   665  11F6  344E               	retlw	78	;'N'
   666  11F7  3420               	retlw	32	;' '
   667  11F8  344B               	retlw	75	;'K'
   668  11F9  3445               	retlw	69	;'E'
   669  11FA  3452               	retlw	82	;'R'
   670  11FB  344F               	retlw	79	;'O'
   671  11FC  3453               	retlw	83	;'S'
   672  11FD  3445               	retlw	69	;'E'
   673  11FE  344E               	retlw	78	;'N'
   674  11FF  3445               	retlw	69	;'E'
   675  1200  3420               	retlw	32	;' '
   676  1201  3400               	retlw	0
   677  1202                     STR_23:	
   678  1202  3441               	retlw	65	;'A'
   679  1203  3455               	retlw	85	;'U'
   680  1204  3454               	retlw	84	;'T'
   681  1205  344F               	retlw	79	;'O'
   682  1206  344D               	retlw	77	;'M'
   683  1207  3441               	retlw	65	;'A'
   684  1208  3454               	retlw	84	;'T'
   685  1209  3449               	retlw	73	;'I'
   686  120A  3443               	retlw	67	;'C'
   687  120B  3420               	retlw	32	;' '
   688  120C  3452               	retlw	82	;'R'
   689  120D  3441               	retlw	65	;'A'
   690  120E  3454               	retlw	84	;'T'
   691  120F  3449               	retlw	73	;'I'
   692  1210  344F               	retlw	79	;'O'
   693  1211  344E               	retlw	78	;'N'
   694  1212  3420               	retlw	32	;' '
   695  1213  3400               	retlw	0
   696  1214                     STR_40:	
   697  1214  3420               	retlw	32	;' '
   698  1215  3450               	retlw	80	;'P'
   699  1216  344C               	retlw	76	;'L'
   700  1217  3445               	retlw	69	;'E'
   701  1218  3441               	retlw	65	;'A'
   702  1219  3453               	retlw	83	;'S'
   703  121A  3445               	retlw	69	;'E'
   704  121B  3420               	retlw	32	;' '
   705  121C  344B               	retlw	75	;'K'
   706  121D  3445               	retlw	69	;'E'
   707  121E  3445               	retlw	69	;'E'
   708  121F  3450               	retlw	80	;'P'
   709  1220  3420               	retlw	32	;' '
   710  1221  3459               	retlw	89	;'Y'
   711  1222  344F               	retlw	79	;'O'
   712  1223  3455               	retlw	85	;'U'
   713  1224  3452               	retlw	82	;'R'
   714  1225  3400               	retlw	0
   715  1226                     STR_2:	
   716  1226  3450               	retlw	80	;'P'
   717  1227  344C               	retlw	76	;'L'
   718  1228  3453               	retlw	83	;'S'
   719  1229  3420               	retlw	32	;' '
   720  122A  3457               	retlw	87	;'W'
   721  122B  3441               	retlw	65	;'A'
   722  122C  3449               	retlw	73	;'I'
   723  122D  3454               	retlw	84	;'T'
   724  122E  342E               	retlw	46	;'.'
   725  122F  342E               	retlw	46	;'.'
   726  1230  342E               	retlw	46	;'.'
   727  1231  342E               	retlw	46	;'.'
   728  1232  342E               	retlw	46	;'.'
   729  1233  342E               	retlw	46	;'.'
   730  1234  342E               	retlw	46	;'.'
   731  1235  342E               	retlw	46	;'.'
   732  1236  3400               	retlw	0
   733  1237                     STR_1:	
   734  1237  3447               	retlw	71	;'G'
   735  1238  3453               	retlw	83	;'S'
   736  1239  344D               	retlw	77	;'M'
   737  123A  3420               	retlw	32	;' '
   738  123B  3449               	retlw	73	;'I'
   739  123C  344E               	retlw	78	;'N'
   740  123D  3449               	retlw	73	;'I'
   741  123E  3454               	retlw	84	;'T'
   742  123F  3449               	retlw	73	;'I'
   743  1240  3441               	retlw	65	;'A'
   744  1241  344C               	retlw	76	;'L'
   745  1242  3449               	retlw	73	;'I'
   746  1243  345A               	retlw	90	;'Z'
   747  1244  3449               	retlw	73	;'I'
   748  1245  344E               	retlw	78	;'N'
   749  1246  3447               	retlw	71	;'G'
   750  1247  3400               	retlw	0
   751  1248                     STR_32:	
   752  1248  344B               	retlw	75	;'K'
   753  1249  3465               	retlw	101	;'e'
   754  124A  3472               	retlw	114	;'r'
   755  124B  346F               	retlw	111	;'o'
   756  124C  3473               	retlw	115	;'s'
   757  124D  3465               	retlw	101	;'e'
   758  124E  346E               	retlw	110	;'n'
   759  124F  3465               	retlw	101	;'e'
   760  1250  3420               	retlw	32	;' '
   761  1251  3453               	retlw	83	;'S'
   762  1252  3474               	retlw	116	;'t'
   763  1253  346F               	retlw	111	;'o'
   764  1254  3463               	retlw	99	;'c'
   765  1255  346B               	retlw	107	;'k'
   766  1256  343A               	retlw	58	;':'
   767  1257  3400               	retlw	0
   768  1258                     STR_30:	
   769  1258  3453               	retlw	83	;'S'
   770  1259  3475               	retlw	117	;'u'
   771  125A  3467               	retlw	103	;'g'
   772  125B  3461               	retlw	97	;'a'
   773  125C  3472               	retlw	114	;'r'
   774  125D  3420               	retlw	32	;' '
   775  125E  3453               	retlw	83	;'S'
   776  125F  3474               	retlw	116	;'t'
   777  1260  346F               	retlw	111	;'o'
   778  1261  3463               	retlw	99	;'c'
   779  1262  346B               	retlw	107	;'k'
   780  1263  343A               	retlw	58	;':'
   781  1264  3400               	retlw	0
   782  1265                     STR_28:	
   783  1265  3452               	retlw	82	;'R'
   784  1266  3469               	retlw	105	;'i'
   785  1267  3473               	retlw	115	;'s'
   786  1268  3465               	retlw	101	;'e'
   787  1269  3420               	retlw	32	;' '
   788  126A  3453               	retlw	83	;'S'
   789  126B  3474               	retlw	116	;'t'
   790  126C  346F               	retlw	111	;'o'
   791  126D  3463               	retlw	99	;'c'
   792  126E  346B               	retlw	107	;'k'
   793  126F  343A               	retlw	58	;':'
   794  1270  3400               	retlw	0
   795  1271                     STR_6:	
   796  1271  3441               	retlw	65	;'A'
   797  1272  3454               	retlw	84	;'T'
   798  1273  342B               	retlw	43	;'+'
   799  1274  3443               	retlw	67	;'C'
   800  1275  344D               	retlw	77	;'M'
   801  1276  3447               	retlw	71	;'G'
   802  1277  3446               	retlw	70	;'F'
   803  1278  343D               	retlw	61	;'='
   804  1279  3431               	retlw	49	;'1'
   805  127A  340D               	retlw	13
   806  127B  3400               	retlw	0
   807  127C                     STR_5:	
   808  127C  3441               	retlw	65	;'A'
   809  127D  3454               	retlw	84	;'T'
   810  127E  342B               	retlw	43	;'+'
   811  127F  3443               	retlw	67	;'C'
   812  1280  3453               	retlw	83	;'S'
   813  1281  3444               	retlw	68	;'D'
   814  1282  3448               	retlw	72	;'H'
   815  1283  343D               	retlw	61	;'='
   816  1284  3431               	retlw	49	;'1'
   817  1285  340D               	retlw	13
   818  1286  3400               	retlw	0
   819  1287                     STR_4:	
   820  1287  3441               	retlw	65	;'A'
   821  1288  3454               	retlw	84	;'T'
   822  1289  342B               	retlw	43	;'+'
   823  128A  3443               	retlw	67	;'C'
   824  128B  3450               	retlw	80	;'P'
   825  128C  3449               	retlw	73	;'I'
   826  128D  344E               	retlw	78	;'N'
   827  128E  343F               	retlw	63	;'?'
   828  128F  340D               	retlw	13
   829  1290  3400               	retlw	0
   830  1291                     STR_8:	
   831  1291  3447               	retlw	71	;'G'
   832  1292  3453               	retlw	83	;'S'
   833  1293  344D               	retlw	77	;'M'
   834  1294  3420               	retlw	32	;' '
   835  1295  3452               	retlw	82	;'R'
   836  1296  3445               	retlw	69	;'E'
   837  1297  3441               	retlw	65	;'A'
   838  1298  3444               	retlw	68	;'D'
   839  1299  3459               	retlw	89	;'Y'
   840  129A  3400               	retlw	0
   841  129B                     STR_57:	
   842  129B  3453               	retlw	83	;'S'
   843  129C  3454               	retlw	84	;'T'
   844  129D  344F               	retlw	79	;'O'
   845  129E  3443               	retlw	67	;'C'
   846  129F  344B               	retlw	75	;'K'
   847  12A0  3400               	retlw	0
   848  12A1                     STR_29:	
   849  12A1  3420               	retlw	32	;' '
   850  12A2  344B               	retlw	75	;'K'
   851  12A3  3467               	retlw	103	;'g'
   852  12A4  3473               	retlw	115	;'s'
   853  12A5  3400               	retlw	0
   854  12A6                     STR_33:	
   855  12A6  3420               	retlw	32	;' '
   856  12A7  344C               	retlw	76	;'L'
   857  12A8  3474               	retlw	116	;'t'
   858  12A9  3473               	retlw	115	;'s'
   859  12AA  3400               	retlw	0
   860  12AB                     STR_3:	
   861  12AB  3441               	retlw	65	;'A'
   862  12AC  3454               	retlw	84	;'T'
   863  12AD  340D               	retlw	13
   864  12AE  3400               	retlw	0
   865  10B1                     
   866                           	psect	cinit
   867  07DE                     start_initialization:	
   868                           
   869                           ; Clear objects allocated to BITCOMMON
   870  07DE  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   871                           
   872                           ; Clear objects allocated to COMMON
   873  07DF  01F7               	clrf	__pbssCOMMON& (0+127)
   874                           
   875                           ; Clear objects allocated to BANK0
   876  07E0  1383               	bcf	3,7	;select IRP bank0
   877  07E1  3020               	movlw	low __pbssBANK0
   878  07E2  0084               	movwf	4
   879  07E3  3053               	movlw	low (__pbssBANK0+51)
   880  07E4  120A  158A  2462   	fcall	clear_ram
      +       120A  118A         
   881                           
   882                           ; Clear objects allocated to BANK1
   883  07E9  30C7               	movlw	low __pbssBANK1
   884  07EA  0084               	movwf	4
   885  07EB  30DB               	movlw	low (__pbssBANK1+20)
   886  07EC  120A  158A  2462   	fcall	clear_ram
      +       120A  118A         
   887                           
   888                           ; Initialize objects allocated to BANK1
   889  07F1  30C7               	movlw	low (__pdataBANK1+39)
   890  07F2  00FD               	movwf	125
   891  07F3  300C               	movlw	high __pidataBANK1
   892  07F4  00FE               	movwf	126
   893  07F5  30D6               	movlw	low __pidataBANK1
   894  07F6  00FF               	movwf	127
   895  07F7  30A0               	movlw	low __pdataBANK1
   896  07F8  0084               	movwf	4
   897  07F9  120A  158A  248C   	fcall	init_ram
   898  07FC                     end_of_initialization:	
   899                           ;End of C runtime variable initialization code
   900                           
   901  07FC  0183               	clrf	3
   902  07FD  120A  118A  2811   	ljmp	_main	;jump to C main() function
   903                           
   904                           	psect	bitbssCOMMON
   905  03B0                     __pbitbssCOMMON:	
   906  03B0                     _rfid_flag:	
   907  03B0                     	ds	1
   908  03B1                     _sms_indication:	
   909  03B1                     	ds	1
   910                           
   911                           	psect	bssCOMMON
   912  0077                     __pbssCOMMON:	
   913  0077                     _delayus_variable:	
   914  0077                     	ds	1
   915                           
   916                           	psect	bssBANK0
   917  0020                     __pbssBANK0:	
   918  0020                     _KeroseneStock:	
   919  0020                     	ds	2
   920  0022                     _RiseStock:	
   921  0022                     	ds	2
   922  0024                     _SugarStock:	
   923  0024                     	ds	2
   924  0026                     _User:	
   925  0026                     	ds	2
   926  0028                     _User1amt:	
   927  0028                     	ds	2
   928  002A                     _User2amt:	
   929  002A                     	ds	2
   930  002C                     _User3amt:	
   931  002C                     	ds	2
   932  002E                     _User1Kerosene:	
   933  002E                     	ds	1
   934  002F                     _User1Rise:	
   935  002F                     	ds	1
   936  0030                     _User1Sugar:	
   937  0030                     	ds	1
   938  0031                     _User2Kerosene:	
   939  0031                     	ds	1
   940  0032                     _User2Rise:	
   941  0032                     	ds	1
   942  0033                     _User2Sugar:	
   943  0033                     	ds	1
   944  0034                     _User3Kerosene:	
   945  0034                     	ds	1
   946  0035                     _User3Rise:	
   947  0035                     	ds	1
   948  0036                     _User3Sugar:	
   949  0036                     	ds	1
   950  0037                     _card_store:	
   951  0037                     	ds	15
   952  0046                     _RiseArray:	
   953  0046                     	ds	5
   954  004B                     _KeroseneArray:	
   955  004B                     	ds	4
   956  004F                     _SugarArray:	
   957  004F                     	ds	4
   958                           
   959                           	psect	bssBANK1
   960  00C7                     __pbssBANK1:	
   961  00C7                     _sms:	
   962  00C7                     	ds	20
   963                           
   964                           	psect	dataBANK1
   965  00A0                     __pdataBANK1:	
   966  00A0                     _User1:	
   967  00A0                     	ds	13
   968  00AD                     _User2:	
   969  00AD                     	ds	13
   970  00BA                     _User3:	
   971  00BA                     	ds	13
   972                           
   973                           	psect	clrtext
   974  0C62                     clear_ram:	
   975                           ;	Called with FSR containing the base address, and
   976                           ;	W with the last address+1
   977                           
   978  0C62  0064               	clrwdt	;clear the watchdog before getting into this loop
   979  0C63                     clrloop:	
   980  0C63  0180               	clrf	0	;clear RAM location pointed to by FSR
   981  0C64  0A84               	incf	4,f	;increment pointer
   982  0C65  0604               	xorwf	4,w	;XOR with final address
   983  0C66  1903               	btfsc	3,2	;have we reached the end yet?
   984  0C67  3400               	retlw	0	;all done for this memory range, return
   985  0C68  0604               	xorwf	4,w	;XOR again to restore value
   986  0C69  2C63               	goto	clrloop	;do the next byte
   987                           
   988                           	psect	inittext
   989  0C88                     init_fetch:	
   990                           ;	Called with low address in FSR and high address in W
   991                           
   992  0C88  087E               	movf	126,w
   993  0C89  008A               	movwf	10
   994  0C8A  087F               	movf	127,w
   995  0C8B  0082               	movwf	2
   996  0C8C                     init_ram:	
   997                           ;Called with:
   998                           ;	high address of idata address in btemp 
   999                           ;	low address of idata address in btemp+1 
  1000                           ;	low address of data in FSR
  1001                           ;	high address + 1 of data in btemp-1
  1002                           
  1003  0C8C  2488  120A  158A   	fcall	init_fetch
  1004  0C8F  0080               	movwf	0
  1005  0C90  0A84               	incf	4,f
  1006  0C91  0804               	movf	4,w
  1007  0C92  067D               	xorwf	125,w
  1008  0C93  1903               	btfsc	3,2
  1009  0C94  3400               	retlw	0
  1010  0C95  0AFF               	incf	127,f
  1011  0C96  1903               	btfsc	3,2
  1012  0C97  0AFE               	incf	126,f
  1013  0C98  2C8C               	goto	init_ram
  1014                           
  1015                           	psect	cstackCOMMON
  1016  0070                     __pcstackCOMMON:	
  1017  0070                     ?_enable:	
  1018  0070                     ?_lcdport:	
  1019                           ; 0 bytes @ 0x0
  1020                           
  1021  0070                     ?_lcdcmd:	
  1022                           ; 0 bytes @ 0x0
  1023                           
  1024  0070                     ?_lcddata:	
  1025                           ; 0 bytes @ 0x0
  1026                           
  1027  0070                     ?_lcd_init:	
  1028                           ; 0 bytes @ 0x0
  1029                           
  1030  0070                     ?_SoftWareUart_Init:	
  1031                           ; 0 bytes @ 0x0
  1032                           
  1033  0070                     ??_receive:	
  1034                           ; 0 bytes @ 0x0
  1035                           
  1036  0070                     ?_gsm_read_line2:	
  1037                           ; 0 bytes @ 0x0
  1038                           
  1039  0070                     ??_gsm_read_line2:	
  1040                           ; 0 bytes @ 0x0
  1041                           
  1042  0070                     ?_ISR:	
  1043                           ; 0 bytes @ 0x0
  1044                           
  1045  0070                     ?_RFID_read:	
  1046                           ; 0 bytes @ 0x0
  1047                           
  1048  0070                     ?_ReadAmnt:	
  1049                           ; 0 bytes @ 0x0
  1050                           
  1051  0070                     ?_ReadStock:	
  1052                           ; 0 bytes @ 0x0
  1053                           
  1054  0070                     ?_DisplayStock:	
  1055                           ; 0 bytes @ 0x0
  1056                           
  1057  0070                     ?_uart_init:	
  1058                           ; 0 bytes @ 0x0
  1059                           
  1060  0070                     ?_paramter:	
  1061                           ; 0 bytes @ 0x0
  1062                           
  1063  0070                     ?_startup:	
  1064                           ; 0 bytes @ 0x0
  1065                           
  1066  0070                     ?_LoadStockToArray:	
  1067                           ; 0 bytes @ 0x0
  1068                           
  1069  0070                     ?_main:	
  1070                           ; 0 bytes @ 0x0
  1071                           
  1072  0070                     ?_eeprom_read:	
  1073                           ; 0 bytes @ 0x0
  1074                           
  1075  0070                     ?_softreceive:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ?_receive:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     gsm_read_line2@flag:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x0
  1086  0070                     	ds	1
  1087  0071                     gsm_read_line2@buffer:	
  1088                           
  1089                           ; 1 bytes @ 0x1
  1090  0071                     	ds	1
  1091  0072                     gsm_read_line2@rec_data:	
  1092                           
  1093                           ; 1 bytes @ 0x2
  1094  0072                     	ds	1
  1095  0073                     ??_ISR:	
  1096                           
  1097                           ; 0 bytes @ 0x3
  1098  0073                     	ds	3
  1099  0076                     ??_eeprom_write:	
  1100  0076                     ??_lcdport:	
  1101                           ; 0 bytes @ 0x6
  1102                           
  1103  0076                     ??_lcdcmd:	
  1104                           ; 0 bytes @ 0x6
  1105                           
  1106  0076                     ??_lcddata:	
  1107                           ; 0 bytes @ 0x6
  1108                           
  1109  0076                     ??_lcdstring:	
  1110                           ; 0 bytes @ 0x6
  1111                           
  1112  0076                     ??_RFID_read:	
  1113                           ; 0 bytes @ 0x6
  1114                           
  1115  0076                     ??_DisplayAmnt:	
  1116                           ; 0 bytes @ 0x6
  1117                           
  1118  0076                     ??_ReadAmnt:	
  1119                           ; 0 bytes @ 0x6
  1120                           
  1121  0076                     ??_ReadStock:	
  1122                           ; 0 bytes @ 0x6
  1123                           
  1124  0076                     ??_DisplayStock:	
  1125                           ; 0 bytes @ 0x6
  1126                           
  1127  0076                     ??_DisplaySugar:	
  1128                           ; 0 bytes @ 0x6
  1129                           
  1130  0076                     ??_DisplayRise:	
  1131                           ; 0 bytes @ 0x6
  1132                           
  1133  0076                     ??_DisplayKerosene:	
  1134                           ; 0 bytes @ 0x6
  1135                           
  1136  0076                     ??_uart_init:	
  1137                           ; 0 bytes @ 0x6
  1138                           
  1139  0076                     ??_paramter:	
  1140                           ; 0 bytes @ 0x6
  1141                           
  1142  0076                     ??_LoadStockToArray:	
  1143                           ; 0 bytes @ 0x6
  1144                           
  1145  0076                     ??___wmul:	
  1146                           ; 0 bytes @ 0x6
  1147                           
  1148  0076                     ??___lwdiv:	
  1149                           ; 0 bytes @ 0x6
  1150                           
  1151  0076                     ??___lwmod:	
  1152                           ; 0 bytes @ 0x6
  1153                           
  1154  0076                     ??___lbdiv:	
  1155                           ; 0 bytes @ 0x6
  1156                           
  1157  0076                     ??___awdiv:	
  1158                           ; 0 bytes @ 0x6
  1159                           
  1160  0076                     ??___awmod:	
  1161                           ; 0 bytes @ 0x6
  1162                           
  1163                           
  1164                           	psect	cstackBANK0
  1165  0053                     __pcstackBANK0:	
  1166                           ; 0 bytes @ 0x6
  1167                           
  1168  0053                     ??_eeprom_read:	
  1169  0053                     ??_enable:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0053                     ??_SoftWareUart_Init:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0053                     ??_softreceive:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0053                     ?___lbdiv:	
  1179                           ; 0 bytes @ 0x0
  1180                           
  1181  0053                     ?___lbmod:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0053                     ?_strcmp:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0053                     ?_memcmp:	
  1188                           ; 2 bytes @ 0x0
  1189                           
  1190  0053                     ?___lwmod:	
  1191                           ; 2 bytes @ 0x0
  1192                           
  1193  0053                     ?___awmod:	
  1194                           ; 2 bytes @ 0x0
  1195                           
  1196  0053                     lcdport@a:	
  1197                           ; 2 bytes @ 0x0
  1198                           
  1199  0053                     strcmp@s2:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0053                     ___lbdiv@divisor:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0053                     ___lbmod@divisor:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0053                     memcmp@s1:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0053                     ___lwmod@divisor:	
  1212                           ; 2 bytes @ 0x0
  1213                           
  1214  0053                     ___awmod@divisor:	
  1215                           ; 2 bytes @ 0x0
  1216                           
  1217                           
  1218                           ; 2 bytes @ 0x0
  1219  0053                     	ds	1
  1220  0054                     ??___lbmod:	
  1221  0054                     softreceive@Data:	
  1222                           ; 0 bytes @ 0x1
  1223                           
  1224  0054                     ___lbdiv@dividend:	
  1225                           ; 1 bytes @ 0x1
  1226                           
  1227                           
  1228                           ; 1 bytes @ 0x1
  1229  0054                     	ds	1
  1230  0055                     ??_strcmp:	
  1231  0055                     lcdcmd@y:	
  1232                           ; 0 bytes @ 0x2
  1233                           
  1234  0055                     lcddata@y:	
  1235                           ; 1 bytes @ 0x2
  1236                           
  1237  0055                     softreceive@mask:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0055                     eeprom_read@addr:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0055                     memcmp@s2:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0055                     ___lbdiv@counter:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0055                     ___lbmod@dividend:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0055                     ___lwmod@dividend:	
  1253                           ; 1 bytes @ 0x2
  1254                           
  1255  0055                     ___awmod@dividend:	
  1256                           ; 2 bytes @ 0x2
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x2
  1260  0055                     	ds	1
  1261  0056                     ?___wmul:	
  1262  0056                     lcdcmd@z:	
  1263                           ; 2 bytes @ 0x3
  1264                           
  1265  0056                     lcddata@z:	
  1266                           ; 1 bytes @ 0x3
  1267                           
  1268  0056                     ___lbdiv@quotient:	
  1269                           ; 1 bytes @ 0x3
  1270                           
  1271  0056                     ___lbmod@counter:	
  1272                           ; 1 bytes @ 0x3
  1273                           
  1274  0056                     RFID_read@i:	
  1275                           ; 1 bytes @ 0x3
  1276                           
  1277  0056                     memcmp@n:	
  1278                           ; 2 bytes @ 0x3
  1279                           
  1280  0056                     ___wmul@multiplier:	
  1281                           ; 2 bytes @ 0x3
  1282                           
  1283                           
  1284                           ; 2 bytes @ 0x3
  1285  0056                     	ds	1
  1286  0057                     lcdcmd@a:	
  1287  0057                     lcddata@a:	
  1288                           ; 1 bytes @ 0x4
  1289                           
  1290  0057                     strcmp@r:	
  1291                           ; 1 bytes @ 0x4
  1292                           
  1293  0057                     ___lwmod@counter:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296  0057                     ___lbmod@rem:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0057                     ___awmod@counter:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x4
  1304  0057                     	ds	1
  1305  0058                     ??_memcmp:	
  1306  0058                     ??_lcd_init:	
  1307                           ; 0 bytes @ 0x5
  1308                           
  1309  0058                     ?_lcdstring:	
  1310                           ; 0 bytes @ 0x5
  1311                           
  1312  0058                     ?_DisplaySugar:	
  1313                           ; 0 bytes @ 0x5
  1314                           
  1315  0058                     ?_DisplayRise:	
  1316                           ; 0 bytes @ 0x5
  1317                           
  1318  0058                     ?_DisplayKerosene:	
  1319                           ; 0 bytes @ 0x5
  1320                           
  1321  0058                     ?___lwdiv:	
  1322                           ; 0 bytes @ 0x5
  1323                           
  1324  0058                     DisplaySugar@Sugar:	
  1325                           ; 2 bytes @ 0x5
  1326                           
  1327  0058                     DisplayRise@Rise:	
  1328                           ; 1 bytes @ 0x5
  1329                           
  1330  0058                     DisplayKerosene@Kerosene:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333  0058                     strcmp@s1:	
  1334                           ; 1 bytes @ 0x5
  1335                           
  1336  0058                     ___awmod@sign:	
  1337                           ; 1 bytes @ 0x5
  1338                           
  1339  0058                     lcdstring@a:	
  1340                           ; 1 bytes @ 0x5
  1341                           
  1342  0058                     ___wmul@multiplicand:	
  1343                           ; 2 bytes @ 0x5
  1344                           
  1345  0058                     ___lwdiv@divisor:	
  1346                           ; 2 bytes @ 0x5
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x5
  1350  0058                     	ds	1
  1351  0059                     ?___awdiv:	
  1352  0059                     DisplaySugar@Location:	
  1353                           ; 2 bytes @ 0x6
  1354                           
  1355  0059                     DisplayRise@Location:	
  1356                           ; 1 bytes @ 0x6
  1357                           
  1358  0059                     DisplayKerosene@Location:	
  1359                           ; 1 bytes @ 0x6
  1360                           
  1361  0059                     ___awdiv@divisor:	
  1362                           ; 1 bytes @ 0x6
  1363                           
  1364                           
  1365                           ; 2 bytes @ 0x6
  1366  0059                     	ds	1
  1367  005A                     ??_startup:	
  1368  005A                     ___wmul@product:	
  1369                           ; 0 bytes @ 0x7
  1370                           
  1371  005A                     ___lwdiv@dividend:	
  1372                           ; 2 bytes @ 0x7
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x7
  1376  005A                     	ds	1
  1377  005B                     ___awdiv@dividend:	
  1378                           
  1379                           ; 2 bytes @ 0x8
  1380  005B                     	ds	1
  1381  005C                     ___lwdiv@quotient:	
  1382                           
  1383                           ; 2 bytes @ 0x9
  1384  005C                     	ds	1
  1385  005D                     ___awdiv@counter:	
  1386                           
  1387                           ; 1 bytes @ 0xA
  1388  005D                     	ds	1
  1389  005E                     ___lwdiv@counter:	
  1390  005E                     ___awdiv@sign:	
  1391                           ; 1 bytes @ 0xB
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0xB
  1395  005E                     	ds	1
  1396  005F                     ___awdiv@quotient:	
  1397  005F                     _LoadStockToArray$1137:	
  1398                           ; 2 bytes @ 0xC
  1399                           
  1400                           
  1401                           ; 2 bytes @ 0xC
  1402  005F                     	ds	2
  1403  0061                     ?_eeprom_write:	
  1404  0061                     ?_DisplayAmnt:	
  1405                           ; 0 bytes @ 0xE
  1406                           
  1407  0061                     eeprom_write@value:	
  1408                           ; 0 bytes @ 0xE
  1409                           
  1410  0061                     DisplayAmnt@Amnt:	
  1411                           ; 1 bytes @ 0xE
  1412                           
  1413                           
  1414                           ; 2 bytes @ 0xE
  1415  0061                     	ds	1
  1416  0062                     eeprom_write@addr:	
  1417                           
  1418                           ; 1 bytes @ 0xF
  1419  0062                     	ds	1
  1420  0063                     DisplayAmnt@Location:	
  1421                           
  1422                           ; 1 bytes @ 0x10
  1423  0063                     	ds	1
  1424  0064                     _DisplayAmnt$1136:	
  1425                           
  1426                           ; 2 bytes @ 0x11
  1427  0064                     	ds	2
  1428  0066                     ??_main:	
  1429                           
  1430                           ; 0 bytes @ 0x13
  1431  0066                     	ds	3
  1432                           
  1433                           	psect	maintext
  1434  0011                     __pmaintext:	
  1435 ;;Data sizes: Strings 658, constant 11, data 39, bss 72, persistent 0 stack 0
  1436 ;;Auto spaces:   Size  Autos    Used
  1437 ;; COMMON          14      6       8
  1438 ;; BANK0           80     22      73
  1439 ;; BANK1           80      0      59
  1440 ;; BANK3           96      0       0
  1441 ;; BANK2           96      0       0
  1442 ;;
  1443 ;; Pointer list with targets:
  1444 ;; ?_memcmp	int  size(1) Largest target is 0
  1445 ;;
  1446 ;; ?_strcmp	int  size(1) Largest target is 0
  1447 ;;
  1448 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1449 ;;
  1450 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1451 ;;
  1452 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1453 ;;
  1454 ;; ?___awmod	int  size(1) Largest target is 0
  1455 ;;
  1456 ;; ?___awdiv	int  size(1) Largest target is 0
  1457 ;;
  1458 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 13
  1459 ;;		 -> User3(BANK1[13]), User2(BANK1[13]), User1(BANK1[13]), 
  1460 ;;
  1461 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 15
  1462 ;;		 -> card_store(BANK0[15]), 
  1463 ;;
  1464 ;; memcmp@s2	PTR const void  size(1) Largest target is 20
  1465 ;;		 -> sms(BANK1[20]), 
  1466 ;;
  1467 ;; memcmp@s1	PTR const void  size(2) Largest target is 6
  1468 ;;		 -> STR_57(CODE[6]), 
  1469 ;;
  1470 ;; gsm_read_line2@buffer	PTR unsigned char  size(1) Largest target is 20
  1471 ;;		 -> sms(BANK1[20]), 
  1472 ;;
  1473 ;; lcdstring@a	PTR const unsigned char  size(2) Largest target is 22
  1474 ;;		 -> STR_56(CODE[18]), STR_55(CODE[18]), STR_54(CODE[18]), STR_53(CODE[21]), 
  1475 ;;		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[18]), 
  1476 ;;		 -> STR_48(CODE[18]), STR_47(CODE[18]), STR_46(CODE[21]), STR_45(CODE[21]), 
  1477 ;;		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[18]), STR_41(CODE[18]), 
  1478 ;;		 -> STR_40(CODE[18]), STR_39(CODE[21]), STR_38(CODE[21]), STR_37(CODE[21]), 
  1479 ;;		 -> STR_36(CODE[21]), STR_35(CODE[18]), STR_34(CODE[18]), STR_26(CODE[18]), 
  1480 ;;		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[18]), STR_22(CODE[22]), 
  1481 ;;		 -> STR_21(CODE[22]), STR_20(CODE[21]), STR_19(CODE[21]), sms(BANK1[20]), 
  1482 ;;		 -> STR_8(CODE[10]), STR_2(CODE[17]), STR_1(CODE[17]), 
  1483 ;;
  1484 ;;
  1485 ;; Critical Paths under _main in COMMON
  1486 ;;
  1487 ;;   None.
  1488 ;;
  1489 ;; Critical Paths under _ISR in COMMON
  1490 ;;
  1491 ;;   _ISR->_gsm_read_line2
  1492 ;;
  1493 ;; Critical Paths under _main in BANK0
  1494 ;;
  1495 ;;   _main->_DisplayAmnt
  1496 ;;   _startup->_lcdstring
  1497 ;;   _DisplayStock->_DisplayAmnt
  1498 ;;   _DisplayKerosene->_lcdcmd
  1499 ;;   _DisplayKerosene->_lcddata
  1500 ;;   _DisplayKerosene->___lbmod
  1501 ;;   _DisplayRise->_lcdcmd
  1502 ;;   _DisplayRise->_lcddata
  1503 ;;   _DisplayRise->___lbmod
  1504 ;;   _DisplaySugar->_lcdcmd
  1505 ;;   _DisplaySugar->_lcddata
  1506 ;;   _DisplaySugar->___lbmod
  1507 ;;   _DisplayAmnt->___awdiv
  1508 ;;   _lcdstring->_lcddata
  1509 ;;   _lcd_init->_lcdcmd
  1510 ;;   _RFID_read->_softreceive
  1511 ;;   _lcddata->_enable
  1512 ;;   _lcdcmd->_enable
  1513 ;;   _LoadStockToArray->___lwdiv
  1514 ;;   _paramter->___wmul
  1515 ;;   _ReadStock->___wmul
  1516 ;;   _ReadAmnt->___wmul
  1517 ;;   ___awdiv->___awmod
  1518 ;;   ___lwdiv->___lwmod
  1519 ;;   ___wmul->_eeprom_read
  1520 ;;   _eeprom_write->___awdiv
  1521 ;;
  1522 ;; Critical Paths under _ISR in BANK0
  1523 ;;
  1524 ;;   None.
  1525 ;;
  1526 ;; Critical Paths under _main in BANK1
  1527 ;;
  1528 ;;   None.
  1529 ;;
  1530 ;; Critical Paths under _ISR in BANK1
  1531 ;;
  1532 ;;   None.
  1533 ;;
  1534 ;; Critical Paths under _main in BANK3
  1535 ;;
  1536 ;;   None.
  1537 ;;
  1538 ;; Critical Paths under _ISR in BANK3
  1539 ;;
  1540 ;;   None.
  1541 ;;
  1542 ;; Critical Paths under _main in BANK2
  1543 ;;
  1544 ;;   None.
  1545 ;;
  1546 ;; Critical Paths under _ISR in BANK2
  1547 ;;
  1548 ;;   None.
  1549 ;;
  1550 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1551 ;;
  1552 ;;
  1553 ;;Call Graph Tables:
  1554 ;;
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1557 ;; ---------------------------------------------------------------------------------
  1558 ;; (0) _main                                                 3     3      0   11051
  1559 ;;                                             19 BANK0      3     3      0
  1560 ;;                          _uart_init
  1561 ;;                           _lcd_init
  1562 ;;                           _paramter
  1563 ;;                  _SoftWareUart_Init
  1564 ;;                            _startup
  1565 ;;                          _ReadStock
  1566 ;;                          _lcdstring
  1567 ;;                             _lcdcmd
  1568 ;;                          _RFID_read
  1569 ;;                             _strcmp
  1570 ;;                           _ReadAmnt
  1571 ;;                        _DisplayAmnt
  1572 ;;                        _DisplayRise
  1573 ;;                       _DisplaySugar
  1574 ;;                    _DisplayKerosene
  1575 ;;                            ___lwdiv
  1576 ;;                       _eeprom_write
  1577 ;;                            ___lwmod
  1578 ;;                            ___awdiv
  1579 ;;                            ___awmod
  1580 ;;                   _LoadStockToArray
  1581 ;;                       _DisplayStock
  1582 ;;                             _memcmp
  1583 ;; ---------------------------------------------------------------------------------
  1584 ;; (1) _startup                                              3     3      0     585
  1585 ;;                                              7 BANK0      3     3      0
  1586 ;;                             _lcdcmd
  1587 ;;                          _lcdstring
  1588 ;; ---------------------------------------------------------------------------------
  1589 ;; (1) _DisplayStock                                         0     0      0    2027
  1590 ;;                             _lcdcmd
  1591 ;;                          _lcdstring
  1592 ;;                        _DisplayAmnt
  1593 ;; ---------------------------------------------------------------------------------
  1594 ;; (1) _DisplayKerosene                                      2     1      1    1086
  1595 ;;                                              5 BANK0      2     1      1
  1596 ;;                             _lcdcmd
  1597 ;;                            ___lbdiv
  1598 ;;                            _lcddata
  1599 ;;                            ___lbmod
  1600 ;; ---------------------------------------------------------------------------------
  1601 ;; (1) _DisplayRise                                          2     1      1    1086
  1602 ;;                                              5 BANK0      2     1      1
  1603 ;;                             _lcdcmd
  1604 ;;                            ___lbdiv
  1605 ;;                            _lcddata
  1606 ;;                            ___lbmod
  1607 ;; ---------------------------------------------------------------------------------
  1608 ;; (1) _DisplaySugar                                         2     1      1    1086
  1609 ;;                                              5 BANK0      2     1      1
  1610 ;;                             _lcdcmd
  1611 ;;                            ___lbdiv
  1612 ;;                            _lcddata
  1613 ;;                            ___lbmod
  1614 ;; ---------------------------------------------------------------------------------
  1615 ;; (2) _DisplayAmnt                                          5     3      2    1442
  1616 ;;                                             14 BANK0      5     3      2
  1617 ;;                             _lcdcmd
  1618 ;;                            ___awdiv
  1619 ;;                            _lcddata
  1620 ;;                            ___awmod
  1621 ;; ---------------------------------------------------------------------------------
  1622 ;; (2) _lcdstring                                            2     0      2     325
  1623 ;;                                              5 BANK0      2     0      2
  1624 ;;                            _lcddata
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (1) _lcd_init                                             2     2      0     384
  1627 ;;                                              5 BANK0      2     2      0
  1628 ;;                            _lcdport
  1629 ;;                             _lcdcmd
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (1) _RFID_read                                            2     2      0     235
  1632 ;;                                              3 BANK0      2     2      0
  1633 ;;                        _softreceive
  1634 ;; ---------------------------------------------------------------------------------
  1635 ;; (3) _lcddata                                              3     3      0     260
  1636 ;;                                              2 BANK0      3     3      0
  1637 ;;                            _lcdport
  1638 ;;                             _enable
  1639 ;; ---------------------------------------------------------------------------------
  1640 ;; (3) _lcdcmd                                               3     3      0     260
  1641 ;;                                              2 BANK0      3     3      0
  1642 ;;                            _lcdport
  1643 ;;                             _enable
  1644 ;; ---------------------------------------------------------------------------------
  1645 ;; (1) _LoadStockToArray                                     6     6      0     700
  1646 ;;                                             12 BANK0      2     2      0
  1647 ;;                            ___lwdiv
  1648 ;;                            ___lwmod
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (1) _paramter                                             0     0      0     123
  1651 ;;                        _eeprom_read
  1652 ;;                             ___wmul
  1653 ;; ---------------------------------------------------------------------------------
  1654 ;; (1) _ReadStock                                            0     0      0     123
  1655 ;;                        _eeprom_read
  1656 ;;                             ___wmul
  1657 ;; ---------------------------------------------------------------------------------
  1658 ;; (1) _ReadAmnt                                             0     0      0     123
  1659 ;;                        _eeprom_read
  1660 ;;                             ___wmul
  1661 ;; ---------------------------------------------------------------------------------
  1662 ;; (2) _softreceive                                          3     3      0     136
  1663 ;;                                              0 BANK0      3     3      0
  1664 ;; ---------------------------------------------------------------------------------
  1665 ;; (1) _SoftWareUart_Init                                    1     1      0       0
  1666 ;;                                              0 BANK0      1     1      0
  1667 ;; ---------------------------------------------------------------------------------
  1668 ;; (4) _enable                                               2     2      0       0
  1669 ;;                                              0 BANK0      2     2      0
  1670 ;; ---------------------------------------------------------------------------------
  1671 ;; (3) ___awmod                                              6     2      4     433
  1672 ;;                                              0 BANK0      6     2      4
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (3) ___awdiv                                              8     4      4     300
  1675 ;;                                              6 BANK0      8     4      4
  1676 ;;                            ___awmod (ARG)
  1677 ;; ---------------------------------------------------------------------------------
  1678 ;; (2) ___lbmod                                              5     4      1     232
  1679 ;;                                              0 BANK0      5     4      1
  1680 ;; ---------------------------------------------------------------------------------
  1681 ;; (2) ___lbdiv                                              4     3      1     241
  1682 ;;                                              0 BANK0      4     3      1
  1683 ;; ---------------------------------------------------------------------------------
  1684 ;; (2) ___lwmod                                              5     1      4     232
  1685 ;;                                              0 BANK0      5     1      4
  1686 ;; ---------------------------------------------------------------------------------
  1687 ;; (2) ___lwdiv                                              7     3      4     162
  1688 ;;                                              5 BANK0      7     3      4
  1689 ;;                            ___lwmod (ARG)
  1690 ;; ---------------------------------------------------------------------------------
  1691 ;; (2) ___wmul                                               6     2      4      92
  1692 ;;                                              3 BANK0      6     2      4
  1693 ;;                        _eeprom_read (ARG)
  1694 ;; ---------------------------------------------------------------------------------
  1695 ;; (1) _memcmp                                               6     1      5     168
  1696 ;;                                              0 BANK0      6     1      5
  1697 ;; ---------------------------------------------------------------------------------
  1698 ;; (1) _eeprom_write                                         2     1      1      44
  1699 ;;                                             14 BANK0      2     1      1
  1700 ;;                            ___lwdiv (ARG)
  1701 ;;                            ___lwmod (ARG)
  1702 ;;                            ___awdiv (ARG)
  1703 ;;                            ___awmod (ARG)
  1704 ;; ---------------------------------------------------------------------------------
  1705 ;; (1) _strcmp                                               6     4      2     127
  1706 ;;                                              0 BANK0      6     4      2
  1707 ;; ---------------------------------------------------------------------------------
  1708 ;; (1) _uart_init                                            0     0      0       0
  1709 ;; ---------------------------------------------------------------------------------
  1710 ;; (2) _eeprom_read                                          3     3      0      31
  1711 ;;                                              0 BANK0      3     3      0
  1712 ;; ---------------------------------------------------------------------------------
  1713 ;; (4) _lcdport                                              1     1      0     124
  1714 ;;                                              0 BANK0      1     1      0
  1715 ;; ---------------------------------------------------------------------------------
  1716 ;; Estimated maximum stack depth 4
  1717 ;; ---------------------------------------------------------------------------------
  1718 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1719 ;; ---------------------------------------------------------------------------------
  1720 ;; (5) _ISR                                                  3     3      0     138
  1721 ;;                                              3 COMMON     3     3      0
  1722 ;;                     _gsm_read_line2
  1723 ;; ---------------------------------------------------------------------------------
  1724 ;; (6) _gsm_read_line2                                       3     3      0     138
  1725 ;;                                              0 COMMON     3     3      0
  1726 ;;                            _receive
  1727 ;; ---------------------------------------------------------------------------------
  1728 ;; (7) _receive                                              0     0      0       0
  1729 ;; ---------------------------------------------------------------------------------
  1730 ;; Estimated maximum stack depth 7
  1731 ;; ---------------------------------------------------------------------------------
  1732 ;; Call Graph Graphs:
  1733 ;; _main (ROOT)
  1734 ;;   _uart_init
  1735 ;;   _lcd_init
  1736 ;;     _lcdport
  1737 ;;     _lcdcmd
  1738 ;;       _lcdport
  1739 ;;       _enable
  1740 ;;   _paramter
  1741 ;;     _eeprom_read
  1742 ;;     ___wmul
  1743 ;;       _eeprom_read (ARG)
  1744 ;;   _SoftWareUart_Init
  1745 ;;   _startup
  1746 ;;     _lcdcmd
  1747 ;;       _lcdport
  1748 ;;       _enable
  1749 ;;     _lcdstring
  1750 ;;       _lcddata
  1751 ;;         _lcdport
  1752 ;;         _enable
  1753 ;;   _ReadStock
  1754 ;;     _eeprom_read
  1755 ;;     ___wmul
  1756 ;;       _eeprom_read (ARG)
  1757 ;;   _lcdstring
  1758 ;;     _lcddata
  1759 ;;       _lcdport
  1760 ;;       _enable
  1761 ;;   _lcdcmd
  1762 ;;     _lcdport
  1763 ;;     _enable
  1764 ;;   _RFID_read
  1765 ;;     _softreceive
  1766 ;;   _strcmp
  1767 ;;   _ReadAmnt
  1768 ;;     _eeprom_read
  1769 ;;     ___wmul
  1770 ;;       _eeprom_read (ARG)
  1771 ;;   _DisplayAmnt
  1772 ;;     _lcdcmd
  1773 ;;       _lcdport
  1774 ;;       _enable
  1775 ;;     ___awdiv
  1776 ;;       ___awmod (ARG)
  1777 ;;     _lcddata
  1778 ;;       _lcdport
  1779 ;;       _enable
  1780 ;;     ___awmod
  1781 ;;   _DisplayRise
  1782 ;;     _lcdcmd
  1783 ;;       _lcdport
  1784 ;;       _enable
  1785 ;;     ___lbdiv
  1786 ;;     _lcddata
  1787 ;;       _lcdport
  1788 ;;       _enable
  1789 ;;     ___lbmod
  1790 ;;   _DisplaySugar
  1791 ;;     _lcdcmd
  1792 ;;       _lcdport
  1793 ;;       _enable
  1794 ;;     ___lbdiv
  1795 ;;     _lcddata
  1796 ;;       _lcdport
  1797 ;;       _enable
  1798 ;;     ___lbmod
  1799 ;;   _DisplayKerosene
  1800 ;;     _lcdcmd
  1801 ;;       _lcdport
  1802 ;;       _enable
  1803 ;;     ___lbdiv
  1804 ;;     _lcddata
  1805 ;;       _lcdport
  1806 ;;       _enable
  1807 ;;     ___lbmod
  1808 ;;   ___lwdiv
  1809 ;;     ___lwmod (ARG)
  1810 ;;   _eeprom_write
  1811 ;;     ___lwdiv (ARG)
  1812 ;;       ___lwmod (ARG)
  1813 ;;     ___lwmod (ARG)
  1814 ;;     ___awdiv (ARG)
  1815 ;;       ___awmod (ARG)
  1816 ;;     ___awmod (ARG)
  1817 ;;   ___lwmod
  1818 ;;   ___awdiv
  1819 ;;     ___awmod (ARG)
  1820 ;;   ___awmod
  1821 ;;   _LoadStockToArray
  1822 ;;     ___lwdiv
  1823 ;;       ___lwmod (ARG)
  1824 ;;     ___lwmod
  1825 ;;   _DisplayStock
  1826 ;;     _lcdcmd
  1827 ;;       _lcdport
  1828 ;;       _enable
  1829 ;;     _lcdstring
  1830 ;;       _lcddata
  1831 ;;         _lcdport
  1832 ;;         _enable
  1833 ;;     _DisplayAmnt
  1834 ;;       _lcdcmd
  1835 ;;         _lcdport
  1836 ;;         _enable
  1837 ;;       ___awdiv
  1838 ;;         ___awmod (ARG)
  1839 ;;       _lcddata
  1840 ;;         _lcdport
  1841 ;;         _enable
  1842 ;;       ___awmod
  1843 ;;   _memcmp
  1844 ;;
  1845 ;; _ISR (ROOT)
  1846 ;;   _gsm_read_line2
  1847 ;;     _receive
  1848 ;;
  1849 ;; Address spaces:
  1850 ;;Name               Size   Autos  Total    Cost      Usage
  1851 ;;BANK3               60      0       0       9        0.0%
  1852 ;;BITBANK3            60      0       0       8        0.0%
  1853 ;;SFR3                 0      0       0       4        0.0%
  1854 ;;BITSFR3              0      0       0       4        0.0%
  1855 ;;BANK2               60      0       0      11        0.0%
  1856 ;;BITBANK2            60      0       0      10        0.0%
  1857 ;;SFR2                 0      0       0       5        0.0%
  1858 ;;BITSFR2              0      0       0       5        0.0%
  1859 ;;SFR1                 0      0       0       2        0.0%
  1860 ;;BITSFR1              0      0       0       2        0.0%
  1861 ;;BANK1               50      0      3B       7       73.8%
  1862 ;;BITBANK1            50      0       0       6        0.0%
  1863 ;;CODE                 0      0       0       0        0.0%
  1864 ;;DATA                 0      0      96      12        0.0%
  1865 ;;ABS                  0      0      8C       3        0.0%
  1866 ;;NULL                 0      0       0       0        0.0%
  1867 ;;STACK                0      0       A       2        0.0%
  1868 ;;BANK0               50     16      49       5       91.3%
  1869 ;;BITBANK0            50      0       0       4        0.0%
  1870 ;;SFR0                 0      0       0       1        0.0%
  1871 ;;BITSFR0              0      0       0       1        0.0%
  1872 ;;COMMON               E      6       8       1       57.1%
  1873 ;;BITCOMMON            E      0       1       0        7.1%
  1874 ;;EEDATA             100      0       0       0        0.0%
  1875                           
  1876                           
  1877 ;; *************** function _main *****************
  1878 ;; Defined at:
  1879 ;;		line 214 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 17F/0
  1890 ;;		On exit  : 60/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       3       0       0       0
  1896 ;;      Totals:         0       3       0       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels required when called:    7
  1899 ;; This function calls:
  1900 ;;		_uart_init
  1901 ;;		_lcd_init
  1902 ;;		_paramter
  1903 ;;		_SoftWareUart_Init
  1904 ;;		_startup
  1905 ;;		_ReadStock
  1906 ;;		_lcdstring
  1907 ;;		_lcdcmd
  1908 ;;		_RFID_read
  1909 ;;		_strcmp
  1910 ;;		_ReadAmnt
  1911 ;;		_DisplayAmnt
  1912 ;;		_DisplayRise
  1913 ;;		_DisplaySugar
  1914 ;;		_DisplayKerosene
  1915 ;;		___lwdiv
  1916 ;;		_eeprom_write
  1917 ;;		___lwmod
  1918 ;;		___awdiv
  1919 ;;		___awmod
  1920 ;;		_LoadStockToArray
  1921 ;;		_DisplayStock
  1922 ;;		_memcmp
  1923 ;; This function is called by:
  1924 ;;		Startup code after reset
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927  0011                     _main:	
  1928                           
  1929                           ;Main.c: 215: ANSEL=0x00;
  1930                           
  1931                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1932  0011  1683               	bsf	3,5	;RP0=1, select bank3
  1933  0012  1703               	bsf	3,6	;RP1=1, select bank3
  1934  0013  0188               	clrf	8	;volatile
  1935                           
  1936                           ;Main.c: 216: ANSELH=0x00;
  1937  0014  0189               	clrf	9	;volatile
  1938                           
  1939                           ;Main.c: 217: TRISD=0X01;
  1940  0015  3001               	movlw	1
  1941  0016  1303               	bcf	3,6	;RP1=0, select bank1
  1942  0017  0088               	movwf	8	;volatile
  1943                           
  1944                           ;Main.c: 218: PORTD=0X00;
  1945  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0019  0188               	clrf	8	;volatile
  1947                           
  1948                           ;Main.c: 219: TRISC=0X8F;
  1949  001A  308F               	movlw	143
  1950  001B  1683               	bsf	3,5	;RP0=1, select bank1
  1951  001C  0087               	movwf	7	;volatile
  1952                           
  1953                           ;Main.c: 220: PORTC=0X00;
  1954  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1955  001E  0187               	clrf	7	;volatile
  1956                           
  1957                           ;Main.c: 221: INTCON=0xC0;
  1958  001F  30C0               	movlw	192
  1959  0020  008B               	movwf	11	;volatile
  1960                           
  1961                           ;Main.c: 222: uart_init();
  1962  0021  120A  158A  2478   	fcall	_uart_init
      +       120A  118A         
  1963                           
  1964                           ;Main.c: 223: lcd_init();
  1965  0026  120A  118A  25E1   	fcall	_lcd_init
      +       120A  118A         
  1966                           
  1967                           ;Main.c: 224: paramter();
  1968  002B  120A  158A  25AE   	fcall	_paramter
      +       120A  118A         
  1969                           
  1970                           ;Main.c: 225: SoftWareUart_Init();
  1971  0030  120A  158A  246A   	fcall	_SoftWareUart_Init
      +       120A  118A         
  1972                           
  1973                           ;Main.c: 226: startup();
  1974  0035  120A  118A  258B   	fcall	_startup
      +       120A  118A         
  1975                           
  1976                           ;Main.c: 228: PIE1=0x20;
  1977  003A  3020               	movlw	32
  1978  003B  1683               	bsf	3,5	;RP0=1, select bank1
  1979  003C  1303               	bcf	3,6	;RP1=0, select bank1
  1980  003D  008C               	movwf	12	;volatile
  1981  003E                     l4402:	
  1982                           
  1983                           ;Main.c: 231: {
  1984                           ;Main.c: 232: ReadStock();
  1985  003E  120A  158A  25C8   	fcall	_ReadStock
      +       120A  118A         
  1986                           
  1987                           ;Main.c: 233: if(!RC0)
  1988  0043  1807               	btfsc	7,0
  1989  0044  286A               	goto	l4416
  1990                           
  1991                           ;Main.c: 234: {
  1992                           ;Main.c: 235: lcdstring("PLEASE TAP YOUR  ");
  1993  0045  30DE               	movlw	low (STR_25| (0+32768))
  1994  0046  00D8               	movwf	?_lcdstring
  1995  0047  3091               	movlw	high (STR_25| (0+32768))
  1996  0048  00D9               	movwf	?_lcdstring+1
  1997  0049  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  1998                           
  1999                           ;Main.c: 236: lcdcmd(0xC0);
  2000  004E  30C0               	movlw	192
  2001  004F  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2002                           
  2003                           ;Main.c: 237: lcdstring("SMART CARD       ");
  2004  0054  30A8               	movlw	low (STR_26| (0+32768))
  2005  0055  00D8               	movwf	?_lcdstring
  2006  0056  3091               	movlw	high (STR_26| (0+32768))
  2007  0057  00D9               	movwf	?_lcdstring+1
  2008  0058  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2009                           
  2010                           ;Main.c: 238: _delay((unsigned long)((200)*(20000000/4000.0)));
  2011  005D  3006               	movlw	6
  2012  005E  00E8               	movwf	??_main+2
  2013  005F  300E               	movlw	14
  2014  0060  00E7               	movwf	??_main+1
  2015  0061  30B0               	movlw	176
  2016  0062  00E6               	movwf	??_main
  2017  0063                     u1717:	
  2018  0063  0BE6               	decfsz	??_main,f
  2019  0064  2863               	goto	u1717
  2020  0065  0BE7               	decfsz	??_main+1,f
  2021  0066  2863               	goto	u1717
  2022  0067  0BE8               	decfsz	??_main+2,f
  2023  0068  2863               	goto	u1717
  2024                           
  2025                           ;Main.c: 239: rfid_flag=0;
  2026  0069  1076               	bcf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  2027  006A                     l4416:	
  2028                           
  2029                           ;Main.c: 240: }
  2030                           ;Main.c: 241: RFID_read();
  2031  006A  120A  158A  256C   	fcall	_RFID_read
      +       120A  118A         
  2032                           
  2033                           ;Main.c: 242: lcdcmd(0xD4);
  2034  006F  30D4               	movlw	212
  2035  0070  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2036                           
  2037                           ;Main.c: 243: lcdstring(sms);
  2038  0075  30C7               	movlw	_sms& (0+255)
  2039  0076  00D8               	movwf	?_lcdstring
  2040  0077  01D9               	clrf	?_lcdstring+1
  2041  0078  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2042                           
  2043                           ;Main.c: 246: if(strcmp(card_store,User1)==0)
  2044  007D  30A0               	movlw	_User1& (0+255)
  2045  007E  00D3               	movwf	?_strcmp
  2046  007F  3037               	movlw	_card_store& (0+255)
  2047  0080  120A  158A  2499   	fcall	_strcmp
      +       120A  118A         
  2048  0085  0854               	movf	?_strcmp+1,w
  2049  0086  0453               	iorwf	?_strcmp,w
  2050  0087  1D03               	skipz
  2051  0088  288E               	goto	l4428
  2052                           
  2053                           ;Main.c: 247: {
  2054                           ;Main.c: 248: User=1;
  2055  0089  01A6               	clrf	_User
  2056  008A  0AA6               	incf	_User,f
  2057  008B                     L1:	
  2058  008B  01A7               	clrf	_User+1
  2059                           
  2060                           ;Main.c: 249: card_store[0]=0;
  2061  008C  01B7               	clrf	_card_store
  2062                           
  2063                           ;Main.c: 250: }
  2064  008D  2C67               	goto	l4624
  2065  008E                     l4428:	
  2066                           
  2067                           ;Main.c: 251: else if(strcmp(card_store,User2)==0)
  2068  008E  30AD               	movlw	_User2& (0+255)
  2069  008F  00D3               	movwf	?_strcmp
  2070  0090  3037               	movlw	_card_store& (0+255)
  2071  0091  120A  158A  2499   	fcall	_strcmp
      +       120A  118A         
  2072  0096  0854               	movf	?_strcmp+1,w
  2073  0097  0453               	iorwf	?_strcmp,w
  2074  0098  1D03               	skipz
  2075  0099  289C               	goto	l4434
  2076                           
  2077                           ;Main.c: 252: {
  2078                           ;Main.c: 253: User=2;
  2079  009A  3002               	movlw	2
  2080  009B  28A9               	goto	L3
  2081  009C                     l4434:	
  2082                           
  2083                           ;Main.c: 256: else if(strcmp(card_store,User3)==0)
  2084  009C  30BA               	movlw	_User3& (0+255)
  2085  009D  00D3               	movwf	?_strcmp
  2086  009E  3037               	movlw	_card_store& (0+255)
  2087  009F  120A  158A  2499   	fcall	_strcmp
      +       120A  118A         
  2088  00A4  0854               	movf	?_strcmp+1,w
  2089  00A5  0453               	iorwf	?_strcmp,w
  2090  00A6  1D03               	skipz
  2091  00A7  2C67               	goto	l4624
  2092                           
  2093                           ;Main.c: 257: {
  2094                           ;Main.c: 258: User=3;
  2095  00A8  3003               	movlw	3
  2096  00A9                     L3:	
  2097  00A9  00A6               	movwf	_User
  2098  00AA  288B               	goto	L1
  2099  00AB                     l4440:	
  2100                           ;Main.c: 260: }
  2101                           ;Main.c: 262: switch(User)
  2102                           
  2103                           
  2104                           ;Main.c: 265: {
  2105                           ;Main.c: 266: ReadAmnt();
  2106  00AB  120A  158A  25EB   	fcall	_ReadAmnt
      +       120A  118A         
  2107                           
  2108                           ;Main.c: 267: lcdcmd(0x80);
  2109  00B0  3080               	movlw	128
  2110  00B1  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2111                           
  2112                           ;Main.c: 268: lcdstring("USER1 AMOUNT:       ");
  2113  00B6  30DB               	movlw	low (STR_36| (0+32768))
  2114  00B7  00D8               	movwf	?_lcdstring
  2115  00B8  3090               	movlw	high (STR_36| (0+32768))
  2116  00B9  00D9               	movwf	?_lcdstring+1
  2117  00BA  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2118                           
  2119                           ;Main.c: 269: DisplayAmnt(0X8D,User1amt);
  2120  00BF  0829               	movf	_User1amt+1,w
  2121  00C0  00E2               	movwf	?_DisplayAmnt+1
  2122  00C1  0828               	movf	_User1amt,w
  2123  00C2  00E1               	movwf	?_DisplayAmnt
  2124  00C3  308D               	movlw	141
  2125  00C4  120A  118A  265A   	fcall	_DisplayAmnt
      +       120A  118A         
  2126                           
  2127                           ;Main.c: 270: lcdcmd(0xC0);
  2128  00C9  30C0               	movlw	192
  2129  00CA  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2130                           
  2131                           ;Main.c: 271: lcdstring("RISE:   Kg          ");
  2132  00CF  30B1               	movlw	low (STR_37| (0+32768))
  2133  00D0  00D8               	movwf	?_lcdstring
  2134  00D1  3090               	movlw	high (STR_37| (0+32768))
  2135  00D2  00D9               	movwf	?_lcdstring+1
  2136  00D3  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2137                           
  2138                           ;Main.c: 272: DisplayRise(0XC5,User1Rise);
  2139  00D8  082F               	movf	_User1Rise,w
  2140  00D9  00D8               	movwf	?_DisplayRise
  2141  00DA  30C5               	movlw	197
  2142  00DB  120A  118A  2501   	fcall	_DisplayRise
      +       120A  118A         
  2143                           
  2144                           ;Main.c: 273: lcdcmd(0x94);
  2145  00E0  3094               	movlw	148
  2146  00E1  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2147                           
  2148                           ;Main.c: 274: lcdstring("SUGAR:   Kg         ");
  2149  00E6  30C6               	movlw	low (STR_38| (0+32768))
  2150  00E7  00D8               	movwf	?_lcdstring
  2151  00E8  3090               	movlw	high (STR_38| (0+32768))
  2152  00E9  00D9               	movwf	?_lcdstring+1
  2153  00EA  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2154                           
  2155                           ;Main.c: 275: DisplaySugar(0x9A,User1Sugar);
  2156  00EF  0830               	movf	_User1Sugar,w
  2157  00F0  00D8               	movwf	?_DisplaySugar
  2158  00F1  309A               	movlw	154
  2159  00F2  120A  118A  2525   	fcall	_DisplaySugar
      +       120A  118A         
  2160                           
  2161                           ;Main.c: 276: lcdcmd(0xD4);
  2162  00F7  30D4               	movlw	212
  2163  00F8  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2164                           
  2165                           ;Main.c: 277: lcdstring("KEROSENE:   Lts     ");
  2166  00FD  302F               	movlw	low (STR_39| (0+32768))
  2167  00FE  00D8               	movwf	?_lcdstring
  2168  00FF  3091               	movlw	high (STR_39| (0+32768))
  2169  0100  00D9               	movwf	?_lcdstring+1
  2170  0101  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2171                           
  2172                           ;Main.c: 278: DisplayKerosene(0XDD,User1Kerosene);
  2173  0106  082E               	movf	_User1Kerosene,w
  2174  0107  00D8               	movwf	?_DisplayKerosene
  2175  0108  30DD               	movlw	221
  2176  0109  120A  118A  24DD   	fcall	_DisplayKerosene
      +       120A  118A         
  2177                           
  2178                           ;Main.c: 279: _delay((unsigned long)((2000)*(20000000/4000.0)));
  2179  010E  3033               	movlw	51
  2180  010F  00E8               	movwf	??_main+2
  2181  0110  3089               	movlw	137
  2182  0111  00E7               	movwf	??_main+1
  2183  0112  3000               	movlw	256
  2184  0113  00E6               	movwf	??_main
  2185  0114                     u1727:	
  2186  0114  0BE6               	decfsz	??_main,f
  2187  0115  2914               	goto	u1727
  2188  0116  0BE7               	decfsz	??_main+1,f
  2189  0117  2914               	goto	u1727
  2190  0118  0BE8               	decfsz	??_main+2,f
  2191  0119  2914               	goto	u1727
  2192                           
  2193                           ;Main.c: 280: RiseStock=RiseStock-User1Rise;
  2194  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2195  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2196  011C  082F               	movf	_User1Rise,w
  2197  011D  02A2               	subwf	_RiseStock,f
  2198  011E  1C03               	skipc
  2199  011F  03A3               	decf	_RiseStock+1,f
  2200                           
  2201                           ;Main.c: 281: SugarStock=SugarStock-User1Sugar;
  2202  0120  0830               	movf	_User1Sugar,w
  2203  0121  02A4               	subwf	_SugarStock,f
  2204  0122  1C03               	skipc
  2205  0123  03A5               	decf	_SugarStock+1,f
  2206                           
  2207                           ;Main.c: 282: KeroseneStock=KeroseneStock-User1Kerosene;
  2208  0124  082E               	movf	_User1Kerosene,w
  2209  0125  02A0               	subwf	_KeroseneStock,f
  2210  0126  1C03               	skipc
  2211  0127  03A1               	decf	_KeroseneStock+1,f
  2212                           
  2213                           ;Main.c: 283: eeprom_write(24,RiseStock/100);
  2214  0128  3064               	movlw	100
  2215  0129  00D8               	movwf	?___lwdiv
  2216  012A  01D9               	clrf	?___lwdiv+1
  2217  012B  0823               	movf	_RiseStock+1,w
  2218  012C  00DB               	movwf	?___lwdiv+3
  2219  012D  0822               	movf	_RiseStock,w
  2220  012E  00DA               	movwf	?___lwdiv+2
  2221  012F  120A  158A  27A2   	fcall	___lwdiv
      +       120A  118A         
  2222  0134  0858               	movf	?___lwdiv,w
  2223  0135  00E1               	movwf	?_eeprom_write
  2224  0136  3018               	movlw	24
  2225  0137  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2226                           
  2227                           ;Main.c: 284: eeprom_write(25,RiseStock%100);
  2228  013C  3064               	movlw	100
  2229  013D  1283               	bcf	3,5	;RP0=0, select bank0
  2230  013E  1303               	bcf	3,6	;RP1=0, select bank0
  2231  013F  00D3               	movwf	?___lwmod
  2232  0140  01D4               	clrf	?___lwmod+1
  2233  0141  0823               	movf	_RiseStock+1,w
  2234  0142  00D6               	movwf	?___lwmod+3
  2235  0143  0822               	movf	_RiseStock,w
  2236  0144  00D5               	movwf	?___lwmod+2
  2237  0145  120A  158A  277E   	fcall	___lwmod
      +       120A  118A         
  2238  014A  0853               	movf	?___lwmod,w
  2239  014B  00E1               	movwf	?_eeprom_write
  2240  014C  3019               	movlw	25
  2241  014D  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2242                           
  2243                           ;Main.c: 285: eeprom_write(26,SugarStock);
  2244  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0153  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0154  0824               	movf	_SugarStock,w
  2247  0155  00E1               	movwf	?_eeprom_write
  2248  0156  301A               	movlw	26
  2249  0157  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2250                           
  2251                           ;Main.c: 286: eeprom_write(27,KeroseneStock);
  2252  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2253  015D  1303               	bcf	3,6	;RP1=0, select bank0
  2254  015E  0820               	movf	_KeroseneStock,w
  2255  015F  00E1               	movwf	?_eeprom_write
  2256  0160  301B               	movlw	27
  2257  0161  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2258                           
  2259                           ;Main.c: 287: User1amt = User1amt-50;
  2260  0166  30CE               	movlw	-50
  2261  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0169  07A8               	addwf	_User1amt,f
  2264  016A  1C03               	skipc
  2265  016B  03A9               	decf	_User1amt+1,f
  2266                           
  2267                           ;Main.c: 291: eeprom_write(0,User1amt/100);
  2268  016C  3064               	movlw	100
  2269  016D  00D9               	movwf	?___awdiv
  2270  016E  01DA               	clrf	?___awdiv+1
  2271  016F  0829               	movf	_User1amt+1,w
  2272  0170  00DC               	movwf	?___awdiv+3
  2273  0171  0828               	movf	_User1amt,w
  2274  0172  00DB               	movwf	?___awdiv+2
  2275  0173  120A  118A  272D   	fcall	___awdiv
      +       120A  118A         
  2276  0178  0859               	movf	?___awdiv,w
  2277  0179  00E1               	movwf	?_eeprom_write
  2278  017A  3000               	movlw	0
  2279  017B  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2280                           
  2281                           ;Main.c: 292: eeprom_write(1,User1amt%100);
  2282  0180  3064               	movlw	100
  2283  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0183  00D3               	movwf	?___awmod
  2286  0184  01D4               	clrf	?___awmod+1
  2287  0185  0829               	movf	_User1amt+1,w
  2288  0186  00D6               	movwf	?___awmod+3
  2289  0187  0828               	movf	_User1amt,w
  2290  0188  00D5               	movwf	?___awmod+2
  2291  0189  120A  118A  26D7   	fcall	___awmod
      +       120A  118A         
  2292  018E  0853               	movf	?___awmod,w
  2293  018F  00E1               	movwf	?_eeprom_write
  2294  0190  3001               	movlw	1
  2295  0191  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2296                           
  2297                           ;Main.c: 293: eeprom_write(2,User1Rise);
  2298  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0198  082F               	movf	_User1Rise,w
  2301  0199  00E1               	movwf	?_eeprom_write
  2302  019A  3002               	movlw	2
  2303  019B  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2304                           
  2305                           ;Main.c: 294: eeprom_write(3,User1Sugar);
  2306  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2307  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2308  01A2  0830               	movf	_User1Sugar,w
  2309  01A3  00E1               	movwf	?_eeprom_write
  2310  01A4  3003               	movlw	3
  2311  01A5  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2312                           
  2313                           ;Main.c: 295: eeprom_write(4,User1Kerosene);
  2314  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2315  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2316  01AC  082E               	movf	_User1Kerosene,w
  2317  01AD  00E1               	movwf	?_eeprom_write
  2318  01AE  3004               	movlw	4
  2319  01AF  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2320                           
  2321                           ;Main.c: 297: lcdcmd(0x01);
  2322  01B4  3001               	movlw	1
  2323  01B5                     L2:	
  2324  01B5  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2325                           
  2326                           ;Main.c: 298: lcdstring(" PLEASE KEEP YOUR");
  2327  01BA  3014               	movlw	low (STR_40| (0+32768))
  2328  01BB  00D8               	movwf	?_lcdstring
  2329  01BC  3092               	movlw	high (STR_40| (0+32768))
  2330  01BD  00D9               	movwf	?_lcdstring+1
  2331  01BE  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2332                           
  2333                           ;Main.c: 299: lcdcmd(0xC0);
  2334  01C3  30C0               	movlw	192
  2335  01C4  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2336                           
  2337                           ;Main.c: 300: lcdstring(" CAN ON KEROSENE ");
  2338  01C9  30F0               	movlw	low (STR_41| (0+32768))
  2339  01CA  00D8               	movwf	?_lcdstring
  2340  01CB  3091               	movlw	high (STR_41| (0+32768))
  2341  01CC  00D9               	movwf	?_lcdstring+1
  2342  01CD  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2343                           
  2344                           ;Main.c: 301: lcdcmd(0x94);
  2345  01D2  3094               	movlw	148
  2346  01D3  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2347                           
  2348                           ;Main.c: 302: lcdstring("      VOLUE      ");
  2349  01D8  30BA               	movlw	low (STR_42| (0+32768))
  2350  01D9  00D8               	movwf	?_lcdstring
  2351  01DA  3091               	movlw	high (STR_42| (0+32768))
  2352  01DB  00D9               	movwf	?_lcdstring+1
  2353  01DC  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2354                           
  2355                           ;Main.c: 303: _delay((unsigned long)((200)*(20000000/4000.0)));
  2356  01E1  3006               	movlw	6
  2357  01E2  00E8               	movwf	??_main+2
  2358  01E3  300E               	movlw	14
  2359  01E4  00E7               	movwf	??_main+1
  2360  01E5  30B0               	movlw	176
  2361  01E6  00E6               	movwf	??_main
  2362  01E7                     u1737:	
  2363  01E7  0BE6               	decfsz	??_main,f
  2364  01E8  29E7               	goto	u1737
  2365  01E9  0BE7               	decfsz	??_main+1,f
  2366  01EA  29E7               	goto	u1737
  2367  01EB  0BE8               	decfsz	??_main+2,f
  2368  01EC  29E7               	goto	u1737
  2369                           
  2370                           ;Main.c: 304: RC4 = 0;
  2371  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2372  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2373  01EF  1207               	bcf	7,4
  2374                           
  2375                           ;Main.c: 305: _delay((unsigned long)((5000)*(20000000/4000.0)));
  2376  01F0  307F               	movlw	127
  2377  01F1  00E8               	movwf	??_main+2
  2378  01F2  3056               	movlw	86
  2379  01F3  00E7               	movwf	??_main+1
  2380  01F4  3084               	movlw	132
  2381  01F5  00E6               	movwf	??_main
  2382  01F6                     u1747:	
  2383  01F6  0BE6               	decfsz	??_main,f
  2384  01F7  29F6               	goto	u1747
  2385  01F8  0BE7               	decfsz	??_main+1,f
  2386  01F9  29F6               	goto	u1747
  2387  01FA  0BE8               	decfsz	??_main+2,f
  2388  01FB  29F6               	goto	u1747
  2389  01FC  29FD               	nop2
  2390  01FD                     l4496:	
  2391                           
  2392                           ;Main.c: 306: RC4 = 1;
  2393  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2394  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2395  01FF  1607               	bsf	7,4
  2396                           
  2397                           ;Main.c: 307: User=0;
  2398  0200  01A6               	clrf	_User
  2399  0201  01A7               	clrf	_User+1
  2400                           
  2401                           ;Main.c: 308: break;
  2402  0202  2C75               	goto	l4626
  2403  0203                     l4500:	
  2404                           
  2405                           ;Main.c: 311: {
  2406                           ;Main.c: 312: ReadAmnt();
  2407  0203  120A  158A  25EB   	fcall	_ReadAmnt
      +       120A  118A         
  2408                           
  2409                           ;Main.c: 313: lcdcmd(0x80);
  2410  0208  3080               	movlw	128
  2411  0209  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2412                           
  2413                           ;Main.c: 314: lcdstring("USER2 AMOUNT:       ");
  2414  020E  30F0               	movlw	low (STR_43| (0+32768))
  2415  020F  00D8               	movwf	?_lcdstring
  2416  0210  3090               	movlw	high (STR_43| (0+32768))
  2417  0211  00D9               	movwf	?_lcdstring+1
  2418  0212  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2419                           
  2420                           ;Main.c: 315: DisplayAmnt(0X8D,User2amt);
  2421  0217  082B               	movf	_User2amt+1,w
  2422  0218  00E2               	movwf	?_DisplayAmnt+1
  2423  0219  082A               	movf	_User2amt,w
  2424  021A  00E1               	movwf	?_DisplayAmnt
  2425  021B  308D               	movlw	141
  2426  021C  120A  118A  265A   	fcall	_DisplayAmnt
      +       120A  118A         
  2427                           
  2428                           ;Main.c: 316: lcdcmd(0xC0);
  2429  0221  30C0               	movlw	192
  2430  0222  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2431                           
  2432                           ;Main.c: 317: lcdstring("RISE:   Kg          ");
  2433  0227  30B1               	movlw	low (STR_37| (0+32768))
  2434  0228  00D8               	movwf	?_lcdstring
  2435  0229  3090               	movlw	high (STR_37| (0+32768))
  2436  022A  00D9               	movwf	?_lcdstring+1
  2437  022B  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2438                           
  2439                           ;Main.c: 318: DisplayRise(0XC5,User2Rise);
  2440  0230  0832               	movf	_User2Rise,w
  2441  0231  00D8               	movwf	?_DisplayRise
  2442  0232  30C5               	movlw	197
  2443  0233  120A  118A  2501   	fcall	_DisplayRise
      +       120A  118A         
  2444                           
  2445                           ;Main.c: 319: lcdcmd(0x94);
  2446  0238  3094               	movlw	148
  2447  0239  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2448                           
  2449                           ;Main.c: 320: lcdstring("SUGAR:   Kg         ");
  2450  023E  30C6               	movlw	low (STR_38| (0+32768))
  2451  023F  00D8               	movwf	?_lcdstring
  2452  0240  3090               	movlw	high (STR_38| (0+32768))
  2453  0241  00D9               	movwf	?_lcdstring+1
  2454  0242  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2455                           
  2456                           ;Main.c: 321: DisplaySugar(0x9A,User2Sugar);
  2457  0247  0833               	movf	_User2Sugar,w
  2458  0248  00D8               	movwf	?_DisplaySugar
  2459  0249  309A               	movlw	154
  2460  024A  120A  118A  2525   	fcall	_DisplaySugar
      +       120A  118A         
  2461                           
  2462                           ;Main.c: 322: lcdcmd(0xD4);
  2463  024F  30D4               	movlw	212
  2464  0250  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2465                           
  2466                           ;Main.c: 323: lcdstring("KEROSENE:   Lts     ");
  2467  0255  302F               	movlw	low (STR_39| (0+32768))
  2468  0256  00D8               	movwf	?_lcdstring
  2469  0257  3091               	movlw	high (STR_39| (0+32768))
  2470  0258  00D9               	movwf	?_lcdstring+1
  2471  0259  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2472                           
  2473                           ;Main.c: 324: DisplayKerosene(0XDD,User2Kerosene);
  2474  025E  0831               	movf	_User2Kerosene,w
  2475  025F  00D8               	movwf	?_DisplayKerosene
  2476  0260  30DD               	movlw	221
  2477  0261  120A  118A  24DD   	fcall	_DisplayKerosene
      +       120A  118A         
  2478                           
  2479                           ;Main.c: 325: _delay((unsigned long)((2000)*(20000000/4000.0)));
  2480  0266  3033               	movlw	51
  2481  0267  00E8               	movwf	??_main+2
  2482  0268  3089               	movlw	137
  2483  0269  00E7               	movwf	??_main+1
  2484  026A  3000               	movlw	256
  2485  026B  00E6               	movwf	??_main
  2486  026C                     u1757:	
  2487  026C  0BE6               	decfsz	??_main,f
  2488  026D  2A6C               	goto	u1757
  2489  026E  0BE7               	decfsz	??_main+1,f
  2490  026F  2A6C               	goto	u1757
  2491  0270  0BE8               	decfsz	??_main+2,f
  2492  0271  2A6C               	goto	u1757
  2493                           
  2494                           ;Main.c: 326: RiseStock=RiseStock-User2Rise;
  2495  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0274  0832               	movf	_User2Rise,w
  2498  0275  02A2               	subwf	_RiseStock,f
  2499  0276  1C03               	skipc
  2500  0277  03A3               	decf	_RiseStock+1,f
  2501                           
  2502                           ;Main.c: 327: SugarStock=SugarStock-User2Sugar;
  2503  0278  0833               	movf	_User2Sugar,w
  2504  0279  02A4               	subwf	_SugarStock,f
  2505  027A  1C03               	skipc
  2506  027B  03A5               	decf	_SugarStock+1,f
  2507                           
  2508                           ;Main.c: 328: KeroseneStock=KeroseneStock-User2Kerosene;
  2509  027C  0831               	movf	_User2Kerosene,w
  2510  027D  02A0               	subwf	_KeroseneStock,f
  2511  027E  1C03               	skipc
  2512  027F  03A1               	decf	_KeroseneStock+1,f
  2513                           
  2514                           ;Main.c: 329: eeprom_write(24,RiseStock/100);
  2515  0280  3064               	movlw	100
  2516  0281  00D8               	movwf	?___lwdiv
  2517  0282  01D9               	clrf	?___lwdiv+1
  2518  0283  0823               	movf	_RiseStock+1,w
  2519  0284  00DB               	movwf	?___lwdiv+3
  2520  0285  0822               	movf	_RiseStock,w
  2521  0286  00DA               	movwf	?___lwdiv+2
  2522  0287  120A  158A  27A2   	fcall	___lwdiv
      +       120A  118A         
  2523  028C  0858               	movf	?___lwdiv,w
  2524  028D  00E1               	movwf	?_eeprom_write
  2525  028E  3018               	movlw	24
  2526  028F  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2527                           
  2528                           ;Main.c: 330: eeprom_write(25,RiseStock%100);
  2529  0294  3064               	movlw	100
  2530  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0297  00D3               	movwf	?___lwmod
  2533  0298  01D4               	clrf	?___lwmod+1
  2534  0299  0823               	movf	_RiseStock+1,w
  2535  029A  00D6               	movwf	?___lwmod+3
  2536  029B  0822               	movf	_RiseStock,w
  2537  029C  00D5               	movwf	?___lwmod+2
  2538  029D  120A  158A  277E   	fcall	___lwmod
      +       120A  118A         
  2539  02A2  0853               	movf	?___lwmod,w
  2540  02A3  00E1               	movwf	?_eeprom_write
  2541  02A4  3019               	movlw	25
  2542  02A5  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2543                           
  2544                           ;Main.c: 331: eeprom_write(26,SugarStock);
  2545  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2546  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2547  02AC  0824               	movf	_SugarStock,w
  2548  02AD  00E1               	movwf	?_eeprom_write
  2549  02AE  301A               	movlw	26
  2550  02AF  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2551                           
  2552                           ;Main.c: 332: eeprom_write(27,KeroseneStock);
  2553  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2554  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2555  02B6  0820               	movf	_KeroseneStock,w
  2556  02B7  00E1               	movwf	?_eeprom_write
  2557  02B8  301B               	movlw	27
  2558  02B9  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2559                           
  2560                           ;Main.c: 333: User2amt = User2amt-30;
  2561  02BE  30E2               	movlw	-30
  2562  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2563  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2564  02C1  07AA               	addwf	_User2amt,f
  2565  02C2  1C03               	skipc
  2566  02C3  03AB               	decf	_User2amt+1,f
  2567                           
  2568                           ;Main.c: 337: eeprom_write(8,User2amt/100);
  2569  02C4  3064               	movlw	100
  2570  02C5  00D9               	movwf	?___awdiv
  2571  02C6  01DA               	clrf	?___awdiv+1
  2572  02C7  082B               	movf	_User2amt+1,w
  2573  02C8  00DC               	movwf	?___awdiv+3
  2574  02C9  082A               	movf	_User2amt,w
  2575  02CA  00DB               	movwf	?___awdiv+2
  2576  02CB  120A  118A  272D   	fcall	___awdiv
      +       120A  118A         
  2577  02D0  0859               	movf	?___awdiv,w
  2578  02D1  00E1               	movwf	?_eeprom_write
  2579  02D2  3008               	movlw	8
  2580  02D3  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2581                           
  2582                           ;Main.c: 338: eeprom_write(9,User2amt%100);
  2583  02D8  3064               	movlw	100
  2584  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2585  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2586  02DB  00D3               	movwf	?___awmod
  2587  02DC  01D4               	clrf	?___awmod+1
  2588  02DD  082B               	movf	_User2amt+1,w
  2589  02DE  00D6               	movwf	?___awmod+3
  2590  02DF  082A               	movf	_User2amt,w
  2591  02E0  00D5               	movwf	?___awmod+2
  2592  02E1  120A  118A  26D7   	fcall	___awmod
      +       120A  118A         
  2593  02E6  0853               	movf	?___awmod,w
  2594  02E7  00E1               	movwf	?_eeprom_write
  2595  02E8  3009               	movlw	9
  2596  02E9  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2597                           
  2598                           ;Main.c: 339: eeprom_write(10,User2Rise);
  2599  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02F0  0832               	movf	_User2Rise,w
  2602  02F1  00E1               	movwf	?_eeprom_write
  2603  02F2  300A               	movlw	10
  2604  02F3  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2605                           
  2606                           ;Main.c: 340: eeprom_write(11,User2Sugar);
  2607  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2608  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2609  02FA  0833               	movf	_User2Sugar,w
  2610  02FB  00E1               	movwf	?_eeprom_write
  2611  02FC  300B               	movlw	11
  2612  02FD  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2613                           
  2614                           ;Main.c: 341: eeprom_write(12,User2Kerosene);
  2615  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0304  0831               	movf	_User2Kerosene,w
  2618  0305  00E1               	movwf	?_eeprom_write
  2619  0306  300C               	movlw	12
  2620  0307  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2621                           
  2622                           ;Main.c: 343: lcdcmd(0x01);
  2623  030C  3001               	movlw	1
  2624  030D  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2625                           
  2626                           ;Main.c: 344: lcdstring(" PLEASE KEEP YOUR");
  2627  0312  3014               	movlw	low (STR_40| (0+32768))
  2628  0313  00D8               	movwf	?_lcdstring
  2629  0314  3092               	movlw	high (STR_40| (0+32768))
  2630  0315  00D9               	movwf	?_lcdstring+1
  2631  0316  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2632                           
  2633                           ;Main.c: 345: lcdcmd(0xC0);
  2634  031B  30C0               	movlw	192
  2635  031C  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2636                           
  2637                           ;Main.c: 346: lcdstring(" CAN ON KEROSENE ");
  2638  0321  30F0               	movlw	low (STR_41| (0+32768))
  2639  0322  00D8               	movwf	?_lcdstring
  2640  0323  3091               	movlw	high (STR_41| (0+32768))
  2641  0324  00D9               	movwf	?_lcdstring+1
  2642  0325  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2643                           
  2644                           ;Main.c: 347: lcdcmd(0x94);
  2645  032A  3094               	movlw	148
  2646  032B  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2647                           
  2648                           ;Main.c: 348: lcdstring("      VOLUE      ");
  2649  0330  30BA               	movlw	low (STR_42| (0+32768))
  2650  0331  00D8               	movwf	?_lcdstring
  2651  0332  3091               	movlw	high (STR_42| (0+32768))
  2652  0333  00D9               	movwf	?_lcdstring+1
  2653  0334  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2654                           
  2655                           ;Main.c: 349: _delay((unsigned long)((200)*(20000000/4000.0)));
  2656  0339  3006               	movlw	6
  2657  033A  00E8               	movwf	??_main+2
  2658  033B  300E               	movlw	14
  2659  033C  00E7               	movwf	??_main+1
  2660  033D  30B0               	movlw	176
  2661  033E  00E6               	movwf	??_main
  2662  033F                     u1767:	
  2663  033F  0BE6               	decfsz	??_main,f
  2664  0340  2B3F               	goto	u1767
  2665  0341  0BE7               	decfsz	??_main+1,f
  2666  0342  2B3F               	goto	u1767
  2667  0343  0BE8               	decfsz	??_main+2,f
  2668  0344  2B3F               	goto	u1767
  2669                           
  2670                           ;Main.c: 350: RC4 = 0;
  2671  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0347  1207               	bcf	7,4
  2674                           
  2675                           ;Main.c: 351: _delay((unsigned long)((8000)*(20000000/4000.0)));
  2676  0348  30CB               	movlw	203
  2677  0349  00E8               	movwf	??_main+2
  2678  034A  3023               	movlw	35
  2679  034B  00E7               	movwf	??_main+1
  2680  034C  3009               	movlw	9
  2681  034D  00E6               	movwf	??_main
  2682  034E                     u1777:	
  2683  034E  0BE6               	decfsz	??_main,f
  2684  034F  2B4E               	goto	u1777
  2685  0350  0BE7               	decfsz	??_main+1,f
  2686  0351  2B4E               	goto	u1777
  2687  0352  0BE8               	decfsz	??_main+2,f
  2688  0353  2B4E               	goto	u1777
  2689  0354  0064               	clrwdt
  2690  0355  29FD               	goto	l4496
  2691  0356                     l4560:	
  2692                           
  2693                           ;Main.c: 357: {
  2694                           ;Main.c: 358: ReadAmnt();
  2695  0356  120A  158A  25EB   	fcall	_ReadAmnt
      +       120A  118A         
  2696                           
  2697                           ;Main.c: 359: lcdcmd(0x80);
  2698  035B  3080               	movlw	128
  2699  035C  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2700                           
  2701                           ;Main.c: 360: lcdstring("USER3 AMOUNT:       ");
  2702  0361  3005               	movlw	low (STR_50| (0+32768))
  2703  0362  00D8               	movwf	?_lcdstring
  2704  0363  3091               	movlw	high (STR_50| (0+32768))
  2705  0364  00D9               	movwf	?_lcdstring+1
  2706  0365  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2707                           
  2708                           ;Main.c: 361: DisplayAmnt(0X8D,User3amt);
  2709  036A  082D               	movf	_User3amt+1,w
  2710  036B  00E2               	movwf	?_DisplayAmnt+1
  2711  036C  082C               	movf	_User3amt,w
  2712  036D  00E1               	movwf	?_DisplayAmnt
  2713  036E  308D               	movlw	141
  2714  036F  120A  118A  265A   	fcall	_DisplayAmnt
      +       120A  118A         
  2715                           
  2716                           ;Main.c: 362: lcdcmd(0xC0);
  2717  0374  30C0               	movlw	192
  2718  0375  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2719                           
  2720                           ;Main.c: 363: lcdstring("RISE:   Kg          ");
  2721  037A  30B1               	movlw	low (STR_37| (0+32768))
  2722  037B  00D8               	movwf	?_lcdstring
  2723  037C  3090               	movlw	high (STR_37| (0+32768))
  2724  037D  00D9               	movwf	?_lcdstring+1
  2725  037E  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2726                           
  2727                           ;Main.c: 364: DisplayRise(0XC5,User3Rise);
  2728  0383  0835               	movf	_User3Rise,w
  2729  0384  00D8               	movwf	?_DisplayRise
  2730  0385  30C5               	movlw	197
  2731  0386  120A  118A  2501   	fcall	_DisplayRise
      +       120A  118A         
  2732                           
  2733                           ;Main.c: 365: lcdcmd(0x94);
  2734  038B  3094               	movlw	148
  2735  038C  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2736                           
  2737                           ;Main.c: 366: lcdstring("SUGAR:   Kg         ");
  2738  0391  30C6               	movlw	low (STR_38| (0+32768))
  2739  0392  00D8               	movwf	?_lcdstring
  2740  0393  3090               	movlw	high (STR_38| (0+32768))
  2741  0394  00D9               	movwf	?_lcdstring+1
  2742  0395  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2743                           
  2744                           ;Main.c: 367: DisplaySugar(0x9A,User3Sugar);
  2745  039A  0836               	movf	_User3Sugar,w
  2746  039B  00D8               	movwf	?_DisplaySugar
  2747  039C  309A               	movlw	154
  2748  039D  120A  118A  2525   	fcall	_DisplaySugar
      +       120A  118A         
  2749                           
  2750                           ;Main.c: 368: lcdcmd(0xD4);
  2751  03A2  30D4               	movlw	212
  2752  03A3  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2753                           
  2754                           ;Main.c: 369: lcdstring("KEROSENE:   Lts     ");
  2755  03A8  302F               	movlw	low (STR_39| (0+32768))
  2756  03A9  00D8               	movwf	?_lcdstring
  2757  03AA  3091               	movlw	high (STR_39| (0+32768))
  2758  03AB  00D9               	movwf	?_lcdstring+1
  2759  03AC  120A  118A  263E   	fcall	_lcdstring
      +       120A  118A         
  2760                           
  2761                           ;Main.c: 370: DisplayKerosene(0XDD,User3Kerosene);
  2762  03B1  0834               	movf	_User3Kerosene,w
  2763  03B2  00D8               	movwf	?_DisplayKerosene
  2764  03B3  30DD               	movlw	221
  2765  03B4  120A  118A  24DD   	fcall	_DisplayKerosene
      +       120A  118A         
  2766                           
  2767                           ;Main.c: 371: _delay((unsigned long)((2000)*(20000000/4000.0)));
  2768  03B9  3033               	movlw	51
  2769  03BA  00E8               	movwf	??_main+2
  2770  03BB  3089               	movlw	137
  2771  03BC  00E7               	movwf	??_main+1
  2772  03BD  3000               	movlw	256
  2773  03BE  00E6               	movwf	??_main
  2774  03BF                     u1787:	
  2775  03BF  0BE6               	decfsz	??_main,f
  2776  03C0  2BBF               	goto	u1787
  2777  03C1  0BE7               	decfsz	??_main+1,f
  2778  03C2  2BBF               	goto	u1787
  2779  03C3  0BE8               	decfsz	??_main+2,f
  2780  03C4  2BBF               	goto	u1787
  2781                           
  2782                           ;Main.c: 372: RiseStock=RiseStock-User3Rise;
  2783  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2784  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2785  03C7  0835               	movf	_User3Rise,w
  2786  03C8  02A2               	subwf	_RiseStock,f
  2787  03C9  1C03               	skipc
  2788  03CA  03A3               	decf	_RiseStock+1,f
  2789                           
  2790                           ;Main.c: 373: SugarStock=SugarStock-User3Sugar;
  2791  03CB  0836               	movf	_User3Sugar,w
  2792  03CC  02A4               	subwf	_SugarStock,f
  2793  03CD  1C03               	skipc
  2794  03CE  03A5               	decf	_SugarStock+1,f
  2795                           
  2796                           ;Main.c: 374: KeroseneStock=KeroseneStock-User3Kerosene;
  2797  03CF  0834               	movf	_User3Kerosene,w
  2798  03D0  02A0               	subwf	_KeroseneStock,f
  2799  03D1  1C03               	skipc
  2800  03D2  03A1               	decf	_KeroseneStock+1,f
  2801                           
  2802                           ;Main.c: 375: eeprom_write(24,RiseStock/100);
  2803  03D3  3064               	movlw	100
  2804  03D4  00D8               	movwf	?___lwdiv
  2805  03D5  01D9               	clrf	?___lwdiv+1
  2806  03D6  0823               	movf	_RiseStock+1,w
  2807  03D7  00DB               	movwf	?___lwdiv+3
  2808  03D8  0822               	movf	_RiseStock,w
  2809  03D9  00DA               	movwf	?___lwdiv+2
  2810  03DA  120A  158A  27A2   	fcall	___lwdiv
      +       120A  118A         
  2811  03DF  0858               	movf	?___lwdiv,w
  2812  03E0  00E1               	movwf	?_eeprom_write
  2813  03E1  3018               	movlw	24
  2814  03E2  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2815                           
  2816                           ;Main.c: 376: eeprom_write(25,RiseStock%100);
  2817  03E7  3064               	movlw	100
  2818  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2819  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2820  03EA  00D3               	movwf	?___lwmod
  2821  03EB  01D4               	clrf	?___lwmod+1
  2822  03EC  0823               	movf	_RiseStock+1,w
  2823  03ED  00D6               	movwf	?___lwmod+3
  2824  03EE  0822               	movf	_RiseStock,w
  2825  03EF  00D5               	movwf	?___lwmod+2
  2826  03F0  120A  158A  277E   	fcall	___lwmod
      +       120A  118A         
  2827  03F5  0853               	movf	?___lwmod,w
  2828  03F6  00E1               	movwf	?_eeprom_write
  2829  03F7  3019               	movlw	25
  2830  03F8  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2831                           
  2832                           ;Main.c: 377: eeprom_write(26,SugarStock);
  2833  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2834  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2835  03FF  0824               	movf	_SugarStock,w
  2836  0400  00E1               	movwf	?_eeprom_write
  2837  0401  301A               	movlw	26
  2838  0402  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2839                           
  2840                           ;Main.c: 378: eeprom_write(27,KeroseneStock);
  2841  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0409  0820               	movf	_KeroseneStock,w
  2844  040A  00E1               	movwf	?_eeprom_write
  2845  040B  301B               	movlw	27
  2846  040C  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2847                           
  2848                           ;Main.c: 379: User3amt = User3amt-20;
  2849  0411  30EC               	movlw	-20
  2850  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0414  07AC               	addwf	_User3amt,f
  2853  0415  1C03               	skipc
  2854  0416  03AD               	decf	_User3amt+1,f
  2855                           
  2856                           ;Main.c: 383: eeprom_write(16,User3amt/100);
  2857  0417  3064               	movlw	100
  2858  0418  00D9               	movwf	?___awdiv
  2859  0419  01DA               	clrf	?___awdiv+1
  2860  041A  082D               	movf	_User3amt+1,w
  2861  041B  00DC               	movwf	?___awdiv+3
  2862  041C  082C               	movf	_User3amt,w
  2863  041D  00DB               	movwf	?___awdiv+2
  2864  041E  120A  118A  272D   	fcall	___awdiv
      +       120A  118A         
  2865  0423  0859               	movf	?___awdiv,w
  2866  0424  00E1               	movwf	?_eeprom_write
  2867  0425  3010               	movlw	16
  2868  0426  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2869                           
  2870                           ;Main.c: 384: eeprom_write(17,User3amt%100);
  2871  042B  3064               	movlw	100
  2872  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2873  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2874  042E  00D3               	movwf	?___awmod
  2875  042F  01D4               	clrf	?___awmod+1
  2876  0430  082D               	movf	_User3amt+1,w
  2877  0431  00D6               	movwf	?___awmod+3
  2878  0432  082C               	movf	_User3amt,w
  2879  0433  00D5               	movwf	?___awmod+2
  2880  0434  120A  118A  26D7   	fcall	___awmod
      +       120A  118A         
  2881  0439  0853               	movf	?___awmod,w
  2882  043A  00E1               	movwf	?_eeprom_write
  2883  043B  3011               	movlw	17
  2884  043C  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2885                           
  2886                           ;Main.c: 385: eeprom_write(18,User3Rise);
  2887  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0443  0835               	movf	_User3Rise,w
  2890  0444  00E1               	movwf	?_eeprom_write
  2891  0445  3012               	movlw	18
  2892  0446  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2893                           
  2894                           ;Main.c: 386: eeprom_write(19,User3Sugar);
  2895  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2896  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2897  044D  0836               	movf	_User3Sugar,w
  2898  044E  00E1               	movwf	?_eeprom_write
  2899  044F  3013               	movlw	19
  2900  0450  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2901                           
  2902                           ;Main.c: 387: eeprom_write(20,User3Kerosene);
  2903  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0457  0834               	movf	_User3Kerosene,w
  2906  0458  00E1               	movwf	?_eeprom_write
  2907  0459  3014               	movlw	20
  2908  045A  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  2909                           
  2910                           ;Main.c: 389: lcdcmd(0x01);
  2911  045F  3001               	movlw	1
  2912  0460  120A  118A  2626   	fcall	_lcdcmd
      +       120A  118A         
  2913                           
  2914                           ;Main.c: 390: lcdcmd(0x80);
  2915  0465  3080               	movlw	128
  2916  0466  29B5               	goto	L2
  2917  0467                     l4624:	
  2918                           ;Main.c: 395: lcdstring("      VOLUE      ");
  2919                           
  2920                           ;Main.c: 394: lcdcmd(0x94);
  2921                           
  2922                           ;Main.c: 393: lcdstring(" CAN ON KEROSENE ");
  2923                           
  2924                           ;Main.c: 392: lcdcmd(0xC0);
  2925                           
  2926                           ;Main.c: 391: lcdstring(" PLEASE KEEP YOUR");
  2927                           
  2928                           
  2929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2930                           ; Switch size 1, requested type "space"
  2931                           ; Number of cases is 1, Range of values is 0 to 0
  2932                           ; switch strategies available:
  2933                           ; Name         Bytes Cycles
  2934                           ; simple_byte     4     3 (average)
  2935                           ; direct_byte    22    19 (fixed)
  2936                           ;	Chosen strategy is simple_byte
  2937  0467  0827               	movf	_User+1,w
  2938  0468  3A00               	xorlw	0	; case 0
  2939  0469  1D03               	btfss	3,2
  2940  046A  2C75               	goto	l4626
  2941                           
  2942                           ; Switch size 1, requested type "space"
  2943                           ; Number of cases is 3, Range of values is 1 to 3
  2944                           ; switch strategies available:
  2945                           ; Name         Bytes Cycles
  2946                           ; simple_byte    10     6 (average)
  2947                           ; direct_byte    31    22 (fixed)
  2948                           ;	Chosen strategy is simple_byte
  2949  046B  0826               	movf	_User,w
  2950  046C  3A01               	xorlw	1	; case 1
  2951  046D  1903               	skipnz
  2952  046E  28AB               	goto	l4440
  2953  046F  3A03               	xorlw	3	; case 2
  2954  0470  1903               	skipnz
  2955  0471  2A03               	goto	l4500
  2956  0472  3A01               	xorlw	1	; case 3
  2957  0473  1903               	skipnz
  2958  0474  2B56               	goto	l4560
  2959  0475                     l4626:	
  2960                           
  2961                           ;Main.c: 404: ReadStock();
  2962  0475  120A  158A  25C8   	fcall	_ReadStock
      +       120A  118A         
  2963                           
  2964                           ;Main.c: 405: LoadStockToArray();
  2965  047A  120A  158A  26A0   	fcall	_LoadStockToArray
      +       120A  118A         
  2966                           
  2967                           ;Main.c: 406: if(RC1)
  2968  047F  1C87               	btfss	7,1
  2969  0480  2C86               	goto	l4634
  2970                           
  2971                           ;Main.c: 407: DisplayStock();
  2972  0481  120A  118A  2549   	fcall	_DisplayStock
      +       120A  118A         
  2973  0486                     l4634:	
  2974                           
  2975                           ;Main.c: 408: _delay((unsigned long)((500)*(20000000/4000.0)));
  2976  0486  300D               	movlw	13
  2977  0487  00E8               	movwf	??_main+2
  2978  0488  30A3               	movlw	163
  2979  0489  00E7               	movwf	??_main+1
  2980  048A  30BD               	movlw	189
  2981  048B  00E6               	movwf	??_main
  2982  048C                     u1797:	
  2983  048C  0BE6               	decfsz	??_main,f
  2984  048D  2C8C               	goto	u1797
  2985  048E  0BE7               	decfsz	??_main+1,f
  2986  048F  2C8C               	goto	u1797
  2987  0490  0BE8               	decfsz	??_main+2,f
  2988  0491  2C8C               	goto	u1797
  2989  0492  0064               	clrwdt
  2990                           
  2991                           ;Main.c: 410: if((memcmp("STOCK",&sms,5)==0))
  2992  0493  309B               	movlw	low (STR_57| (0+32768))
  2993  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0496  00D3               	movwf	?_memcmp
  2996  0497  3092               	movlw	high (STR_57| (0+32768))
  2997  0498  00D4               	movwf	?_memcmp+1
  2998  0499  30C7               	movlw	_sms& (0+255)
  2999  049A  00D5               	movwf	?_memcmp+2
  3000  049B  3005               	movlw	5
  3001  049C  00D6               	movwf	?_memcmp+3
  3002  049D  01D7               	clrf	?_memcmp+4
  3003  049E  120A  158A  24FD   	fcall	_memcmp
      +       120A  118A         
  3004  04A3  0854               	movf	?_memcmp+1,w
  3005  04A4  0453               	iorwf	?_memcmp,w
  3006  04A5  1903               	btfsc	3,2
  3007                           
  3008                           ;Main.c: 411: {
  3009                           ;Main.c: 412: if(!sms_indication)
  3010  04A6  18F6               	btfsc	_sms_indication/(0+8),_sms_indication& (0+7)
  3011  04A7  2CA9               	goto	l1171
  3012                           
  3013                           ;Main.c: 413: {
  3014                           ;Main.c: 415: sms_indication=1;
  3015  04A8  14F6               	bsf	_sms_indication/(0+8),_sms_indication& (0+7)
  3016  04A9                     l1171:	
  3017                           
  3018                           ;Main.c: 416: }
  3019                           ;Main.c: 417: }
  3020                           ;Main.c: 418: if(RC3==1)
  3021  04A9  1D87               	btfss	7,3
  3022  04AA  2CDA               	goto	l1174
  3023                           
  3024                           ;Main.c: 419: {
  3025                           ;Main.c: 420: eeprom_write(24,10);
  3026  04AB  300A               	movlw	10
  3027  04AC  00E1               	movwf	?_eeprom_write
  3028  04AD  3018               	movlw	24
  3029  04AE  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  3030                           
  3031                           ;Main.c: 421: eeprom_write(25,0);
  3032  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3033  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3034  04B5  01E1               	clrf	?_eeprom_write
  3035  04B6  3019               	movlw	25
  3036  04B7  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  3037                           
  3038                           ;Main.c: 422: eeprom_write(26,255);
  3039  04BC  30FF               	movlw	255
  3040  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3041  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3042  04BF  00E1               	movwf	?_eeprom_write
  3043  04C0  301A               	movlw	26
  3044  04C1  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  3045                           
  3046                           ;Main.c: 423: eeprom_write(27,200);
  3047  04C6  30C8               	movlw	200
  3048  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3049  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3050  04C9  00E1               	movwf	?_eeprom_write
  3051  04CA  301B               	movlw	27
  3052  04CB  120A  158A  24B7   	fcall	_eeprom_write
      +       120A  118A         
  3053                           
  3054                           ;Main.c: 424: ReadStock();
  3055  04D0  120A  158A  25C8   	fcall	_ReadStock
      +       120A  118A         
  3056                           
  3057                           ;Main.c: 426: DisplayStock();
  3058  04D5  120A  118A  2549   	fcall	_DisplayStock
      +       120A  118A         
  3059  04DA                     l1174:	
  3060  04DA  1D87               	btfss	7,3
  3061  04DB  283E               	goto	l4402
  3062  04DC  2CDA               	goto	l1174
  3063  04DD                     __end_of_main:	
  3064                           
  3065                           	psect	text968
  3066  04DD                     __ptext968:	
  3067 ;; =============== function _DisplayStock ends ============
  3068                           
  3069                           
  3070 ;; *************** function _DisplayKerosene *****************
  3071 ;; Defined at:
  3072 ;;		line 140 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  Location        1    wreg     unsigned char 
  3075 ;;  Kerosene        1    5[BANK0 ] unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  Location        1    6[BANK0 ] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;		None               void
  3080 ;; Registers used:
  3081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 60/0
  3084 ;;		On exit  : 60/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3087 ;;      Params:         0       1       0       0       0
  3088 ;;      Locals:         0       1       0       0       0
  3089 ;;      Temps:          0       0       0       0       0
  3090 ;;      Totals:         0       2       0       0       0
  3091 ;;Total ram usage:        2 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    5
  3094 ;; This function calls:
  3095 ;;		_lcdcmd
  3096 ;;		___lbdiv
  3097 ;;		_lcddata
  3098 ;;		___lbmod
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103  04DD                     _DisplayKerosene:	
  3104                           
  3105                           ; Regs used in _DisplayKerosene: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3106                           ;DisplayKerosene@Location stored from wreg
  3107  04DD  00D9               	movwf	DisplayKerosene@Location
  3108                           
  3109                           ;Main.c: 141: lcdcmd(Location);
  3110  04DE  2626  120A  118A   	fcall	_lcdcmd
  3111                           
  3112                           ;Main.c: 142: lcddata(digit[Kerosene/10]);
  3113  04E1  300A               	movlw	10
  3114  04E2  00D3               	movwf	?___lbdiv
  3115  04E3  0858               	movf	DisplayKerosene@Kerosene,w
  3116  04E4  2796               	fcall	___lbdiv
  3117  04E5  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3118  04EA  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3119  04EF  2714  120A  118A   	fcall	_lcddata
  3120                           
  3121                           ;Main.c: 143: lcddata(digit[Kerosene%10]);
  3122  04F2  300A               	movlw	10
  3123  04F3  00D3               	movwf	?___lbmod
  3124  04F4  0858               	movf	DisplayKerosene@Kerosene,w
  3125  04F5  27B1               	fcall	___lbmod
  3126  04F6  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3127  04FB  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3128  0500  2F14               	ljmp	_lcddata
  3129  0501                     __end_of_DisplayKerosene:	
  3130  0501                     __ptext969:	
  3131 ;; =============== function _DisplayKerosene ends ============
  3132                           
  3133                           
  3134 ;; *************** function _DisplayRise *****************
  3135 ;; Defined at:
  3136 ;;		line 134 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  Location        1    wreg     unsigned char 
  3139 ;;  Rise            1    5[BANK0 ] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  Location        1    6[BANK0 ] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 60/0
  3148 ;;		On exit  : 60/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       1       0       0       0
  3152 ;;      Locals:         0       1       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         0       2       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    5
  3158 ;; This function calls:
  3159 ;;		_lcdcmd
  3160 ;;		___lbdiv
  3161 ;;		_lcddata
  3162 ;;		___lbmod
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167  0501                     _DisplayRise:	
  3168                           
  3169                           ; Regs used in _DisplayRise: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3170                           ;DisplayRise@Location stored from wreg
  3171  0501  00D9               	movwf	DisplayRise@Location
  3172                           
  3173                           ;Main.c: 135: lcdcmd(Location);
  3174  0502  2626  120A  118A   	fcall	_lcdcmd
  3175                           
  3176                           ;Main.c: 136: lcddata(digit[Rise/10]);
  3177  0505  300A               	movlw	10
  3178  0506  00D3               	movwf	?___lbdiv
  3179  0507  0858               	movf	DisplayRise@Rise,w
  3180  0508  2796               	fcall	___lbdiv
  3181  0509  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3182  050E  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3183  0513  2714  120A  118A   	fcall	_lcddata
  3184                           
  3185                           ;Main.c: 137: lcddata(digit[Rise%10]);
  3186  0516  300A               	movlw	10
  3187  0517  00D3               	movwf	?___lbmod
  3188  0518  0858               	movf	DisplayRise@Rise,w
  3189  0519  27B1               	fcall	___lbmod
  3190  051A  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3191  051F  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3192  0524  2F14               	ljmp	_lcddata
  3193  0525                     __end_of_DisplayRise:	
  3194  0525                     __ptext970:	
  3195 ;; =============== function _DisplayRise ends ============
  3196                           
  3197                           
  3198 ;; *************** function _DisplaySugar *****************
  3199 ;; Defined at:
  3200 ;;		line 128 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  Location        1    wreg     unsigned char 
  3203 ;;  Sugar           1    5[BANK0 ] unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  Location        1    6[BANK0 ] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;		None               void
  3208 ;; Registers used:
  3209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 60/0
  3212 ;;		On exit  : 60/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         0       1       0       0       0
  3216 ;;      Locals:         0       1       0       0       0
  3217 ;;      Temps:          0       0       0       0       0
  3218 ;;      Totals:         0       2       0       0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    5
  3222 ;; This function calls:
  3223 ;;		_lcdcmd
  3224 ;;		___lbdiv
  3225 ;;		_lcddata
  3226 ;;		___lbmod
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231  0525                     _DisplaySugar:	
  3232                           
  3233                           ; Regs used in _DisplaySugar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3234                           ;DisplaySugar@Location stored from wreg
  3235  0525  00D9               	movwf	DisplaySugar@Location
  3236                           
  3237                           ;Main.c: 129: lcdcmd(Location);
  3238  0526  2626  120A  118A   	fcall	_lcdcmd
  3239                           
  3240                           ;Main.c: 130: lcddata(digit[Sugar/10]);
  3241  0529  300A               	movlw	10
  3242  052A  00D3               	movwf	?___lbdiv
  3243  052B  0858               	movf	DisplaySugar@Sugar,w
  3244  052C  2796               	fcall	___lbdiv
  3245  052D  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3246  0532  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3247  0537  2714  120A  118A   	fcall	_lcddata
  3248                           
  3249                           ;Main.c: 131: lcddata(digit[Sugar%10]);
  3250  053A  300A               	movlw	10
  3251  053B  00D3               	movwf	?___lbmod
  3252  053C  0858               	movf	DisplaySugar@Sugar,w
  3253  053D  27B1               	fcall	___lbmod
  3254  053E  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3255  0543  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3256  0548  2F14               	ljmp	_lcddata
  3257  0549                     __end_of_DisplaySugar:	
  3258  0549                     __ptext967:	
  3259 ;; =============== function _startup ends ============
  3260                           
  3261                           
  3262 ;; *************** function _DisplayStock *****************
  3263 ;; Defined at:
  3264 ;;		line 114 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;		None               void
  3271 ;; Registers used:
  3272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 60/0
  3275 ;;		On exit  : 60/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    6
  3285 ;; This function calls:
  3286 ;;		_lcdcmd
  3287 ;;		_lcdstring
  3288 ;;		_DisplayAmnt
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293  0549                     _DisplayStock:	
  3294                           
  3295                           ;Main.c: 115: lcdcmd(0x80);
  3296                           
  3297                           ; Regs used in _DisplayStock: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3298  0549  3080               	movlw	128
  3299  054A  2626  120A  118A   	fcall	_lcdcmd
  3300                           
  3301                           ;Main.c: 116: lcdstring("    STOCK DETAILS   ");
  3302  054D  3044               	movlw	low (STR_19| (0+32768))
  3303  054E  00D8               	movwf	?_lcdstring
  3304  054F  3091               	movlw	high (STR_19| (0+32768))
  3305  0550  00D9               	movwf	?_lcdstring+1
  3306  0551  263E  120A  118A   	fcall	_lcdstring
  3307                           
  3308                           ;Main.c: 117: lcdcmd(0xC0);
  3309  0554  30C0               	movlw	192
  3310  0555  2626  120A  118A   	fcall	_lcdcmd
  3311                           
  3312                           ;Main.c: 118: lcdstring("RISE:      Kg       ");
  3313  0558  301A               	movlw	low (STR_20| (0+32768))
  3314  0559  00D8               	movwf	?_lcdstring
  3315  055A  3091               	movlw	high (STR_20| (0+32768))
  3316  055B  00D9               	movwf	?_lcdstring+1
  3317  055C  263E  120A  118A   	fcall	_lcdstring
  3318                           
  3319                           ;Main.c: 119: DisplayAmnt(0XC5,RiseStock);
  3320  055F  0823               	movf	_RiseStock+1,w
  3321  0560  00E2               	movwf	?_DisplayAmnt+1
  3322  0561  0822               	movf	_RiseStock,w
  3323  0562  00E1               	movwf	?_DisplayAmnt
  3324  0563  30C5               	movlw	197
  3325  0564  265A  120A  118A   	fcall	_DisplayAmnt
  3326                           
  3327                           ;Main.c: 120: lcdcmd(0x94);
  3328  0567  3094               	movlw	148
  3329  0568  2626  120A  118A   	fcall	_lcdcmd
  3330                           
  3331                           ;Main.c: 121: lcdstring("SUGAR:    Kg         ");
  3332  056B  3085               	movlw	low (STR_21| (0+32768))
  3333  056C  00D8               	movwf	?_lcdstring
  3334  056D  3090               	movlw	high (STR_21| (0+32768))
  3335  056E  00D9               	movwf	?_lcdstring+1
  3336  056F  263E  120A  118A   	fcall	_lcdstring
  3337                           
  3338                           ;Main.c: 122: DisplayAmnt(0x9A,SugarStock);
  3339  0572  0825               	movf	_SugarStock+1,w
  3340  0573  00E2               	movwf	?_DisplayAmnt+1
  3341  0574  0824               	movf	_SugarStock,w
  3342  0575  00E1               	movwf	?_DisplayAmnt
  3343  0576  309A               	movlw	154
  3344  0577  265A  120A  118A   	fcall	_DisplayAmnt
  3345                           
  3346                           ;Main.c: 123: lcdcmd(0xD4);
  3347  057A  30D4               	movlw	212
  3348  057B  2626  120A  118A   	fcall	_lcdcmd
  3349                           
  3350                           ;Main.c: 124: lcdstring("KEROSENE:     Lts    ");
  3351  057E  309B               	movlw	low (STR_22| (0+32768))
  3352  057F  00D8               	movwf	?_lcdstring
  3353  0580  3090               	movlw	high (STR_22| (0+32768))
  3354  0581  00D9               	movwf	?_lcdstring+1
  3355  0582  263E  120A  118A   	fcall	_lcdstring
  3356                           
  3357                           ;Main.c: 125: DisplayAmnt(0XDD,KeroseneStock);
  3358  0585  0821               	movf	_KeroseneStock+1,w
  3359  0586  00E2               	movwf	?_DisplayAmnt+1
  3360  0587  0820               	movf	_KeroseneStock,w
  3361  0588  00E1               	movwf	?_DisplayAmnt
  3362  0589  30DD               	movlw	221
  3363  058A  2E5A               	ljmp	_DisplayAmnt
  3364  058B                     __end_of_DisplayStock:	
  3365  058B                     __ptext966:	
  3366 ;; =============== function _main ends ============
  3367                           
  3368                           
  3369 ;; *************** function _startup *****************
  3370 ;; Defined at:
  3371 ;;		line 161 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/40
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       3       0       0       0
  3388 ;;      Totals:         0       3       0       0       0
  3389 ;;Total ram usage:        3 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    6
  3392 ;; This function calls:
  3393 ;;		_lcdcmd
  3394 ;;		_lcdstring
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399  058B                     _startup:	
  3400                           
  3401                           ;Main.c: 162: lcdcmd(0x80);
  3402                           
  3403                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3404  058B  3080               	movlw	128
  3405  058C  2626  120A  118A   	fcall	_lcdcmd
  3406                           
  3407                           ;Main.c: 163: lcdstring("AUTOMATIC RATION ");
  3408  058F  3002               	movlw	low (STR_23| (0+32768))
  3409  0590  00D8               	movwf	?_lcdstring
  3410  0591  3092               	movlw	high (STR_23| (0+32768))
  3411  0592  00D9               	movwf	?_lcdstring+1
  3412  0593  263E  120A  118A   	fcall	_lcdstring
  3413                           
  3414                           ;Main.c: 164: lcdcmd(0xC0);
  3415  0596  30C0               	movlw	192
  3416  0597  2626  120A  118A   	fcall	_lcdcmd
  3417                           
  3418                           ;Main.c: 165: lcdstring("   CARD SYSTEM   ");
  3419  059A  30CC               	movlw	low (STR_24| (0+32768))
  3420  059B  00D8               	movwf	?_lcdstring
  3421  059C  3091               	movlw	high (STR_24| (0+32768))
  3422  059D  00D9               	movwf	?_lcdstring+1
  3423  059E  263E  120A  118A   	fcall	_lcdstring
  3424                           
  3425                           ;Main.c: 166: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3426  05A1  301A               	movlw	26
  3427  05A2  00DC               	movwf	??_startup+2
  3428  05A3  3045               	movlw	69
  3429  05A4  00DB               	movwf	??_startup+1
  3430  05A5  307E               	movlw	126
  3431  05A6  00DA               	movwf	??_startup
  3432  05A7                     u1807:	
  3433  05A7  0BDA               	decfsz	??_startup,f
  3434  05A8  2DA7               	goto	u1807
  3435  05A9  0BDB               	decfsz	??_startup+1,f
  3436  05AA  2DA7               	goto	u1807
  3437  05AB  0BDC               	decfsz	??_startup+2,f
  3438  05AC  2DA7               	goto	u1807
  3439                           
  3440                           ;Main.c: 167: lcdcmd(0x01);
  3441  05AD  3001               	movlw	1
  3442  05AE  2626  120A  118A   	fcall	_lcdcmd
  3443                           
  3444                           ;Main.c: 168: _delay((unsigned long)((500)*(20000000/4000.0)));
  3445  05B1  300D               	movlw	13
  3446  05B2  00DC               	movwf	??_startup+2
  3447  05B3  30A3               	movlw	163
  3448  05B4  00DB               	movwf	??_startup+1
  3449  05B5  30BD               	movlw	189
  3450  05B6  00DA               	movwf	??_startup
  3451  05B7                     u1817:	
  3452  05B7  0BDA               	decfsz	??_startup,f
  3453  05B8  2DB7               	goto	u1817
  3454  05B9  0BDB               	decfsz	??_startup+1,f
  3455  05BA  2DB7               	goto	u1817
  3456  05BB  0BDC               	decfsz	??_startup+2,f
  3457  05BC  2DB7               	goto	u1817
  3458  05BD  0064               	clrwdt
  3459                           
  3460                           ;Main.c: 169: lcdcmd(0x80);
  3461  05BE  3080               	movlw	128
  3462  05BF  2626  120A  118A   	fcall	_lcdcmd
  3463                           
  3464                           ;Main.c: 170: lcdstring("PLEASE TAP YOUR  ");
  3465  05C2  30DE               	movlw	low (STR_25| (0+32768))
  3466  05C3  00D8               	movwf	?_lcdstring
  3467  05C4  3091               	movlw	high (STR_25| (0+32768))
  3468  05C5  00D9               	movwf	?_lcdstring+1
  3469  05C6  263E  120A  118A   	fcall	_lcdstring
  3470                           
  3471                           ;Main.c: 171: lcdcmd(0xC0);
  3472  05C9  30C0               	movlw	192
  3473  05CA  2626  120A  118A   	fcall	_lcdcmd
  3474                           
  3475                           ;Main.c: 172: lcdstring("SMART CARD       ");
  3476  05CD  30A8               	movlw	low (STR_26| (0+32768))
  3477  05CE  00D8               	movwf	?_lcdstring
  3478  05CF  3091               	movlw	high (STR_26| (0+32768))
  3479  05D0  00D9               	movwf	?_lcdstring+1
  3480  05D1  263E  120A  118A   	fcall	_lcdstring
  3481                           
  3482                           ;Main.c: 173: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3483  05D4  301A               	movlw	26
  3484  05D5  00DC               	movwf	??_startup+2
  3485  05D6  3045               	movlw	69
  3486  05D7  00DB               	movwf	??_startup+1
  3487  05D8  307E               	movlw	126
  3488  05D9  00DA               	movwf	??_startup
  3489  05DA                     u1827:	
  3490  05DA  0BDA               	decfsz	??_startup,f
  3491  05DB  2DDA               	goto	u1827
  3492  05DC  0BDB               	decfsz	??_startup+1,f
  3493  05DD  2DDA               	goto	u1827
  3494  05DE  0BDC               	decfsz	??_startup+2,f
  3495  05DF  2DDA               	goto	u1827
  3496  05E0  0008               	return
  3497  05E1                     __end_of_startup:	
  3498  05E1                     __ptext973:	
  3499 ;; =============== function _lcdstring ends ============
  3500                           
  3501                           
  3502 ;; *************** function _lcd_init *****************
  3503 ;; Defined at:
  3504 ;;		line 71 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 17F/0
  3515 ;;		On exit  : 60/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0
  3520 ;;      Temps:          0       2       0       0       0
  3521 ;;      Totals:         0       2       0       0       0
  3522 ;;Total ram usage:        2 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    5
  3525 ;; This function calls:
  3526 ;;		_lcdport
  3527 ;;		_lcdcmd
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532  05E1                     _lcd_init:	
  3533                           
  3534                           ;lcd.c: 72: lcdport(0x00);
  3535                           
  3536                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3537  05E1  3000               	movlw	0
  3538  05E2  2772  120A  118A   	fcall	_lcdport
  3539                           
  3540                           ;lcd.c: 73: _delay((unsigned long)((20)*(20000000/4000.0)));
  3541  05E5  3082               	movlw	130
  3542  05E6  00D9               	movwf	??_lcd_init+1
  3543  05E7  30DD               	movlw	221
  3544  05E8  00D8               	movwf	??_lcd_init
  3545  05E9                     u1837:	
  3546  05E9  0BD8               	decfsz	??_lcd_init,f
  3547  05EA  2DE9               	goto	u1837
  3548  05EB  0BD9               	decfsz	??_lcd_init+1,f
  3549  05EC  2DE9               	goto	u1837
  3550  05ED  2DEE               	nop2
  3551                           
  3552                           ;lcd.c: 74: lcdcmd(0x03);
  3553  05EE  3003               	movlw	3
  3554  05EF  2626  120A  118A   	fcall	_lcdcmd
  3555                           
  3556                           ;lcd.c: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
  3557  05F2  3021               	movlw	33
  3558  05F3  00D9               	movwf	??_lcd_init+1
  3559  05F4  3076               	movlw	118
  3560  05F5  00D8               	movwf	??_lcd_init
  3561  05F6                     u1847:	
  3562  05F6  0BD8               	decfsz	??_lcd_init,f
  3563  05F7  2DF6               	goto	u1847
  3564  05F8  0BD9               	decfsz	??_lcd_init+1,f
  3565  05F9  2DF6               	goto	u1847
  3566  05FA  0064               	clrwdt
  3567                           
  3568                           ;lcd.c: 76: lcdcmd(0x03);
  3569  05FB  3003               	movlw	3
  3570  05FC  2626  120A  118A   	fcall	_lcdcmd
  3571                           
  3572                           ;lcd.c: 77: _delay((unsigned long)((11)*(20000000/4000.0)));
  3573  05FF  3048               	movlw	72
  3574  0600  00D9               	movwf	??_lcd_init+1
  3575  0601  306C               	movlw	108
  3576  0602  00D8               	movwf	??_lcd_init
  3577  0603                     u1857:	
  3578  0603  0BD8               	decfsz	??_lcd_init,f
  3579  0604  2E03               	goto	u1857
  3580  0605  0BD9               	decfsz	??_lcd_init+1,f
  3581  0606  2E03               	goto	u1857
  3582  0607  0064               	clrwdt
  3583                           
  3584                           ;lcd.c: 78: lcdcmd(0x03);
  3585  0608  3003               	movlw	3
  3586  0609  2626  120A  118A   	fcall	_lcdcmd
  3587                           
  3588                           ;lcd.c: 80: lcdcmd(0x02);
  3589  060C  3002               	movlw	2
  3590  060D  2626  120A  118A   	fcall	_lcdcmd
  3591                           
  3592                           ;lcd.c: 81: lcdcmd(0x02);
  3593  0610  3002               	movlw	2
  3594  0611  2626  120A  118A   	fcall	_lcdcmd
  3595                           
  3596                           ;lcd.c: 82: lcdcmd(0x28);
  3597  0614  3028               	movlw	40
  3598  0615  2626  120A  118A   	fcall	_lcdcmd
  3599                           
  3600                           ;lcd.c: 83: lcdcmd(0x00);
  3601  0618  3000               	movlw	0
  3602  0619  2626  120A  118A   	fcall	_lcdcmd
  3603                           
  3604                           ;lcd.c: 84: lcdcmd(0x0C);
  3605  061C  300C               	movlw	12
  3606  061D  2626  120A  118A   	fcall	_lcdcmd
  3607                           
  3608                           ;lcd.c: 85: lcdcmd(0x00);
  3609  0620  3000               	movlw	0
  3610  0621  2626  120A  118A   	fcall	_lcdcmd
  3611                           
  3612                           ;lcd.c: 86: lcdcmd(0x06);
  3613  0624  3006               	movlw	6
  3614  0625  2E26               	ljmp	_lcdcmd
  3615  0626                     __end_of_lcd_init:	
  3616  0626                     __ptext976:	
  3617 ;; =============== function _lcddata ends ============
  3618                           
  3619                           
  3620 ;; *************** function _lcdcmd *****************
  3621 ;; Defined at:
  3622 ;;		line 39 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  a               1    wreg     unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  a               1    4[BANK0 ] unsigned char 
  3627 ;;  z               1    3[BANK0 ] unsigned char 
  3628 ;;  y               1    2[BANK0 ] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 60/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         0       0       0       0       0
  3639 ;;      Locals:         0       3       0       0       0
  3640 ;;      Temps:          0       0       0       0       0
  3641 ;;      Totals:         0       3       0       0       0
  3642 ;;Total ram usage:        3 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    4
  3645 ;; This function calls:
  3646 ;;		_lcdport
  3647 ;;		_enable
  3648 ;; This function is called by:
  3649 ;;		_lcd_init
  3650 ;;		_DisplayAmnt
  3651 ;;		_DisplayStock
  3652 ;;		_DisplaySugar
  3653 ;;		_DisplayRise
  3654 ;;		_DisplayKerosene
  3655 ;;		_startup
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659  0626                     _lcdcmd:	
  3660                           
  3661                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+pclath+cstack]
  3662                           ;lcdcmd@a stored from wreg
  3663  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0628  00D7               	movwf	lcdcmd@a
  3666                           
  3667                           ;lcd.c: 40: unsigned char y,z;
  3668                           ;lcd.c: 41: z=a>>4&0x0F;
  3669  0629  0E57               	swapf	lcdcmd@a,w
  3670  062A  390F               	andlw	15
  3671  062B  00D6               	movwf	lcdcmd@z
  3672  062C  300F               	movlw	15
  3673  062D  05D6               	andwf	lcdcmd@z,f
  3674                           
  3675                           ;lcd.c: 42: y=a&0x0F;
  3676  062E  0857               	movf	lcdcmd@a,w
  3677  062F  00D5               	movwf	lcdcmd@y
  3678  0630  300F               	movlw	15
  3679  0631  05D5               	andwf	lcdcmd@y,f
  3680                           
  3681                           ;lcd.c: 44: lcdport(z);
  3682  0632  0856               	movf	lcdcmd@z,w
  3683  0633  2772  120A  118A   	fcall	_lcdport
  3684                           
  3685                           ;lcd.c: 45: enable();
  3686  0636  2788  120A  118A   	fcall	_enable
  3687                           
  3688                           ;lcd.c: 46: lcdport(y);
  3689  0639  0855               	movf	lcdcmd@y,w
  3690  063A  2772  120A  118A   	fcall	_lcdport
  3691                           
  3692                           ;lcd.c: 47: enable();
  3693  063D  2F88               	ljmp	l4196
  3694  063E                     __end_of_lcdcmd:	
  3695  063E                     __ptext972:	
  3696 ;; =============== function _DisplayAmnt ends ============
  3697                           
  3698                           
  3699 ;; *************** function _lcdstring *****************
  3700 ;; Defined at:
  3701 ;;		line 90 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  a               2    5[BANK0 ] PTR const unsigned char 
  3704 ;;		 -> STR_56(18), STR_55(18), STR_54(18), STR_53(21), 
  3705 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(18), 
  3706 ;;		 -> STR_48(18), STR_47(18), STR_46(21), STR_45(21), 
  3707 ;;		 -> STR_44(21), STR_43(21), STR_42(18), STR_41(18), 
  3708 ;;		 -> STR_40(18), STR_39(21), STR_38(21), STR_37(21), 
  3709 ;;		 -> STR_36(21), STR_35(18), STR_34(18), STR_26(18), 
  3710 ;;		 -> STR_25(18), STR_24(18), STR_23(18), STR_22(22), 
  3711 ;;		 -> STR_21(22), STR_20(21), STR_19(21), sms(20), 
  3712 ;;		 -> STR_8(10), STR_2(17), STR_1(17), 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;		None               void
  3717 ;; Registers used:
  3718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 60/0
  3721 ;;		On exit  : 60/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         0       2       0       0       0
  3725 ;;      Locals:         0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0
  3727 ;;      Totals:         0       2       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    5
  3731 ;; This function calls:
  3732 ;;		_lcddata
  3733 ;; This function is called by:
  3734 ;;		_DisplayStock
  3735 ;;		_startup
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739  063E                     _lcdstring:	
  3740  063E                     l4316:	
  3741                           ;lcd.c: 91: while(*a)
  3742                           
  3743                           ; Regs used in _lcdstring: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3744                           
  3745  063E  0859               	movf	lcdstring@a+1,w
  3746  063F  00FF               	movwf	127
  3747  0640  0858               	movf	lcdstring@a,w
  3748  0641  0084               	movwf	4
  3749  0642  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3750  0647  3800               	iorlw	0
  3751  0648  1903               	btfsc	3,2
  3752  0649  0008               	return
  3753                           
  3754                           ;lcd.c: 92: {
  3755                           ;lcd.c: 93: lcddata(*a++);
  3756  064A  0859               	movf	lcdstring@a+1,w
  3757  064B  00FF               	movwf	127
  3758  064C  0858               	movf	lcdstring@a,w
  3759  064D  0084               	movwf	4
  3760  064E  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3761  0653  2714  120A  118A   	fcall	_lcddata
  3762  0656  0AD8               	incf	lcdstring@a,f
  3763  0657  1903               	skipnz
  3764  0658  0AD9               	incf	lcdstring@a+1,f
  3765  0659  2E3E               	goto	l4316
  3766  065A                     __end_of_lcdstring:	
  3767  065A                     __ptext971:	
  3768 ;; =============== function _DisplaySugar ends ============
  3769                           
  3770                           
  3771 ;; *************** function _DisplayAmnt *****************
  3772 ;; Defined at:
  3773 ;;		line 82 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  Location        1    wreg     unsigned char 
  3776 ;;  Amnt            2   14[BANK0 ] int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  Location        1   16[BANK0 ] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;		None               void
  3781 ;; Registers used:
  3782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 60/0
  3785 ;;		On exit  : 60/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3788 ;;      Params:         0       2       0       0       0
  3789 ;;      Locals:         0       3       0       0       0
  3790 ;;      Temps:          0       0       0       0       0
  3791 ;;      Totals:         0       5       0       0       0
  3792 ;;Total ram usage:        5 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    5
  3795 ;; This function calls:
  3796 ;;		_lcdcmd
  3797 ;;		___awdiv
  3798 ;;		_lcddata
  3799 ;;		___awmod
  3800 ;; This function is called by:
  3801 ;;		_DisplayStock
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805  065A                     _DisplayAmnt:	
  3806                           
  3807                           ; Regs used in _DisplayAmnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3808                           ;DisplayAmnt@Location stored from wreg
  3809  065A  00E3               	movwf	DisplayAmnt@Location
  3810                           
  3811                           ;Main.c: 83: lcdcmd(Location);
  3812  065B  2626  120A  118A   	fcall	_lcdcmd
  3813                           
  3814                           ;Main.c: 84: lcddata(digit[Amnt/1000]);
  3815  065E  30E8               	movlw	232
  3816  065F  00D9               	movwf	?___awdiv
  3817  0660  3003               	movlw	3
  3818  0661  00DA               	movwf	?___awdiv+1
  3819  0662  0862               	movf	DisplayAmnt@Amnt+1,w
  3820  0663  00DC               	movwf	?___awdiv+3
  3821  0664  0861               	movf	DisplayAmnt@Amnt,w
  3822  0665  00DB               	movwf	?___awdiv+2
  3823  0666  272D               	fcall	___awdiv
  3824  0667  0859               	movf	?___awdiv,w
  3825  0668  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3826  066D  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3827  0672  2714  120A  118A   	fcall	_lcddata
  3828                           
  3829                           ;Main.c: 85: lcddata(digit[Amnt%1000/100]);
  3830  0675  3064               	movlw	100
  3831  0676  00D9               	movwf	?___awdiv
  3832  0677  01DA               	clrf	?___awdiv+1
  3833  0678  27CD  120A  118A   	fcall	PL6	;call to abstracted procedure
  3834  067B  26D7  120A  118A   	fcall	___awmod
  3835  067E  0854               	movf	?___awmod+1,w
  3836  067F  00DC               	movwf	?___awdiv+3
  3837  0680  0853               	movf	?___awmod,w
  3838  0681  00DB               	movwf	?___awdiv+2
  3839  0682  272D               	fcall	___awdiv
  3840  0683  0859               	movf	?___awdiv,w
  3841  0684  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3842  0689  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3843  068E  2714  120A  118A   	fcall	_lcddata
  3844                           
  3845                           ;Main.c: 86: lcddata(digit[Amnt%1000%100/10]);
  3846  0691  300A               	movlw	10
  3847  0692  00D9               	movwf	?___awdiv
  3848  0693  01DA               	clrf	?___awdiv+1
  3849  0694  27CD  120A  118A   	fcall	PL6	;call to abstracted procedure
  3850  0697  26D7  120A  118A   	fcall	___awmod
  3851  069A  27D6  120A  118A   	fcall	PL10	;call to abstracted procedure
  3852  069D  26D7  120A  118A   	fcall	___awmod
  3853  06A0  0854               	movf	?___awmod+1,w
  3854  06A1  00DC               	movwf	?___awdiv+3
  3855  06A2  0853               	movf	?___awmod,w
  3856  06A3  00DB               	movwf	?___awdiv+2
  3857  06A4  272D               	fcall	___awdiv
  3858  06A5  0859               	movf	?___awdiv,w
  3859  06A6  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3860  06AB  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3861  06B0  2714  120A  118A   	fcall	_lcddata
  3862                           
  3863                           ;Main.c: 87: lcddata(digit[Amnt%1000%100%10]);
  3864  06B3  27CD  120A  118A   	fcall	PL6	;call to abstracted procedure
  3865  06B6  26D7  120A  118A   	fcall	___awmod
  3866  06B9  27D6  120A  118A   	fcall	PL10	;call to abstracted procedure
  3867  06BC  26D7  120A  118A   	fcall	___awmod
  3868  06BF  0854               	movf	?___awmod+1,w
  3869  06C0  00E5               	movwf	_DisplayAmnt$1136+1
  3870  06C1  0853               	movf	?___awmod,w
  3871  06C2  00E4               	movwf	_DisplayAmnt$1136
  3872                           
  3873                           ;Main.c: 87: lcddata(digit[Amnt%1000%100%10]);
  3874  06C3  300A               	movlw	10
  3875  06C4  00D3               	movwf	?___awmod
  3876  06C5  01D4               	clrf	?___awmod+1
  3877  06C6  0865               	movf	_DisplayAmnt$1136+1,w
  3878  06C7  00D6               	movwf	?___awmod+3
  3879  06C8  0864               	movf	_DisplayAmnt$1136,w
  3880  06C9  00D5               	movwf	?___awmod+2
  3881  06CA  26D7               	fcall	___awmod
  3882  06CB  0853               	movf	?___awmod,w
  3883  06CC  120A  158A  27CC   	fcall	PL2	;call to abstracted procedure
      +       120A  118A         
  3884  06D1  160A  118A  2000   	fcall	stringtab
      +       120A  118A         
  3885  06D6  2F14               	ljmp	_lcddata
  3886  06D7                     __end_of_DisplayAmnt:	
  3887  06D7                     __ptext984:	
  3888 ;; =============== function _enable ends ============
  3889                           
  3890                           
  3891 ;; *************** function ___awmod *****************
  3892 ;; Defined at:
  3893 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awmod.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  divisor         2    0[BANK0 ] int 
  3896 ;;  dividend        2    2[BANK0 ] int 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  sign            1    5[BANK0 ] unsigned char 
  3899 ;;  counter         1    4[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2    0[BANK0 ] int 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 60/0
  3906 ;;		On exit  : 60/0
  3907 ;;		Unchanged: FFF9F/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       4       0       0       0
  3910 ;;      Locals:         0       2       0       0       0
  3911 ;;      Temps:          0       0       0       0       0
  3912 ;;      Totals:         0       6       0       0       0
  3913 ;;Total ram usage:        6 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    3
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_DisplayAmnt
  3920 ;;		_main
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923  06D7                     ___awmod:	
  3924                           
  3925                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3926  06D7  01D8               	clrf	___awmod@sign
  3927  06D8  1FD6               	btfss	___awmod@dividend+1,7
  3928  06D9  2EE1               	goto	l4168
  3929  06DA  09D5               	comf	___awmod@dividend,f
  3930  06DB  09D6               	comf	___awmod@dividend+1,f
  3931  06DC  0AD5               	incf	___awmod@dividend,f
  3932  06DD  1903               	skipnz
  3933  06DE  0AD6               	incf	___awmod@dividend+1,f
  3934  06DF  01D8               	clrf	___awmod@sign
  3935  06E0  0AD8               	incf	___awmod@sign,f
  3936  06E1                     l4168:	
  3937  06E1  1FD4               	btfss	___awmod@divisor+1,7
  3938  06E2  2EE8               	goto	l4172
  3939  06E3  09D3               	comf	___awmod@divisor,f
  3940  06E4  09D4               	comf	___awmod@divisor+1,f
  3941  06E5  0AD3               	incf	___awmod@divisor,f
  3942  06E6  1903               	skipnz
  3943  06E7  0AD4               	incf	___awmod@divisor+1,f
  3944  06E8                     l4172:	
  3945  06E8  0854               	movf	___awmod@divisor+1,w
  3946  06E9  0453               	iorwf	___awmod@divisor,w
  3947  06EA  1903               	skipnz
  3948  06EB  2F07               	goto	l4188
  3949  06EC  01D7               	clrf	___awmod@counter
  3950  06ED                     L4:	
  3951  06ED  0AD7               	incf	___awmod@counter,f
  3952  06EE  1BD4               	btfsc	___awmod@divisor+1,7
  3953  06EF  2EF4               	goto	l4180
  3954  06F0  1003               	clrc
  3955  06F1  0DD3               	rlf	___awmod@divisor,f
  3956  06F2  0DD4               	rlf	___awmod@divisor+1,f
  3957  06F3  2EED               	goto	L4
  3958  06F4                     l4180:	
  3959  06F4  0854               	movf	___awmod@divisor+1,w
  3960  06F5  0256               	subwf	___awmod@dividend+1,w
  3961  06F6  1D03               	skipz
  3962  06F7  2EFA               	goto	u1535
  3963  06F8  0853               	movf	___awmod@divisor,w
  3964  06F9  0255               	subwf	___awmod@dividend,w
  3965  06FA                     u1535:	
  3966  06FA  1C03               	skipc
  3967  06FB  2F03               	goto	L5
  3968  06FC  0853               	movf	___awmod@divisor,w
  3969  06FD  02D5               	subwf	___awmod@dividend,f
  3970  06FE  0854               	movf	___awmod@divisor+1,w
  3971  06FF  1C03               	skipc
  3972  0700  03D6               	decf	___awmod@dividend+1,f
  3973  0701  02D6               	subwf	___awmod@dividend+1,f
  3974  0702  1003               	clrc
  3975  0703                     L5:	
  3976  0703  0CD4               	rrf	___awmod@divisor+1,f
  3977  0704  0CD3               	rrf	___awmod@divisor,f
  3978  0705  0BD7               	decfsz	___awmod@counter,f
  3979  0706  2EF4               	goto	l4180
  3980  0707                     l4188:	
  3981  0707  0858               	movf	___awmod@sign,w
  3982  0708  1903               	btfsc	3,2
  3983  0709  2F0F               	goto	l4192
  3984  070A  09D5               	comf	___awmod@dividend,f
  3985  070B  09D6               	comf	___awmod@dividend+1,f
  3986  070C  0AD5               	incf	___awmod@dividend,f
  3987  070D  1903               	skipnz
  3988  070E  0AD6               	incf	___awmod@dividend+1,f
  3989  070F                     l4192:	
  3990  070F  0856               	movf	___awmod@dividend+1,w
  3991  0710  00D4               	movwf	?___awmod+1
  3992  0711  0855               	movf	___awmod@dividend,w
  3993  0712  00D3               	movwf	?___awmod
  3994  0713  0008               	return
  3995  0714                     __end_of___awmod:	
  3996  0714                     __ptext975:	
  3997 ;; =============== function _RFID_read ends ============
  3998                           
  3999                           
  4000 ;; *************** function _lcddata *****************
  4001 ;; Defined at:
  4002 ;;		line 51 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  a               1    wreg     unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  a               1    4[BANK0 ] unsigned char 
  4007 ;;  z               1    3[BANK0 ] unsigned char 
  4008 ;;  y               1    2[BANK0 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;		None               void
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 60/0
  4015 ;;		On exit  : 60/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4018 ;;      Params:         0       0       0       0       0
  4019 ;;      Locals:         0       3       0       0       0
  4020 ;;      Temps:          0       0       0       0       0
  4021 ;;      Totals:         0       3       0       0       0
  4022 ;;Total ram usage:        3 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    4
  4025 ;; This function calls:
  4026 ;;		_lcdport
  4027 ;;		_enable
  4028 ;; This function is called by:
  4029 ;;		_lcdstring
  4030 ;;		_DisplayAmnt
  4031 ;;		_DisplaySugar
  4032 ;;		_DisplayRise
  4033 ;;		_DisplayKerosene
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036  0714                     _lcddata:	
  4037                           
  4038                           ; Regs used in _lcddata: [wreg+status,2+status,0+pclath+cstack]
  4039                           ;lcddata@a stored from wreg
  4040  0714  00D7               	movwf	lcddata@a
  4041                           
  4042                           ;lcd.c: 52: unsigned char y,z;
  4043                           ;lcd.c: 53: z=a>>4&0x0F;
  4044  0715  0E57               	swapf	lcddata@a,w
  4045  0716  390F               	andlw	15
  4046  0717  00D6               	movwf	lcddata@z
  4047  0718  300F               	movlw	15
  4048  0719  05D6               	andwf	lcddata@z,f
  4049                           
  4050                           ;lcd.c: 54: y=a&0x0F;
  4051  071A  0857               	movf	lcddata@a,w
  4052  071B  00D5               	movwf	lcddata@y
  4053  071C  300F               	movlw	15
  4054  071D  05D5               	andwf	lcddata@y,f
  4055                           
  4056                           ;lcd.c: 55: RD2=1;
  4057  071E  1508               	bsf	8,2
  4058                           
  4059                           ;lcd.c: 56: lcdport(z);
  4060  071F  0856               	movf	lcddata@z,w
  4061  0720  2772  120A  118A   	fcall	_lcdport
  4062                           
  4063                           ;lcd.c: 57: enable();
  4064  0723  2788  120A  118A   	fcall	_enable
  4065                           
  4066                           ;lcd.c: 58: lcdport(y);
  4067  0726  0855               	movf	lcddata@y,w
  4068  0727  2772  120A  118A   	fcall	_lcdport
  4069                           
  4070                           ;lcd.c: 59: enable();
  4071  072A  2788               	fcall	_enable
  4072                           
  4073                           ;lcd.c: 60: RD2 = 0;
  4074  072B  1108               	bcf	8,2
  4075  072C  0008               	return
  4076  072D                     __end_of_lcddata:	
  4077  072D                     __ptext985:	
  4078 ;; =============== function ___awmod ends ============
  4079                           
  4080                           
  4081 ;; *************** function ___awdiv *****************
  4082 ;; Defined at:
  4083 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  divisor         2    6[BANK0 ] int 
  4086 ;;  dividend        2    8[BANK0 ] int 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  quotient        2   12[BANK0 ] int 
  4089 ;;  sign            1   11[BANK0 ] unsigned char 
  4090 ;;  counter         1   10[BANK0 ] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  2    6[BANK0 ] int 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0
  4095 ;; Tracked objects:
  4096 ;;		On entry : 60/0
  4097 ;;		On exit  : 60/0
  4098 ;;		Unchanged: FFF9F/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       4       0       0       0
  4101 ;;      Locals:         0       4       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       8       0       0       0
  4104 ;;Total ram usage:        8 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    3
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_DisplayAmnt
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114  072D                     ___awdiv:	
  4115                           
  4116                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4117  072D  01DE               	clrf	___awdiv@sign
  4118  072E  1FDA               	btfss	___awdiv@divisor+1,7
  4119  072F  2F37               	goto	l3408
  4120  0730  09D9               	comf	___awdiv@divisor,f
  4121  0731  09DA               	comf	___awdiv@divisor+1,f
  4122  0732  0AD9               	incf	___awdiv@divisor,f
  4123  0733  1903               	skipnz
  4124  0734  0ADA               	incf	___awdiv@divisor+1,f
  4125  0735  01DE               	clrf	___awdiv@sign
  4126  0736  0ADE               	incf	___awdiv@sign,f
  4127  0737                     l3408:	
  4128  0737  1FDC               	btfss	___awdiv@dividend+1,7
  4129  0738  2F40               	goto	l3414
  4130  0739  09DB               	comf	___awdiv@dividend,f
  4131  073A  09DC               	comf	___awdiv@dividend+1,f
  4132  073B  0ADB               	incf	___awdiv@dividend,f
  4133  073C  1903               	skipnz
  4134  073D  0ADC               	incf	___awdiv@dividend+1,f
  4135  073E  3001               	movlw	1
  4136  073F  06DE               	xorwf	___awdiv@sign,f
  4137  0740                     l3414:	
  4138  0740  01DF               	clrf	___awdiv@quotient
  4139  0741  01E0               	clrf	___awdiv@quotient+1
  4140  0742  085A               	movf	___awdiv@divisor+1,w
  4141  0743  0459               	iorwf	___awdiv@divisor,w
  4142  0744  1903               	skipnz
  4143  0745  2F65               	goto	l3436
  4144  0746  01DD               	clrf	___awdiv@counter
  4145  0747                     L6:	
  4146  0747  0ADD               	incf	___awdiv@counter,f
  4147  0748  1BDA               	btfsc	___awdiv@divisor+1,7
  4148  0749  2F4E               	goto	l3424
  4149  074A  1003               	clrc
  4150  074B  0DD9               	rlf	___awdiv@divisor,f
  4151  074C  0DDA               	rlf	___awdiv@divisor+1,f
  4152  074D  2F47               	goto	L6
  4153  074E                     l3424:	
  4154  074E  1003               	clrc
  4155  074F  0DDF               	rlf	___awdiv@quotient,f
  4156  0750  0DE0               	rlf	___awdiv@quotient+1,f
  4157  0751  085A               	movf	___awdiv@divisor+1,w
  4158  0752  025C               	subwf	___awdiv@dividend+1,w
  4159  0753  1D03               	skipz
  4160  0754  2F57               	goto	u1045
  4161  0755  0859               	movf	___awdiv@divisor,w
  4162  0756  025B               	subwf	___awdiv@dividend,w
  4163  0757                     u1045:	
  4164  0757  1C03               	skipc
  4165  0758  2F61               	goto	L7
  4166  0759  0859               	movf	___awdiv@divisor,w
  4167  075A  02DB               	subwf	___awdiv@dividend,f
  4168  075B  085A               	movf	___awdiv@divisor+1,w
  4169  075C  1C03               	skipc
  4170  075D  03DC               	decf	___awdiv@dividend+1,f
  4171  075E  02DC               	subwf	___awdiv@dividend+1,f
  4172  075F  145F               	bsf	___awdiv@quotient,0
  4173  0760  1003               	clrc
  4174  0761                     L7:	
  4175  0761  0CDA               	rrf	___awdiv@divisor+1,f
  4176  0762  0CD9               	rrf	___awdiv@divisor,f
  4177  0763  0BDD               	decfsz	___awdiv@counter,f
  4178  0764  2F4E               	goto	l3424
  4179  0765                     l3436:	
  4180  0765  085E               	movf	___awdiv@sign,w
  4181  0766  1903               	btfsc	3,2
  4182  0767  2F6D               	goto	l3440
  4183  0768  09DF               	comf	___awdiv@quotient,f
  4184  0769  09E0               	comf	___awdiv@quotient+1,f
  4185  076A  0ADF               	incf	___awdiv@quotient,f
  4186  076B  1903               	skipnz
  4187  076C  0AE0               	incf	___awdiv@quotient+1,f
  4188  076D                     l3440:	
  4189  076D  0860               	movf	___awdiv@quotient+1,w
  4190  076E  00DA               	movwf	?___awdiv+1
  4191  076F  085F               	movf	___awdiv@quotient,w
  4192  0770  00D9               	movwf	?___awdiv
  4193  0771  0008               	return
  4194  0772                     __end_of___awdiv:	
  4195  0772                     __ptext996:	
  4196 ;; =============== function _eeprom_read ends ============
  4197                           
  4198                           
  4199 ;; *************** function _lcdport *****************
  4200 ;; Defined at:
  4201 ;;		line 16 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  a               1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  a               1    0[BANK0 ] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;		None               void
  4208 ;; Registers used:
  4209 ;;		wreg
  4210 ;; Tracked objects:
  4211 ;;		On entry : 60/0
  4212 ;;		On exit  : 60/0
  4213 ;;		Unchanged: FFF9F/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4215 ;;      Params:         0       0       0       0       0
  4216 ;;      Locals:         0       1       0       0       0
  4217 ;;      Temps:          0       0       0       0       0
  4218 ;;      Totals:         0       1       0       0       0
  4219 ;;Total ram usage:        1 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    3
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_lcdcmd
  4226 ;;		_lcddata
  4227 ;;		_lcd_init
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230  0772                     _lcdport:	
  4231                           
  4232                           ; Regs used in _lcdport: [wreg]
  4233                           ;lcdport@a stored from wreg
  4234  0772  00D3               	movwf	lcdport@a
  4235                           
  4236                           ;lcd.c: 17: if(a & 1)
  4237  0773  1C53               	btfss	lcdport@a,0
  4238  0774  2F77               	goto	l954
  4239                           
  4240                           ;lcd.c: 18: RD4 = 1;
  4241  0775  1608               	bsf	8,4
  4242  0776  2F78               	goto	l955
  4243  0777                     l954:	
  4244                           
  4245                           ;lcd.c: 19: else
  4246                           ;lcd.c: 20: RD4 = 0;
  4247  0777  1208               	bcf	8,4
  4248  0778                     l955:	
  4249                           
  4250                           ;lcd.c: 22: if(a & 2)
  4251  0778  1CD3               	btfss	lcdport@a,1
  4252  0779  2F7C               	goto	l956
  4253                           
  4254                           ;lcd.c: 23: RD5 = 1;
  4255  077A  1688               	bsf	8,5
  4256  077B  2F7D               	goto	l957
  4257  077C                     l956:	
  4258                           
  4259                           ;lcd.c: 24: else
  4260                           ;lcd.c: 25: RD5 = 0;
  4261  077C  1288               	bcf	8,5
  4262  077D                     l957:	
  4263                           
  4264                           ;lcd.c: 27: if(a & 4)
  4265  077D  1D53               	btfss	lcdport@a,2
  4266  077E  2F81               	goto	l958
  4267                           
  4268                           ;lcd.c: 28: RD6 = 1;
  4269  077F  1708               	bsf	8,6
  4270  0780  2F82               	goto	l959
  4271  0781                     l958:	
  4272                           
  4273                           ;lcd.c: 29: else
  4274                           ;lcd.c: 30: RD6 = 0;
  4275  0781  1308               	bcf	8,6
  4276  0782                     l959:	
  4277                           
  4278                           ;lcd.c: 32: if(a & 8)
  4279  0782  1DD3               	btfss	lcdport@a,3
  4280  0783  2F86               	goto	l960
  4281                           
  4282                           ;lcd.c: 33: RD7 = 1;
  4283  0784  1788               	bsf	8,7
  4284  0785  0008               	return
  4285  0786                     l960:	
  4286                           
  4287                           ;lcd.c: 34: else
  4288                           ;lcd.c: 35: RD7 = 0;
  4289  0786  1388               	bcf	8,7
  4290  0787  0008               	return
  4291  0788                     __end_of_lcdport:	
  4292  0788                     __ptext983:	
  4293 ;; =============== function _SoftWareUart_Init ends ============
  4294                           
  4295                           
  4296 ;; *************** function _enable *****************
  4297 ;; Defined at:
  4298 ;;		line 9 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\lcd.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;		None               void
  4305 ;; Registers used:
  4306 ;;		wreg
  4307 ;; Tracked objects:
  4308 ;;		On entry : 60/0
  4309 ;;		On exit  : 60/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4312 ;;      Params:         0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0
  4314 ;;      Temps:          0       2       0       0       0
  4315 ;;      Totals:         0       2       0       0       0
  4316 ;;Total ram usage:        2 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    3
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_lcdcmd
  4323 ;;		_lcddata
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326  0788                     _enable:	
  4327  0788                     l4196:	
  4328                           ; Regs used in _enable: [wreg]
  4329                           
  4330                           
  4331                           ;lcd.c: 10: RD3 = 1;
  4332  0788  1588               	bsf	8,3
  4333                           
  4334                           ;lcd.c: 11: _delay((unsigned long)((4)*(20000000/4000.0)));
  4335  0789  301A               	movlw	26
  4336  078A  00D4               	movwf	??_enable+1
  4337  078B  30F8               	movlw	248
  4338  078C  00D3               	movwf	??_enable
  4339  078D                     u1907:	
  4340  078D  0BD3               	decfsz	??_enable,f
  4341  078E  2F8D               	goto	u1907
  4342  078F  0BD4               	decfsz	??_enable+1,f
  4343  0790  2F8D               	goto	u1907
  4344  0791  0064               	clrwdt
  4345                           
  4346                           ;lcd.c: 12: RD3 = 0;
  4347  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0793  1303               	bcf	3,6	;RP1=0, select bank0
  4349  0794  1188               	bcf	8,3
  4350  0795  0008               	return
  4351  0796                     __end_of_enable:	
  4352  0796                     __ptext987:	
  4353 ;; =============== function ___lbmod ends ============
  4354                           
  4355                           
  4356 ;; *************** function ___lbdiv *****************
  4357 ;; Defined at:
  4358 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbdiv.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  dividend        1    wreg     unsigned char 
  4361 ;;  divisor         1    0[BANK0 ] unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  dividend        1    1[BANK0 ] unsigned char 
  4364 ;;  quotient        1    3[BANK0 ] unsigned char 
  4365 ;;  counter         1    2[BANK0 ] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      unsigned char 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 60/0
  4372 ;;		On exit  : 60/0
  4373 ;;		Unchanged: FFF9F/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4375 ;;      Params:         0       1       0       0       0
  4376 ;;      Locals:         0       3       0       0       0
  4377 ;;      Temps:          0       0       0       0       0
  4378 ;;      Totals:         0       4       0       0       0
  4379 ;;Total ram usage:        4 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    3
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_DisplaySugar
  4386 ;;		_DisplayRise
  4387 ;;		_DisplayKerosene
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390  0796                     ___lbdiv:	
  4391                           
  4392                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4393                           ;___lbdiv@dividend stored from wreg
  4394  0796  00D4               	movwf	___lbdiv@dividend
  4395  0797  01D6               	clrf	___lbdiv@quotient
  4396  0798  0853               	movf	___lbdiv@divisor,w
  4397  0799  1903               	btfsc	3,2
  4398  079A  2FAF               	goto	l4138
  4399  079B  01D5               	clrf	___lbdiv@counter
  4400  079C                     l4124:	
  4401  079C  0AD5               	incf	___lbdiv@counter,f
  4402  079D  1BD3               	btfsc	___lbdiv@divisor,7
  4403  079E  2FA2               	goto	l1274
  4404  079F  1003               	clrc
  4405  07A0  0DD3               	rlf	___lbdiv@divisor,f
  4406  07A1  2F9C               	goto	l4124
  4407  07A2                     l1274:	
  4408  07A2  1003               	clrc
  4409  07A3  0DD6               	rlf	___lbdiv@quotient,f
  4410  07A4  0853               	movf	___lbdiv@divisor,w
  4411  07A5  0254               	subwf	___lbdiv@dividend,w
  4412  07A6  1C03               	skipc
  4413  07A7  2FAC               	goto	L9
  4414  07A8  0853               	movf	___lbdiv@divisor,w
  4415  07A9  02D4               	subwf	___lbdiv@dividend,f
  4416  07AA  1456               	bsf	___lbdiv@quotient,0
  4417  07AB  1003               	clrc
  4418  07AC                     L9:	
  4419  07AC  0CD3               	rrf	___lbdiv@divisor,f
  4420  07AD  0BD5               	decfsz	___lbdiv@counter,f
  4421  07AE  2FA2               	goto	l1274
  4422  07AF                     l4138:	
  4423  07AF  0856               	movf	___lbdiv@quotient,w
  4424  07B0  0008               	return
  4425  07B1                     __end_of___lbdiv:	
  4426  07B1                     __ptext986:	
  4427 ;; =============== function ___awdiv ends ============
  4428                           
  4429                           
  4430 ;; *************** function ___lbmod *****************
  4431 ;; Defined at:
  4432 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lbmod.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  dividend        1    wreg     unsigned char 
  4435 ;;  divisor         1    0[BANK0 ] unsigned char 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  dividend        1    2[BANK0 ] unsigned char 
  4438 ;;  rem             1    4[BANK0 ] unsigned char 
  4439 ;;  counter         1    3[BANK0 ] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      unsigned char 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 60/0
  4446 ;;		On exit  : 60/0
  4447 ;;		Unchanged: FFF9F/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       1       0       0       0
  4450 ;;      Locals:         0       3       0       0       0
  4451 ;;      Temps:          0       1       0       0       0
  4452 ;;      Totals:         0       5       0       0       0
  4453 ;;Total ram usage:        5 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    3
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_DisplaySugar
  4460 ;;		_DisplayRise
  4461 ;;		_DisplayKerosene
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464  07B1                     ___lbmod:	
  4465                           
  4466                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4467                           ;___lbmod@dividend stored from wreg
  4468  07B1  00D5               	movwf	___lbmod@dividend
  4469  07B2  3008               	movlw	8
  4470  07B3  00D6               	movwf	___lbmod@counter
  4471  07B4  01D7               	clrf	___lbmod@rem
  4472  07B5                     l4146:	
  4473  07B5  0855               	movf	___lbmod@dividend,w
  4474  07B6  00D4               	movwf	??___lbmod
  4475  07B7  3007               	movlw	7
  4476  07B8  1003               	clrc
  4477  07B9                     L8:	
  4478  07B9  0CD4               	rrf	??___lbmod,f
  4479  07BA  3EFF               	addlw	-1
  4480  07BB  1003               	clrc
  4481  07BC  1D03               	skipz
  4482  07BD  2FB9               	goto	L8
  4483  07BE  0D57               	rlf	___lbmod@rem,w
  4484  07BF  0454               	iorwf	??___lbmod,w
  4485  07C0  00D7               	movwf	___lbmod@rem
  4486  07C1  1003               	clrc
  4487  07C2  0DD5               	rlf	___lbmod@dividend,f
  4488  07C3  0853               	movf	___lbmod@divisor,w
  4489  07C4  0257               	subwf	___lbmod@rem,w
  4490  07C5  1C03               	skipc
  4491  07C6  2FC9               	goto	l4154
  4492  07C7  0853               	movf	___lbmod@divisor,w
  4493  07C8  02D7               	subwf	___lbmod@rem,f
  4494  07C9                     l4154:	
  4495  07C9  0BD6               	decfsz	___lbmod@counter,f
  4496  07CA  2FB5               	goto	l4146
  4497  07CB  0857               	movf	___lbmod@rem,w
  4498  07CC  0008               	return
  4499  07CD                     __end_of___lbmod:	
  4500  07CD                     PL6:	
  4501  07CD  0862               	movf	DisplayAmnt@Amnt+1,w
  4502  07CE  00D6               	movwf	?___awmod+3
  4503  07CF  0861               	movf	DisplayAmnt@Amnt,w
  4504  07D0  00D5               	movwf	?___awmod+2
  4505  07D1  30E8               	movlw	232
  4506  07D2  00D3               	movwf	?___awmod
  4507  07D3  3003               	movlw	3
  4508  07D4  00D4               	movwf	?___awmod+1
  4509  07D5  0008               	return
  4510  07D6                     PL10:	
  4511  07D6  0854               	movf	?___awmod+1,w
  4512  07D7  00D6               	movwf	?___awmod+3
  4513  07D8  0853               	movf	?___awmod,w
  4514  07D9  00D5               	movwf	?___awmod+2
  4515  07DA  3064               	movlw	100
  4516  07DB  00D3               	movwf	?___awmod
  4517  07DC  01D4               	clrf	?___awmod+1
  4518  07DD  0008               	return
  4519                           
  4520                           	psect	text974
  4521  0D6C                     __ptext974:	
  4522 ;; =============== function _lcd_init ends ============
  4523                           
  4524                           
  4525 ;; *************** function _RFID_read *****************
  4526 ;; Defined at:
  4527 ;;		line 73 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  i               2    3[BANK0 ] int 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;		None               void
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       0       0       0       0
  4542 ;;      Locals:         0       2       0       0       0
  4543 ;;      Temps:          0       0       0       0       0
  4544 ;;      Totals:         0       2       0       0       0
  4545 ;;Total ram usage:        2 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    4
  4548 ;; This function calls:
  4549 ;;		_softreceive
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554  0D6C                     _RFID_read:	
  4555                           
  4556                           ;Main.c: 74: if(!rfid_flag)
  4557                           
  4558                           ; Regs used in _RFID_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4559  0D6C  1876               	btfsc	_rfid_flag/(0+8),_rfid_flag& (0+7)
  4560  0D6D  0008               	return
  4561  0D6E  25AB               	call	PL11	;select bank 0
  4562                           
  4563                           ;Main.c: 75: {
  4564                           ;Main.c: 76: for(int i=0;i<12;i++)
  4565  0D6F  01D6               	clrf	RFID_read@i
  4566  0D70  01D7               	clrf	RFID_read@i+1
  4567  0D71                     l4294:	
  4568  0D71  25AB               	call	PL11	;select bank 0
  4569                           
  4570                           ;Main.c: 77: {card_store[i]=softreceive();}
  4571  0D72  0856               	movf	RFID_read@i,w
  4572  0D73  3E37               	addlw	_card_store& (0+255)
  4573  0D74  0084               	movwf	4
  4574  0D75  258A  120A  158A   	fcall	_softreceive
  4575  0D78  1383               	bcf	3,7	;select IRP bank0
  4576  0D79  0080               	movwf	0
  4577  0D7A  0AD6               	incf	RFID_read@i,f
  4578  0D7B  1903               	skipnz
  4579  0D7C  0AD7               	incf	RFID_read@i+1,f
  4580  0D7D  0857               	movf	RFID_read@i+1,w
  4581  0D7E  3A80               	xorlw	128
  4582  0D7F  00FF               	movwf	127
  4583  0D80  3080               	movlw	128
  4584  0D81  027F               	subwf	127,w
  4585  0D82  1D03               	skipz
  4586  0D83  2D86               	goto	u1605
  4587  0D84  300C               	movlw	12
  4588  0D85  0256               	subwf	RFID_read@i,w
  4589  0D86                     u1605:	
  4590  0D86  1C03               	skipc
  4591  0D87  2D71               	goto	l4294
  4592                           
  4593                           ;Main.c: 78: rfid_flag=1;
  4594  0D88  1476               	bsf	_rfid_flag/(0+8),_rfid_flag& (0+7)
  4595  0D89  0008               	return
  4596  0D8A                     __end_of_RFID_read:	
  4597  0D8A                     __ptext981:	
  4598 ;; =============== function _ReadAmnt ends ============
  4599                           
  4600                           
  4601 ;; *************** function _softreceive *****************
  4602 ;; Defined at:
  4603 ;;		line 21 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  mask            1    2[BANK0 ] unsigned char 
  4608 ;;  Data            1    1[BANK0 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      unsigned char 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 60/0
  4615 ;;		On exit  : 60/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         0       0       0       0       0
  4619 ;;      Locals:         0       2       0       0       0
  4620 ;;      Temps:          0       1       0       0       0
  4621 ;;      Totals:         0       3       0       0       0
  4622 ;;Total ram usage:        3 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    3
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_RFID_read
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631  0D8A                     _softreceive:	
  4632                           
  4633                           ;softuart.c: 22: char mask;
  4634                           ;softuart.c: 23: char Data;
  4635                           ;softuart.c: 24: Data=0;
  4636                           
  4637                           ; Regs used in _softreceive: [wreg+status,2+status,0]
  4638  0D8A  01D4               	clrf	softreceive@Data
  4639  0D8B                     l992:	
  4640                           ;softuart.c: 25: while(RD0);
  4641                           
  4642  0D8B  1808               	btfsc	8,0
  4643  0D8C  2D8B               	goto	l992
  4644                           
  4645                           ;softuart.c: 26: _delay((unsigned long)(((((1000000/9600)-2)/2))*(20000000/4000000.0)));
  4646  0D8D  3054               	movlw	84
  4647  0D8E  00D3               	movwf	??_softreceive
  4648  0D8F                     u1867:	
  4649  0D8F  0BD3               	decfsz	??_softreceive,f
  4650  0D90  2D8F               	goto	u1867
  4651  0D91  2D92               	nop2	;nop
  4652  0D92  25AB               	call	PL11	;select bank 0
  4653                           
  4654                           ;softuart.c: 27: for(mask=0x01;mask!=0;mask=mask<<1)
  4655  0D93  01D5               	clrf	softreceive@mask
  4656  0D94  0AD5               	incf	softreceive@mask,f
  4657  0D95                     l4216:	
  4658                           
  4659                           ;softuart.c: 28: {
  4660                           ;softuart.c: 29: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  4661  0D95  30A9               	movlw	169
  4662  0D96  00D3               	movwf	??_softreceive
  4663  0D97                     u1877:	
  4664  0D97  0BD3               	decfsz	??_softreceive,f
  4665  0D98  2D97               	goto	u1877
  4666  0D99  2D9A               	nop2	;nop
  4667  0D9A  25AB               	call	PL11	;select bank 0
  4668                           
  4669                           ;softuart.c: 30: if(RD0)Data=Data|mask;
  4670  0D9B  0855               	movf	softreceive@mask,w
  4671  0D9C  1808               	btfsc	8,0
  4672  0D9D  04D4               	iorwf	softreceive@Data,f
  4673  0D9E  1003               	clrc
  4674  0D9F  0DD5               	rlf	softreceive@mask,f
  4675  0DA0  08D5               	movf	softreceive@mask,f
  4676  0DA1  1D03               	skipz
  4677  0DA2  2D95               	goto	l4216
  4678                           
  4679                           ;softuart.c: 31: }
  4680                           ;softuart.c: 32: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  4681  0DA3  30A9               	movlw	169
  4682  0DA4  00D3               	movwf	??_softreceive
  4683  0DA5                     u1887:	
  4684  0DA5  0BD3               	decfsz	??_softreceive,f
  4685  0DA6  2DA5               	goto	u1887
  4686  0DA7  2DA8               	nop2	;nop
  4687  0DA8  25AB               	call	PL11	;select bank 0
  4688                           
  4689                           ;softuart.c: 33: return Data;
  4690  0DA9  0854               	movf	softreceive@Data,w
  4691  0DAA  0008               	return
  4692  0DAB                     __end_of_softreceive:	
  4693  0DAB                     PL11:	
  4694  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0DAD  0008               	return
  4697                           
  4698                           	psect	text977
  4699  0EA0                     __ptext977:	
  4700 ;; =============== function _lcdcmd ends ============
  4701                           
  4702                           
  4703 ;; *************** function _LoadStockToArray *****************
  4704 ;; Defined at:
  4705 ;;		line 177 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 60/0
  4716 ;;		On exit  : 60/0
  4717 ;;		Unchanged: FFE9F/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         0       2       0       0       0
  4721 ;;      Temps:          0       0       0       0       0
  4722 ;;      Totals:         0       2       0       0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    4
  4726 ;; This function calls:
  4727 ;;		___lwdiv
  4728 ;;		___lwmod
  4729 ;; This function is called by:
  4730 ;;		_main
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733  0EA0                     _LoadStockToArray:	
  4734                           
  4735                           ;Main.c: 178: RiseArray[0] = digit[RiseStock/1000];
  4736                           
  4737                           ; Regs used in _LoadStockToArray: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4738  0EA0  30E8               	movlw	232
  4739  0EA1  00D8               	movwf	?___lwdiv
  4740  0EA2  3003               	movlw	3
  4741  0EA3  00D9               	movwf	?___lwdiv+1
  4742  0EA4  0823               	movf	_RiseStock+1,w
  4743  0EA5  00DB               	movwf	?___lwdiv+3
  4744  0EA6  0822               	movf	_RiseStock,w
  4745  0EA7  00DA               	movwf	?___lwdiv+2
  4746  0EA8  27A2  120A  158A   	fcall	___lwdiv
  4747  0EAB  0858               	movf	?___lwdiv,w
  4748  0EAC  27CC               	fcall	PL2	;call to abstracted procedure
  4749  0EAD  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4750  0EB2  00C6               	movwf	_RiseArray
  4751                           
  4752                           ;Main.c: 179: RiseArray[1] = digit[RiseStock%1000/100];
  4753  0EB3  3064               	movlw	100
  4754  0EB4  00D8               	movwf	?___lwdiv
  4755  0EB5  01D9               	clrf	?___lwdiv+1
  4756  0EB6  27DF  120A  158A   	fcall	PL5	;call to abstracted procedure
  4757  0EB9  277E  120A  158A   	fcall	___lwmod
  4758  0EBC  0854               	movf	?___lwmod+1,w
  4759  0EBD  00DB               	movwf	?___lwdiv+3
  4760  0EBE  0853               	movf	?___lwmod,w
  4761  0EBF  00DA               	movwf	?___lwdiv+2
  4762  0EC0  27A2  120A  158A   	fcall	___lwdiv
  4763  0EC3  0858               	movf	?___lwdiv,w
  4764  0EC4  27CC               	fcall	PL2	;call to abstracted procedure
  4765  0EC5  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4766  0ECA  00C7               	movwf	_RiseArray+1
  4767                           
  4768                           ;Main.c: 180: RiseArray[2] = digit[RiseStock%1000%100/10];
  4769  0ECB  300A               	movlw	10
  4770  0ECC  00D8               	movwf	?___lwdiv
  4771  0ECD  01D9               	clrf	?___lwdiv+1
  4772  0ECE  27DF  120A  158A   	fcall	PL5	;call to abstracted procedure
  4773  0ED1  277E  120A  158A   	fcall	___lwmod
  4774  0ED4  27F0  120A  158A   	fcall	PL8	;call to abstracted procedure
  4775  0ED7  277E  120A  158A   	fcall	___lwmod
  4776  0EDA  0854               	movf	?___lwmod+1,w
  4777  0EDB  00DB               	movwf	?___lwdiv+3
  4778  0EDC  0853               	movf	?___lwmod,w
  4779  0EDD  00DA               	movwf	?___lwdiv+2
  4780  0EDE  27A2  120A  158A   	fcall	___lwdiv
  4781  0EE1  0858               	movf	?___lwdiv,w
  4782  0EE2  27CC               	fcall	PL2	;call to abstracted procedure
  4783  0EE3  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4784  0EE8  00C8               	movwf	_RiseArray+2
  4785                           
  4786                           ;Main.c: 181: RiseArray[3] = digit[RiseStock%1000%100%10];
  4787  0EE9  27DF  120A  158A   	fcall	PL5	;call to abstracted procedure
  4788  0EEC  277E  120A  158A   	fcall	___lwmod
  4789  0EEF  27F0  120A  158A   	fcall	PL8	;call to abstracted procedure
  4790  0EF2  277E  120A  158A   	fcall	___lwmod
  4791                           
  4792                           ;Main.c: 181: RiseArray[3] = digit[RiseStock%1000%100%10];
  4793  0EF5  27D3  120A  158A   	fcall	PL3	;call to abstracted procedure
  4794  0EF8  277E  120A  158A   	fcall	___lwmod
  4795  0EFB  0853               	movf	?___lwmod,w
  4796  0EFC  27CC               	fcall	PL2	;call to abstracted procedure
  4797  0EFD  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4798  0F02  00C9               	movwf	_RiseArray+3
  4799                           
  4800                           ;Main.c: 182: SugarArray[0] = digit[SugarStock/100];
  4801  0F03  3064               	movlw	100
  4802  0F04  00D8               	movwf	?___lwdiv
  4803  0F05  01D9               	clrf	?___lwdiv+1
  4804  0F06  0825               	movf	_SugarStock+1,w
  4805  0F07  00DB               	movwf	?___lwdiv+3
  4806  0F08  0824               	movf	_SugarStock,w
  4807  0F09  00DA               	movwf	?___lwdiv+2
  4808  0F0A  27A2  120A  158A   	fcall	___lwdiv
  4809  0F0D  0858               	movf	?___lwdiv,w
  4810  0F0E  27CC               	fcall	PL2	;call to abstracted procedure
  4811  0F0F  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4812  0F14  00CF               	movwf	_SugarArray
  4813                           
  4814                           ;Main.c: 183: SugarArray[1] = digit[SugarStock%100/10];
  4815  0F15  300A               	movlw	10
  4816  0F16  00D8               	movwf	?___lwdiv
  4817  0F17  01D9               	clrf	?___lwdiv+1
  4818  0F18  27E8  120A  158A   	fcall	PL7	;call to abstracted procedure
  4819  0F1B  277E  120A  158A   	fcall	___lwmod
  4820  0F1E  0854               	movf	?___lwmod+1,w
  4821  0F1F  00DB               	movwf	?___lwdiv+3
  4822  0F20  0853               	movf	?___lwmod,w
  4823  0F21  00DA               	movwf	?___lwdiv+2
  4824  0F22  27A2  120A  158A   	fcall	___lwdiv
  4825  0F25  0858               	movf	?___lwdiv,w
  4826  0F26  27CC               	fcall	PL2	;call to abstracted procedure
  4827  0F27  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4828  0F2C  00D0               	movwf	_SugarArray+1
  4829                           
  4830                           ;Main.c: 184: SugarArray[2] = digit[SugarStock%100%10];
  4831  0F2D  27E8  120A  158A   	fcall	PL7	;call to abstracted procedure
  4832  0F30  277E  120A  158A   	fcall	___lwmod
  4833                           
  4834                           ;Main.c: 184: SugarArray[2] = digit[SugarStock%100%10];
  4835  0F33  27D3  120A  158A   	fcall	PL3	;call to abstracted procedure
  4836  0F36  277E  120A  158A   	fcall	___lwmod
  4837  0F39  0853               	movf	?___lwmod,w
  4838  0F3A  27CC               	fcall	PL2	;call to abstracted procedure
  4839  0F3B  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4840  0F40  00D1               	movwf	_SugarArray+2
  4841                           
  4842                           ;Main.c: 185: KeroseneArray[0] = digit[KeroseneStock/100];
  4843  0F41  3064               	movlw	100
  4844  0F42  00D8               	movwf	?___lwdiv
  4845  0F43  01D9               	clrf	?___lwdiv+1
  4846  0F44  0821               	movf	_KeroseneStock+1,w
  4847  0F45  00DB               	movwf	?___lwdiv+3
  4848  0F46  0820               	movf	_KeroseneStock,w
  4849  0F47  00DA               	movwf	?___lwdiv+2
  4850  0F48  27A2  120A  158A   	fcall	___lwdiv
  4851  0F4B  0858               	movf	?___lwdiv,w
  4852  0F4C  27CC               	fcall	PL2	;call to abstracted procedure
  4853  0F4D  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4854  0F52  00CB               	movwf	_KeroseneArray
  4855                           
  4856                           ;Main.c: 186: KeroseneArray[1] = digit[KeroseneStock%100/10];
  4857  0F53  300A               	movlw	10
  4858  0F54  00D8               	movwf	?___lwdiv
  4859  0F55  01D9               	clrf	?___lwdiv+1
  4860  0F56  27F8  120A  158A   	fcall	PL9	;call to abstracted procedure
  4861  0F59  277E  120A  158A   	fcall	___lwmod
  4862  0F5C  0854               	movf	?___lwmod+1,w
  4863  0F5D  00DB               	movwf	?___lwdiv+3
  4864  0F5E  0853               	movf	?___lwmod,w
  4865  0F5F  00DA               	movwf	?___lwdiv+2
  4866  0F60  27A2  120A  158A   	fcall	___lwdiv
  4867  0F63  0858               	movf	?___lwdiv,w
  4868  0F64  27CC               	fcall	PL2	;call to abstracted procedure
  4869  0F65  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  4870  0F6A  00CC               	movwf	_KeroseneArray+1
  4871                           
  4872                           ;Main.c: 187: KeroseneArray[2] = digit[KeroseneStock%100%10];
  4873  0F6B  27F8  120A  158A   	fcall	PL9	;call to abstracted procedure
  4874  0F6E  277E  120A  158A   	fcall	___lwmod
  4875                           
  4876                           ;Main.c: 187: KeroseneArray[2] = digit[KeroseneStock%100%10];
  4877  0F71  27D3  120A  158A   	fcall	PL3	;call to abstracted procedure
  4878  0F74  277E  120A  158A   	fcall	___lwmod
  4879  0F77  0853               	movf	?___lwmod,w
  4880  0F78  27CC               	fcall	PL2	;call to abstracted procedure
  4881  0F79  160A  118A  2000   	fcall	stringtab
  4882  0F7C  00CD               	movwf	_KeroseneArray+2
  4883  0F7D  0008               	return
  4884  0F7E                     __end_of_LoadStockToArray:	
  4885  0F7E                     __ptext988:	
  4886 ;; =============== function ___lbdiv ends ============
  4887                           
  4888                           
  4889 ;; *************** function ___lwmod *****************
  4890 ;; Defined at:
  4891 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwmod.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  divisor         2    0[BANK0 ] unsigned int 
  4894 ;;  dividend        2    2[BANK0 ] unsigned int 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  counter         1    4[BANK0 ] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  2    0[BANK0 ] unsigned int 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 60/0
  4903 ;;		On exit  : 60/0
  4904 ;;		Unchanged: FFF9F/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         0       4       0       0       0
  4907 ;;      Locals:         0       1       0       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         0       5       0       0       0
  4910 ;;Total ram usage:        5 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    3
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_LoadStockToArray
  4917 ;;		_main
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920  0F7E                     ___lwmod:	
  4921                           
  4922                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4923  0F7E  0854               	movf	___lwmod@divisor+1,w
  4924  0F7F  0453               	iorwf	___lwmod@divisor,w
  4925  0F80  1903               	skipnz
  4926  0F81  2F9D               	goto	l4114
  4927  0F82  01D7               	clrf	___lwmod@counter
  4928  0F83                     L10:	
  4929  0F83  0AD7               	incf	___lwmod@counter,f
  4930  0F84  1BD4               	btfsc	___lwmod@divisor+1,7
  4931  0F85  2F8A               	goto	l4106
  4932  0F86  1003               	clrc
  4933  0F87  0DD3               	rlf	___lwmod@divisor,f
  4934  0F88  0DD4               	rlf	___lwmod@divisor+1,f
  4935  0F89  2F83               	goto	L10
  4936  0F8A                     l4106:	
  4937  0F8A  0854               	movf	___lwmod@divisor+1,w
  4938  0F8B  0256               	subwf	___lwmod@dividend+1,w
  4939  0F8C  1D03               	skipz
  4940  0F8D  2F90               	goto	u1405
  4941  0F8E  0853               	movf	___lwmod@divisor,w
  4942  0F8F  0255               	subwf	___lwmod@dividend,w
  4943  0F90                     u1405:	
  4944  0F90  1C03               	skipc
  4945  0F91  2F99               	goto	L11
  4946  0F92  0853               	movf	___lwmod@divisor,w
  4947  0F93  02D5               	subwf	___lwmod@dividend,f
  4948  0F94  0854               	movf	___lwmod@divisor+1,w
  4949  0F95  1C03               	skipc
  4950  0F96  03D6               	decf	___lwmod@dividend+1,f
  4951  0F97  02D6               	subwf	___lwmod@dividend+1,f
  4952  0F98  1003               	clrc
  4953  0F99                     L11:	
  4954  0F99  0CD4               	rrf	___lwmod@divisor+1,f
  4955  0F9A  0CD3               	rrf	___lwmod@divisor,f
  4956  0F9B  0BD7               	decfsz	___lwmod@counter,f
  4957  0F9C  2F8A               	goto	l4106
  4958  0F9D                     l4114:	
  4959  0F9D  0856               	movf	___lwmod@dividend+1,w
  4960  0F9E  00D4               	movwf	?___lwmod+1
  4961  0F9F  0855               	movf	___lwmod@dividend,w
  4962  0FA0  00D3               	movwf	?___lwmod
  4963  0FA1  0008               	return
  4964  0FA2                     __end_of___lwmod:	
  4965  0FA2                     __ptext989:	
  4966 ;; =============== function ___lwmod ends ============
  4967                           
  4968                           
  4969 ;; *************** function ___lwdiv *****************
  4970 ;; Defined at:
  4971 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  divisor         2    5[BANK0 ] unsigned int 
  4974 ;;  dividend        2    7[BANK0 ] unsigned int 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  quotient        2    9[BANK0 ] unsigned int 
  4977 ;;  counter         1   11[BANK0 ] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  2    5[BANK0 ] unsigned int 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 60/0
  4984 ;;		On exit  : 60/0
  4985 ;;		Unchanged: FFF9F/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4987 ;;      Params:         0       4       0       0       0
  4988 ;;      Locals:         0       3       0       0       0
  4989 ;;      Temps:          0       0       0       0       0
  4990 ;;      Totals:         0       7       0       0       0
  4991 ;;Total ram usage:        7 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    3
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_LoadStockToArray
  4998 ;;		_main
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001  0FA2                     ___lwdiv:	
  5002                           
  5003                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5004  0FA2  01DC               	clrf	___lwdiv@quotient
  5005  0FA3  01DD               	clrf	___lwdiv@quotient+1
  5006  0FA4  0859               	movf	___lwdiv@divisor+1,w
  5007  0FA5  0458               	iorwf	___lwdiv@divisor,w
  5008  0FA6  1903               	skipnz
  5009  0FA7  2FC7               	goto	l3334
  5010  0FA8  01DE               	clrf	___lwdiv@counter
  5011  0FA9                     L12:	
  5012  0FA9  0ADE               	incf	___lwdiv@counter,f
  5013  0FAA  1BD9               	btfsc	___lwdiv@divisor+1,7
  5014  0FAB  2FB0               	goto	l3322
  5015  0FAC  1003               	clrc
  5016  0FAD  0DD8               	rlf	___lwdiv@divisor,f
  5017  0FAE  0DD9               	rlf	___lwdiv@divisor+1,f
  5018  0FAF  2FA9               	goto	L12
  5019  0FB0                     l3322:	
  5020  0FB0  1003               	clrc
  5021  0FB1  0DDC               	rlf	___lwdiv@quotient,f
  5022  0FB2  0DDD               	rlf	___lwdiv@quotient+1,f
  5023  0FB3  0859               	movf	___lwdiv@divisor+1,w
  5024  0FB4  025B               	subwf	___lwdiv@dividend+1,w
  5025  0FB5  1D03               	skipz
  5026  0FB6  2FB9               	goto	u875
  5027  0FB7  0858               	movf	___lwdiv@divisor,w
  5028  0FB8  025A               	subwf	___lwdiv@dividend,w
  5029  0FB9                     u875:	
  5030  0FB9  1C03               	skipc
  5031  0FBA  2FC3               	goto	L13
  5032  0FBB  0858               	movf	___lwdiv@divisor,w
  5033  0FBC  02DA               	subwf	___lwdiv@dividend,f
  5034  0FBD  0859               	movf	___lwdiv@divisor+1,w
  5035  0FBE  1C03               	skipc
  5036  0FBF  03DB               	decf	___lwdiv@dividend+1,f
  5037  0FC0  02DB               	subwf	___lwdiv@dividend+1,f
  5038  0FC1  145C               	bsf	___lwdiv@quotient,0
  5039  0FC2  1003               	clrc
  5040  0FC3                     L13:	
  5041  0FC3  0CD9               	rrf	___lwdiv@divisor+1,f
  5042  0FC4  0CD8               	rrf	___lwdiv@divisor,f
  5043  0FC5  0BDE               	decfsz	___lwdiv@counter,f
  5044  0FC6  2FB0               	goto	l3322
  5045  0FC7                     l3334:	
  5046  0FC7  085D               	movf	___lwdiv@quotient+1,w
  5047  0FC8  00D9               	movwf	?___lwdiv+1
  5048  0FC9  085C               	movf	___lwdiv@quotient,w
  5049  0FCA  00D8               	movwf	?___lwdiv
  5050  0FCB  0008               	return
  5051  0FCC                     __end_of___lwdiv:	
  5052  0FCC                     PL2:	
  5053  0FCC  3E12               	addlw	low (_digit| (0+32768))
  5054  0FCD  0084               	movwf	4
  5055  0FCE  3090               	movlw	high (_digit| (0+32768))
  5056  0FCF  1803               	skipnc
  5057  0FD0  3E01               	addlw	1
  5058  0FD1  00FF               	movwf	127
  5059  0FD2  0008               	return
  5060  0FD3                     PL3:	
  5061  0FD3  0854               	movf	?___lwmod+1,w
  5062  0FD4  00E0               	movwf	_LoadStockToArray$1137+1
  5063  0FD5  0853               	movf	?___lwmod,w
  5064  0FD6  00DF               	movwf	_LoadStockToArray$1137
  5065  0FD7  300A               	movlw	10
  5066  0FD8  00D3               	movwf	?___lwmod
  5067  0FD9  01D4               	clrf	?___lwmod+1
  5068  0FDA  0860               	movf	_LoadStockToArray$1137+1,w
  5069  0FDB  00D6               	movwf	?___lwmod+3
  5070  0FDC  085F               	movf	_LoadStockToArray$1137,w
  5071  0FDD  00D5               	movwf	?___lwmod+2
  5072  0FDE  0008               	return
  5073  0FDF                     PL5:	
  5074  0FDF  0823               	movf	_RiseStock+1,w
  5075  0FE0  00D6               	movwf	?___lwmod+3
  5076  0FE1  0822               	movf	_RiseStock,w
  5077  0FE2  00D5               	movwf	?___lwmod+2
  5078  0FE3  30E8               	movlw	232
  5079  0FE4  00D3               	movwf	?___lwmod
  5080  0FE5  3003               	movlw	3
  5081  0FE6  00D4               	movwf	?___lwmod+1
  5082  0FE7  0008               	return
  5083  0FE8                     PL7:	
  5084  0FE8  0825               	movf	_SugarStock+1,w
  5085  0FE9  00D6               	movwf	?___lwmod+3
  5086  0FEA  0824               	movf	_SugarStock,w
  5087  0FEB  00D5               	movwf	?___lwmod+2
  5088  0FEC  3064               	movlw	100
  5089  0FED  00D3               	movwf	?___lwmod
  5090  0FEE  01D4               	clrf	?___lwmod+1
  5091  0FEF  0008               	return
  5092  0FF0                     PL8:	
  5093  0FF0  0854               	movf	?___lwmod+1,w
  5094  0FF1  00D6               	movwf	?___lwmod+3
  5095  0FF2  0853               	movf	?___lwmod,w
  5096  0FF3  00D5               	movwf	?___lwmod+2
  5097  0FF4  3064               	movlw	100
  5098  0FF5  00D3               	movwf	?___lwmod
  5099  0FF6  01D4               	clrf	?___lwmod+1
  5100  0FF7  0008               	return
  5101  0FF8                     PL9:	
  5102  0FF8  0821               	movf	_KeroseneStock+1,w
  5103  0FF9  00D6               	movwf	?___lwmod+3
  5104  0FFA  0820               	movf	_KeroseneStock,w
  5105  0FFB  00D5               	movwf	?___lwmod+2
  5106  0FFC  3064               	movlw	100
  5107  0FFD  00D3               	movwf	?___lwmod
  5108  0FFE  01D4               	clrf	?___lwmod+1
  5109  0FFF  0008               	return
  5110                           
  5111                           	psect	text978
  5112  0DAE                     __ptext978:	
  5113 ;; =============== function _LoadStockToArray ends ============
  5114                           
  5115                           
  5116 ;; *************** function _paramter *****************
  5117 ;; Defined at:
  5118 ;;		line 156 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;		None               void
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 60/0
  5129 ;;		On exit  : 60/40
  5130 ;;		Unchanged: FFE00/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0
  5135 ;;      Totals:         0       0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    4
  5139 ;; This function calls:
  5140 ;;		_eeprom_read
  5141 ;;		___wmul
  5142 ;; This function is called by:
  5143 ;;		_main
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146  0DAE                     _paramter:	
  5147                           
  5148                           ;Main.c: 157: c1=(eeprom_read(0)*100)+eeprom_read(1);
  5149                           
  5150                           ; Regs used in _paramter: [wreg+status,2+status,0+pclath+cstack]
  5151  0DAE  3000               	movlw	0
  5152  0DAF  2662  120A  158A   	fcall	_eeprom_read
  5153  0DB2  2699  120A  158A   	fcall	PL4	;call to abstracted procedure
  5154  0DB5  2680  120A  158A   	fcall	___wmul
  5155  0DB8  3001               	movlw	1
  5156  0DB9  2662  120A  158A   	fcall	_eeprom_read
  5157                           
  5158                           ;Main.c: 158: c2=(eeprom_read(2)*100)+eeprom_read(3);
  5159  0DBC  3002               	movlw	2
  5160  0DBD  2662  120A  158A   	fcall	_eeprom_read
  5161  0DC0  2699  120A  158A   	fcall	PL4	;call to abstracted procedure
  5162  0DC3  2680  120A  158A   	fcall	___wmul
  5163  0DC6  3003               	movlw	3
  5164  0DC7  2E62               	ljmp	_eeprom_read
  5165  0DC8                     __end_of_paramter:	
  5166  0DC8                     __ptext979:	
  5167 ;; =============== function _paramter ends ============
  5168                           
  5169                           
  5170 ;; *************** function _ReadStock *****************
  5171 ;; Defined at:
  5172 ;;		line 107 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;		None               void
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/20
  5183 ;;		On exit  : 60/0
  5184 ;;		Unchanged: FFE00/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5186 ;;      Params:         0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    4
  5193 ;; This function calls:
  5194 ;;		_eeprom_read
  5195 ;;		___wmul
  5196 ;; This function is called by:
  5197 ;;		_main
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200  0DC8                     _ReadStock:	
  5201                           
  5202                           ;Main.c: 108: RiseStock=(eeprom_read(24)*100)+eeprom_read(25);
  5203                           
  5204                           ; Regs used in _ReadStock: [wreg+status,2+status,0+pclath+cstack]
  5205  0DC8  3018               	movlw	24
  5206  0DC9  2662  120A  158A   	fcall	_eeprom_read
  5207  0DCC  2699  120A  158A   	fcall	PL4	;call to abstracted procedure
  5208  0DCF  2680  120A  158A   	fcall	___wmul
  5209  0DD2  0857               	movf	?___wmul+1,w
  5210  0DD3  00A3               	movwf	_RiseStock+1
  5211  0DD4  0856               	movf	?___wmul,w
  5212  0DD5  00A2               	movwf	_RiseStock
  5213  0DD6  3019               	movlw	25
  5214  0DD7  2662  120A  158A   	fcall	_eeprom_read
  5215  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  5216  0DDB  07A2               	addwf	_RiseStock,f
  5217  0DDC  1803               	skipnc
  5218  0DDD  0AA3               	incf	_RiseStock+1,f
  5219                           
  5220                           ;Main.c: 109: SugarStock=eeprom_read(26);
  5221  0DDE  301A               	movlw	26
  5222  0DDF  2662  120A  158A   	fcall	_eeprom_read
  5223  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  5224  0DE3  00A4               	movwf	_SugarStock
  5225  0DE4  01A5               	clrf	_SugarStock+1
  5226                           
  5227                           ;Main.c: 110: KeroseneStock=eeprom_read(27);
  5228  0DE5  301B               	movlw	27
  5229  0DE6  2662               	fcall	_eeprom_read
  5230  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  5231  0DE8  00A0               	movwf	_KeroseneStock
  5232  0DE9  01A1               	clrf	_KeroseneStock+1
  5233  0DEA  0008               	return
  5234  0DEB                     __end_of_ReadStock:	
  5235  0DEB                     __ptext980:	
  5236 ;; =============== function _ReadStock ends ============
  5237                           
  5238                           
  5239 ;; *************** function _ReadAmnt *****************
  5240 ;; Defined at:
  5241 ;;		line 91 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;		None               void
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0, pclath, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 160/0
  5252 ;;		On exit  : 60/0
  5253 ;;		Unchanged: FFE00/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    4
  5262 ;; This function calls:
  5263 ;;		_eeprom_read
  5264 ;;		___wmul
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269  0DEB                     _ReadAmnt:	
  5270                           
  5271                           ;Main.c: 92: User1amt=(eeprom_read(0)*100)+eeprom_read(1);
  5272                           
  5273                           ; Regs used in _ReadAmnt: [wreg+status,2+status,0+pclath+cstack]
  5274  0DEB  3000               	movlw	0
  5275  0DEC  2662  120A  158A   	fcall	_eeprom_read
  5276  0DEF  2699  120A  158A   	fcall	PL4	;call to abstracted procedure
  5277  0DF2  2680  120A  158A   	fcall	___wmul
  5278  0DF5  0857               	movf	?___wmul+1,w
  5279  0DF6  00A9               	movwf	_User1amt+1
  5280  0DF7  0856               	movf	?___wmul,w
  5281  0DF8  00A8               	movwf	_User1amt
  5282  0DF9  3001               	movlw	1
  5283  0DFA  2662  120A  158A   	fcall	_eeprom_read
  5284  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5285  0DFE  07A8               	addwf	_User1amt,f
  5286  0DFF  1803               	skipnc
  5287  0E00  0AA9               	incf	_User1amt+1,f
  5288                           
  5289                           ;Main.c: 93: User2amt=(eeprom_read(8)*100)+eeprom_read(9);
  5290  0E01  3008               	movlw	8
  5291  0E02  2662  120A  158A   	fcall	_eeprom_read
  5292  0E05  2699  120A  158A   	fcall	PL4	;call to abstracted procedure
  5293  0E08  2680  120A  158A   	fcall	___wmul
  5294  0E0B  0857               	movf	?___wmul+1,w
  5295  0E0C  00AB               	movwf	_User2amt+1
  5296  0E0D  0856               	movf	?___wmul,w
  5297  0E0E  00AA               	movwf	_User2amt
  5298  0E0F  3009               	movlw	9
  5299  0E10  2662  120A  158A   	fcall	_eeprom_read
  5300  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  5301  0E14  07AA               	addwf	_User2amt,f
  5302  0E15  1803               	skipnc
  5303  0E16  0AAB               	incf	_User2amt+1,f
  5304                           
  5305                           ;Main.c: 94: User3amt=(eeprom_read(16)*100)+eeprom_read(17);
  5306  0E17  3010               	movlw	16
  5307  0E18  2662  120A  158A   	fcall	_eeprom_read
  5308  0E1B  2699  120A  158A   	fcall	PL4	;call to abstracted procedure
  5309  0E1E  2680  120A  158A   	fcall	___wmul
  5310  0E21  0857               	movf	?___wmul+1,w
  5311  0E22  00AD               	movwf	_User3amt+1
  5312  0E23  0856               	movf	?___wmul,w
  5313  0E24  00AC               	movwf	_User3amt
  5314  0E25  3011               	movlw	17
  5315  0E26  2662  120A  158A   	fcall	_eeprom_read
  5316  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0E2A  07AC               	addwf	_User3amt,f
  5318  0E2B  1803               	skipnc
  5319  0E2C  0AAD               	incf	_User3amt+1,f
  5320                           
  5321                           ;Main.c: 95: User1Rise = eeprom_read(2);
  5322  0E2D  3002               	movlw	2
  5323  0E2E  2662  120A  158A   	fcall	_eeprom_read
  5324  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0E32  00AF               	movwf	_User1Rise
  5326                           
  5327                           ;Main.c: 96: User2Rise = eeprom_read(10);
  5328  0E33  300A               	movlw	10
  5329  0E34  2662  120A  158A   	fcall	_eeprom_read
  5330  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  5331  0E38  00B2               	movwf	_User2Rise
  5332                           
  5333                           ;Main.c: 97: User3Rise = eeprom_read(18);
  5334  0E39  3012               	movlw	18
  5335  0E3A  2662  120A  158A   	fcall	_eeprom_read
  5336  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0E3E  00B5               	movwf	_User3Rise
  5338                           
  5339                           ;Main.c: 98: User1Kerosene = eeprom_read(4);
  5340  0E3F  3004               	movlw	4
  5341  0E40  2662  120A  158A   	fcall	_eeprom_read
  5342  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  5343  0E44  00AE               	movwf	_User1Kerosene
  5344                           
  5345                           ;Main.c: 99: User2Kerosene = eeprom_read(12);
  5346  0E45  300C               	movlw	12
  5347  0E46  2662  120A  158A   	fcall	_eeprom_read
  5348  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  5349  0E4A  00B1               	movwf	_User2Kerosene
  5350                           
  5351                           ;Main.c: 100: User3Kerosene = eeprom_read(20);
  5352  0E4B  3014               	movlw	20
  5353  0E4C  2662  120A  158A   	fcall	_eeprom_read
  5354  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  5355  0E50  00B4               	movwf	_User3Kerosene
  5356                           
  5357                           ;Main.c: 101: User1Sugar = eeprom_read(3);
  5358  0E51  3003               	movlw	3
  5359  0E52  2662  120A  158A   	fcall	_eeprom_read
  5360  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0E56  00B0               	movwf	_User1Sugar
  5362                           
  5363                           ;Main.c: 102: User2Sugar = eeprom_read(11);
  5364  0E57  300B               	movlw	11
  5365  0E58  2662  120A  158A   	fcall	_eeprom_read
  5366  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0E5C  00B3               	movwf	_User2Sugar
  5368                           
  5369                           ;Main.c: 103: User3Sugar = eeprom_read(19);
  5370  0E5D  3013               	movlw	19
  5371  0E5E  2662               	fcall	_eeprom_read
  5372  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0E60  00B6               	movwf	_User3Sugar
  5374  0E61  0008               	return
  5375  0E62                     __end_of_ReadAmnt:	
  5376  0E62                     __ptext995:	
  5377 ;; =============== function _uart_init ends ============
  5378                           
  5379                           
  5380 ;; *************** function _eeprom_read *****************
  5381 ;; Defined at:
  5382 ;;		line 8 in file "eeread.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  addr            1    wreg     unsigned char 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  addr            1    2[BANK0 ] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      unsigned char 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 60/40
  5394 ;;		Unchanged: FFE00/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5396 ;;      Params:         0       0       0       0       0
  5397 ;;      Locals:         0       1       0       0       0
  5398 ;;      Temps:          0       2       0       0       0
  5399 ;;      Totals:         0       3       0       0       0
  5400 ;;Total ram usage:        3 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    3
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_ReadAmnt
  5407 ;;		_ReadStock
  5408 ;;		_paramter
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411  0E62                     _eeprom_read:	
  5412                           
  5413                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5414                           ;eeprom_read@addr stored from wreg
  5415  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0E64  00D5               	movwf	eeprom_read@addr
  5418  0E65                     l1192:	
  5419  0E65  0064               	clrwdt	;#
  5420  0E66  1683               	bsf	3,5	;RP0=1, select bank3
  5421  0E67  1703               	bsf	3,6	;RP1=1, select bank3
  5422  0E68  188C               	btfsc	12,1
  5423  0E69  2E65               	goto	l1192
  5424  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5425  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5426  0E6C  0855               	movf	eeprom_read@addr,w
  5427  0E6D  1703               	bsf	3,6	;RP1=1, select bank2
  5428  0E6E  008D               	movwf	13	;volatile
  5429  0E6F  303F               	movlw	63
  5430  0E70  1683               	bsf	3,5	;RP0=1, select bank3
  5431  0E71  058C               	andwf	12,f	;volatile
  5432  0E72  140C               	bsf	12,0
  5433  0E73  1003               	clrc
  5434  0E74  180C               	btfsc	12,0
  5435  0E75  1403               	setc
  5436  0E76  3000               	movlw	0
  5437  0E77  1803               	skipnc
  5438  0E78  3001               	movlw	1
  5439  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  5440  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0E7B  00D3               	movwf	??_eeprom_read
  5442  0E7C  01D4               	clrf	??_eeprom_read+1
  5443  0E7D  1703               	bsf	3,6	;RP1=1, select bank2
  5444  0E7E  080C               	movf	12,w	;volatile
  5445  0E7F  0008               	return
  5446  0E80                     __end_of_eeprom_read:	
  5447  0E80                     __ptext990:	
  5448 ;; =============== function ___lwdiv ends ============
  5449                           
  5450                           
  5451 ;; *************** function ___wmul *****************
  5452 ;; Defined at:
  5453 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  multiplier      2    3[BANK0 ] unsigned int 
  5456 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  product         2    7[BANK0 ] unsigned int 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    3[BANK0 ] unsigned int 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 60/0
  5465 ;;		On exit  : 60/0
  5466 ;;		Unchanged: FFF9F/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5468 ;;      Params:         0       4       0       0       0
  5469 ;;      Locals:         0       2       0       0       0
  5470 ;;      Temps:          0       0       0       0       0
  5471 ;;      Totals:         0       6       0       0       0
  5472 ;;Total ram usage:        6 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    3
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_ReadAmnt
  5479 ;;		_ReadStock
  5480 ;;		_paramter
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483  0E80                     ___wmul:	
  5484                           
  5485                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5486  0E80  01DA               	clrf	___wmul@product
  5487  0E81  01DB               	clrf	___wmul@product+1
  5488  0E82                     l3298:	
  5489  0E82  1C56               	btfss	___wmul@multiplier,0
  5490  0E83  2E8A               	goto	l3302
  5491  0E84  0858               	movf	___wmul@multiplicand,w
  5492  0E85  07DA               	addwf	___wmul@product,f
  5493  0E86  1803               	skipnc
  5494  0E87  0ADB               	incf	___wmul@product+1,f
  5495  0E88  0859               	movf	___wmul@multiplicand+1,w
  5496  0E89  07DB               	addwf	___wmul@product+1,f
  5497  0E8A                     l3302:	
  5498  0E8A  1003               	clrc
  5499  0E8B  0DD8               	rlf	___wmul@multiplicand,f
  5500  0E8C  0DD9               	rlf	___wmul@multiplicand+1,f
  5501  0E8D  1003               	clrc
  5502  0E8E  0CD7               	rrf	___wmul@multiplier+1,f
  5503  0E8F  0CD6               	rrf	___wmul@multiplier,f
  5504  0E90  0857               	movf	___wmul@multiplier+1,w
  5505  0E91  0456               	iorwf	___wmul@multiplier,w
  5506  0E92  1D03               	skipz
  5507  0E93  2E82               	goto	l3298
  5508  0E94  085B               	movf	___wmul@product+1,w
  5509  0E95  00D7               	movwf	?___wmul+1
  5510  0E96  085A               	movf	___wmul@product,w
  5511  0E97  00D6               	movwf	?___wmul
  5512  0E98  0008               	return
  5513  0E99                     __end_of___wmul:	
  5514  0E99                     PL4:	
  5515  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0E9A  00D6               	movwf	?___wmul
  5517  0E9B  01D7               	clrf	?___wmul+1
  5518  0E9C  3064               	movlw	100
  5519  0E9D  00D8               	movwf	?___wmul+2
  5520  0E9E  01D9               	clrf	?___wmul+3
  5521  0E9F  0008               	return
  5522                           
  5523                           	psect	text982
  5524  0C6A                     __ptext982:	
  5525 ;; =============== function _softreceive ends ============
  5526                           
  5527                           
  5528 ;; *************** function _SoftWareUart_Init *****************
  5529 ;; Defined at:
  5530 ;;		line 10 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\softuart.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;		None               void
  5537 ;; Registers used:
  5538 ;;		wreg
  5539 ;; Tracked objects:
  5540 ;;		On entry : 60/40
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5544 ;;      Params:         0       0       0       0       0
  5545 ;;      Locals:         0       0       0       0       0
  5546 ;;      Temps:          0       1       0       0       0
  5547 ;;      Totals:         0       1       0       0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    3
  5551 ;; This function calls:
  5552 ;;		Nothing
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557  0C6A                     _SoftWareUart_Init:	
  5558                           
  5559                           ;softuart.c: 11: RD1=1;
  5560                           
  5561                           ; Regs used in _SoftWareUart_Init: [wreg]
  5562  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  5563  0C6B  1488               	bsf	8,1
  5564                           
  5565                           ;softuart.c: 12: RD0=1;
  5566  0C6C  1408               	bsf	8,0
  5567                           
  5568                           ;softuart.c: 13: TRISD1=0;
  5569  0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  5570  0C6E  1088               	bcf	8,1
  5571                           
  5572                           ;softuart.c: 14: TRISD0=1;
  5573  0C6F  1408               	bsf	8,0
  5574                           
  5575                           ;softuart.c: 15: RD1=1;
  5576  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0C71  1488               	bsf	8,1
  5578                           
  5579                           ;softuart.c: 16: _delay((unsigned long)((((1000000/9600)-2))*(20000000/4000000.0)));
  5580  0C72  30A9               	movlw	169
  5581  0C73  00D3               	movwf	??_SoftWareUart_Init
  5582  0C74                     u1897:	
  5583  0C74  0BD3               	decfsz	??_SoftWareUart_Init,f
  5584  0C75  2C74               	goto	u1897
  5585  0C76  2C77               	nop2	;nop
  5586  0C77  0008               	return
  5587  0C78                     __end_of_SoftWareUart_Init:	
  5588                           
  5589                           	psect	text991
  5590  0CFD                     __ptext991:	
  5591 ;; =============== function ___wmul ends ============
  5592                           
  5593                           
  5594 ;; *************** function _memcmp *****************
  5595 ;; Defined at:
  5596 ;;		line 4 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\memcmp.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  s1              2    0[BANK0 ] PTR const void 
  5599 ;;		 -> STR_57(6), 
  5600 ;;  s2              1    2[BANK0 ] PTR const void 
  5601 ;;		 -> sms(20), 
  5602 ;;  n               2    3[BANK0 ] unsigned int 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  2    0[BANK0 ] int 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5609 ;; Tracked objects:
  5610 ;;		On entry : 60/0
  5611 ;;		On exit  : 60/0
  5612 ;;		Unchanged: FFE9F/0
  5613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5614 ;;      Params:         0       5       0       0       0
  5615 ;;      Locals:         0       0       0       0       0
  5616 ;;      Temps:          0       1       0       0       0
  5617 ;;      Totals:         0       6       0       0       0
  5618 ;;Total ram usage:        6 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    3
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_main
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627  0CFD                     _memcmp:	
  5628  0CFD                     l4092:	
  5629                           ; Regs used in _memcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5630                           
  5631  0CFD  3001               	movlw	1
  5632  0CFE  02D6               	subwf	memcmp@n,f
  5633  0CFF  3000               	movlw	0
  5634  0D00  1C03               	skipc
  5635  0D01  03D7               	decf	memcmp@n+1,f
  5636  0D02  02D7               	subwf	memcmp@n+1,f
  5637  0D03  0A56               	incf	memcmp@n,w
  5638  0D04  1903               	skipnz
  5639  0D05  0A57               	incf	memcmp@n+1,w
  5640  0D06  1903               	btfsc	3,2
  5641  0D07  2D30               	goto	l4094
  5642  0D08  0855               	movf	memcmp@s2,w
  5643  0D09  0084               	movwf	4
  5644  0D0A  1383               	bcf	3,7	;select IRP bank0
  5645  0D0B  0800               	movf	0,w
  5646  0D0C  00D8               	movwf	??_memcmp
  5647  0D0D  0854               	movf	memcmp@s1+1,w
  5648  0D0E  00FF               	movwf	127
  5649  0D0F  0853               	movf	memcmp@s1,w
  5650  0D10  0084               	movwf	4
  5651  0D11  160A  118A  2000   	fcall	stringtab
      +       120A  158A         
  5652  0D16  0658               	xorwf	??_memcmp,w
  5653  0D17  1903               	skipnz
  5654  0D18  2D2B               	goto	l4090
  5655  0D19  0854               	movf	memcmp@s1+1,w
  5656  0D1A  00FF               	movwf	127
  5657  0D1B  0853               	movf	memcmp@s1,w
  5658  0D1C  0084               	movwf	4
  5659  0D1D  160A  118A  2000   	fcall	stringtab
  5660  0D20  00D8               	movwf	??_memcmp
  5661  0D21  0855               	movf	memcmp@s2,w
  5662  0D22  0084               	movwf	4
  5663  0D23  1383               	bcf	3,7	;select IRP bank0
  5664  0D24  0800               	movf	0,w
  5665  0D25  0258               	subwf	??_memcmp,w
  5666  0D26  00D3               	movwf	?_memcmp
  5667  0D27  01D4               	clrf	?_memcmp+1
  5668  0D28  1C03               	skipc
  5669  0D29  03D4               	decf	?_memcmp+1,f
  5670  0D2A  0008               	return
  5671  0D2B                     l4090:	
  5672  0D2B  0AD3               	incf	memcmp@s1,f
  5673  0D2C  1903               	skipnz
  5674  0D2D  0AD4               	incf	memcmp@s1+1,f
  5675  0D2E  0AD5               	incf	memcmp@s2,f
  5676  0D2F  2CFD               	goto	l4092
  5677  0D30                     l4094:	
  5678  0D30  01D3               	clrf	?_memcmp
  5679  0D31  01D4               	clrf	?_memcmp+1
  5680  0D32  0008               	return
  5681  0D33                     __end_of_memcmp:	
  5682                           
  5683                           	psect	text992
  5684  0CB7                     __ptext992:	
  5685 ;; =============== function _memcmp ends ============
  5686                           
  5687                           
  5688 ;; *************** function _eeprom_write *****************
  5689 ;; Defined at:
  5690 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\eewrite.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  addr            1    wreg     unsigned char 
  5693 ;;  value           1   14[BANK0 ] unsigned char 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  addr            1   15[BANK0 ] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;		None               void
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 60/0
  5702 ;;		On exit  : 60/60
  5703 ;;		Unchanged: FFF9F/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5705 ;;      Params:         0       1       0       0       0
  5706 ;;      Locals:         0       1       0       0       0
  5707 ;;      Temps:          0       0       0       0       0
  5708 ;;      Totals:         0       2       0       0       0
  5709 ;;Total ram usage:        2 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    3
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_main
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718  0CB7                     _eeprom_write:	
  5719                           
  5720                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5721                           ;eeprom_write@addr stored from wreg
  5722  0CB7  00E2               	movwf	eeprom_write@addr
  5723  0CB8                     l1214:	
  5724  0CB8  1683               	bsf	3,5	;RP0=1, select bank3
  5725  0CB9  1703               	bsf	3,6	;RP1=1, select bank3
  5726  0CBA  188C               	btfsc	12,1
  5727  0CBB  2CB8               	goto	l1214
  5728  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  5729  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  5730  0CBE  0862               	movf	eeprom_write@addr,w
  5731  0CBF  1703               	bsf	3,6	;RP1=1, select bank2
  5732  0CC0  008D               	movwf	13	;volatile
  5733  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  5734  0CC2  0861               	movf	eeprom_write@value,w
  5735  0CC3  1703               	bsf	3,6	;RP1=1, select bank2
  5736  0CC4  008C               	movwf	12	;volatile
  5737  0CC5  303F               	movlw	63
  5738  0CC6  1683               	bsf	3,5	;RP0=1, select bank3
  5739  0CC7  058C               	andwf	12,f	;volatile
  5740  0CC8  1003               	bcf	3,0
  5741  0CC9  1B8B               	btfsc	11,7
  5742  0CCA  1403               	bsf	3,0
  5743  0CCB  138B               	bcf	11,7
  5744  0CCC  150C               	bsf	12,2
  5745  0CCD  3055               	movlw	85
  5746  0CCE  008D               	movwf	13	;volatile
  5747  0CCF  30AA               	movlw	170
  5748  0CD0  008D               	movwf	13	;volatile
  5749  0CD1  148C               	bsf	12,1
  5750  0CD2  110C               	bcf	12,2
  5751  0CD3  1803               	btfsc	3,0
  5752  0CD4  178B               	bsf	11,7
  5753  0CD5  0008               	return
  5754  0CD6                     __end_of_eeprom_write:	
  5755                           
  5756                           	psect	text993
  5757  0C99                     __ptext993:	
  5758 ;; =============== function _eeprom_write ends ============
  5759                           
  5760                           
  5761 ;; *************** function _strcmp *****************
  5762 ;; Defined at:
  5763 ;;		line 34 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strcmp.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  s1              1    wreg     PTR const unsigned char 
  5766 ;;		 -> card_store(15), 
  5767 ;;  s2              1    0[BANK0 ] PTR const unsigned char 
  5768 ;;		 -> User3(13), User2(13), User1(13), 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  s1              1    5[BANK0 ] PTR const unsigned char 
  5771 ;;		 -> card_store(15), 
  5772 ;;  r               1    4[BANK0 ] char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2    0[BANK0 ] int 
  5775 ;; Registers used:
  5776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 60/0
  5779 ;;		On exit  : 160/0
  5780 ;;		Unchanged: FFE9F/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       2       0       0       0
  5783 ;;      Locals:         0       2       0       0       0
  5784 ;;      Temps:          0       2       0       0       0
  5785 ;;      Totals:         0       6       0       0       0
  5786 ;;Total ram usage:        6 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    3
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795  0C99                     _strcmp:	
  5796                           
  5797                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  5798                           ;strcmp@s1 stored from wreg
  5799  0C99  00D8               	movwf	strcmp@s1
  5800  0C9A  2CA1               	goto	l4074
  5801  0C9B                     l4076:	
  5802  0C9B  0858               	movf	strcmp@s1,w
  5803  0C9C  0AD8               	incf	strcmp@s1,f
  5804  0C9D  0084               	movwf	4
  5805  0C9E  0880               	movf	0,f
  5806  0C9F  1903               	btfsc	3,2
  5807  0CA0  2CB1               	goto	l4078
  5808  0CA1                     l4074:	
  5809  0CA1  0853               	movf	strcmp@s2,w
  5810  0CA2  0AD3               	incf	strcmp@s2,f
  5811  0CA3  0084               	movwf	4
  5812  0CA4  1383               	bcf	3,7	;select IRP bank0
  5813  0CA5  0800               	movf	0,w
  5814  0CA6  00D5               	movwf	??_strcmp
  5815  0CA7  0858               	movf	strcmp@s1,w
  5816  0CA8  0084               	movwf	4
  5817  0CA9  0800               	movf	0,w
  5818  0CAA  00D6               	movwf	??_strcmp+1
  5819  0CAB  0855               	movf	??_strcmp,w
  5820  0CAC  0256               	subwf	??_strcmp+1,w
  5821  0CAD  00D7               	movwf	strcmp@r
  5822  0CAE  08D7               	movf	strcmp@r,f
  5823  0CAF  1903               	btfsc	3,2
  5824  0CB0  2C9B               	goto	l4076
  5825  0CB1                     l4078:	
  5826  0CB1  0857               	movf	strcmp@r,w
  5827  0CB2  00D3               	movwf	?_strcmp
  5828  0CB3  01D4               	clrf	?_strcmp+1
  5829  0CB4  1BD3               	btfsc	?_strcmp,7
  5830  0CB5  03D4               	decf	?_strcmp+1,f
  5831  0CB6  0008               	return
  5832  0CB7                     __end_of_strcmp:	
  5833                           
  5834                           	psect	text994
  5835  0C78                     __ptext994:	
  5836 ;; =============== function _strcmp ends ============
  5837                           
  5838                           
  5839 ;; *************** function _uart_init *****************
  5840 ;; Defined at:
  5841 ;;		line 147 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;		None               void
  5848 ;; Registers used:
  5849 ;;		wreg, status,2
  5850 ;; Tracked objects:
  5851 ;;		On entry : 17F/0
  5852 ;;		On exit  : 17F/0
  5853 ;;		Unchanged: FFE80/0
  5854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5855 ;;      Params:         0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0
  5858 ;;      Totals:         0       0       0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    3
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868  0C78                     _uart_init:	
  5869                           
  5870                           ;Main.c: 148: PORTC=0xFF;
  5871                           
  5872                           ; Regs used in _uart_init: [wreg+status,2]
  5873  0C78  30FF               	movlw	255
  5874  0C79  0087               	movwf	7	;volatile
  5875                           
  5876                           ;Main.c: 149: TRISC=0x80;
  5877  0C7A  3080               	movlw	128
  5878  0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  5879  0C7C  0087               	movwf	7	;volatile
  5880                           
  5881                           ;Main.c: 150: TXSTA=0X24;
  5882  0C7D  3024               	movlw	36
  5883  0C7E  0098               	movwf	24	;volatile
  5884                           
  5885                           ;Main.c: 151: RCSTA=0X90;
  5886  0C7F  3090               	movlw	144
  5887  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  5888  0C81  0098               	movwf	24	;volatile
  5889                           
  5890                           ;Main.c: 152: SPBRG=129;
  5891  0C82  3081               	movlw	129
  5892  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  5893  0C84  0099               	movwf	25	;volatile
  5894                           
  5895                           ;Main.c: 153: RCREG=0;
  5896  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  5897  0C86  019A               	clrf	26	;volatile
  5898  0C87  0008               	return
  5899  0C88                     __end_of_uart_init:	
  5900                           
  5901                           	psect	text997
  5902  0D33                     __ptext997:	
  5903 ;; =============== function _lcdport ends ============
  5904                           
  5905                           
  5906 ;; *************** function _ISR *****************
  5907 ;; Defined at:
  5908 ;;		line 65 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 60/0
  5920 ;;		Unchanged: FFE9F/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0
  5924 ;;      Temps:          3       0       0       0       0
  5925 ;;      Totals:         3       0       0       0       0
  5926 ;;Total ram usage:        3 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    2
  5929 ;; This function calls:
  5930 ;;		_gsm_read_line2
  5931 ;; This function is called by:
  5932 ;;		Interrupt level 1
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935  0D33                     _ISR:	
  5936                           
  5937                           ;Main.c: 66: if (RCIF==1)
  5938  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0D35  1E8C               	btfss	12,5
  5941  0D36  2D3A               	goto	i1l1107
  5942                           
  5943                           ;Main.c: 67: { sms_indication=0;
  5944  0D37  10F6               	bcf	_sms_indication/(0+8),_sms_indication& (0+7)
  5945                           
  5946                           ;Main.c: 68: gsm_read_line2(sms);
  5947  0D38  30C7               	movlw	_sms& (0+255)
  5948  0D39  2543               	fcall	_gsm_read_line2
  5949  0D3A                     i1l1107:	
  5950  0D3A  0875               	movf	??_ISR+2,w
  5951  0D3B  008A               	movwf	10
  5952  0D3C  0874               	movf	??_ISR+1,w
  5953  0D3D  0084               	movwf	4
  5954  0D3E  0873               	movf	??_ISR,w
  5955  0D3F  0083               	movwf	3
  5956  0D40  0EFE               	swapf	126,f
  5957  0D41  0E7E               	swapf	126,w
  5958  0D42  0009               	retfie
  5959  0D43                     __end_of_ISR:	
  5960  0D43                     __ptext998:	
  5961 ;; =============== function _ISR ends ============
  5962                           
  5963                           
  5964 ;; *************** function _gsm_read_line2 *****************
  5965 ;; Defined at:
  5966 ;;		line 48 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\Main.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  buffer          1    wreg     PTR unsigned char 
  5969 ;;		 -> sms(20), 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  buffer          1    1[COMMON] PTR unsigned char 
  5972 ;;		 -> sms(20), 
  5973 ;;  rec_data        1    2[COMMON] unsigned char 
  5974 ;;  flag            1    0[COMMON] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 60/0
  5981 ;;		On exit  : 160/0
  5982 ;;		Unchanged: FFE9F/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5984 ;;      Params:         0       0       0       0       0
  5985 ;;      Locals:         3       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:         3       0       0       0       0
  5988 ;;Total ram usage:        3 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    1
  5991 ;; This function calls:
  5992 ;;		_receive
  5993 ;; This function is called by:
  5994 ;;		_ISR
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997  0D43                     _gsm_read_line2:	
  5998                           
  5999                           ; Regs used in _gsm_read_line2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6000                           ;gsm_read_line2@buffer stored from wreg
  6001  0D43  00F1               	movwf	gsm_read_line2@buffer
  6002  0D44  01F0               	clrf	gsm_read_line2@flag
  6003  0D45                     i1l3218:	
  6004                           
  6005                           ;Main.c: 52: {
  6006                           ;Main.c: 53: rec_data = receive();
  6007  0D45  2564  120A  158A   	fcall	_receive
  6008  0D48  00F2               	movwf	gsm_read_line2@rec_data
  6009                           
  6010                           ;Main.c: 54: if(rec_data=='#'){flag=1;rec_data = receive(); }
  6011  0D49  3A23               	xorlw	35
  6012  0D4A  1D03               	skipz
  6013  0D4B  2D52               	goto	i1l3226
  6014  0D4C  01F0               	clrf	gsm_read_line2@flag
  6015  0D4D  0AF0               	incf	gsm_read_line2@flag,f
  6016  0D4E  2564  120A  158A   	fcall	_receive
  6017  0D51  00F2               	movwf	gsm_read_line2@rec_data
  6018  0D52                     i1l3226:	
  6019                           
  6020                           ;Main.c: 55: if(flag)
  6021  0D52  0870               	movf	gsm_read_line2@flag,w
  6022  0D53  1903               	btfsc	3,2
  6023  0D54  2D5B               	goto	i1l3232
  6024                           
  6025                           ;Main.c: 56: {
  6026                           ;Main.c: 57: *buffer++ = rec_data;
  6027  0D55  0871               	movf	gsm_read_line2@buffer,w
  6028  0D56  0084               	movwf	4
  6029  0D57  0872               	movf	gsm_read_line2@rec_data,w
  6030  0D58  1383               	bcf	3,7	;select IRP bank0
  6031  0D59  0080               	movwf	0
  6032  0D5A  0AF1               	incf	gsm_read_line2@buffer,f
  6033  0D5B                     i1l3232:	
  6034                           
  6035                           ;Main.c: 58: }
  6036                           ;Main.c: 59: }while (rec_data != '\n');
  6037  0D5B  0872               	movf	gsm_read_line2@rec_data,w
  6038  0D5C  3A0A               	xorlw	10
  6039  0D5D  1D03               	skipz
  6040  0D5E  2D45               	goto	i1l3218
  6041                           
  6042                           ;Main.c: 60: *buffer='\0';
  6043  0D5F  0871               	movf	gsm_read_line2@buffer,w
  6044  0D60  0084               	movwf	4
  6045  0D61  1383               	bcf	3,7	;select IRP bank0
  6046  0D62  0180               	clrf	0
  6047  0D63  0008               	return
  6048  0D64                     __end_of_gsm_read_line2:	
  6049  0D64                     __ptext999:	
  6050 ;; =============== function _gsm_read_line2 ends ============
  6051                           
  6052                           
  6053 ;; *************** function _receive *****************
  6054 ;; Defined at:
  6055 ;;		line 2 in file "F:\PiROOT_Tech\student_projects\AutomaticRationCardSystem\UART.C"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      unsigned char 
  6062 ;; Registers used:
  6063 ;;		wreg
  6064 ;; Tracked objects:
  6065 ;;		On entry : 60/0
  6066 ;;		On exit  : 60/0
  6067 ;;		Unchanged: FFF9F/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6069 ;;      Params:         0       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0
  6072 ;;      Totals:         0       0       0       0       0
  6073 ;;Total ram usage:        0 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_gsm_read_line2
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081  0D64                     _receive:	
  6082                           
  6083                           ;UART.C: 3: if(OERR){CREN=0;CREN=1;}
  6084                           
  6085                           ; Regs used in _receive: [wreg]
  6086  0D64  1C98               	btfss	24,1
  6087  0D65  2D68               	goto	i1l1015
  6088  0D66  1218               	bcf	24,4
  6089  0D67  1618               	bsf	24,4
  6090  0D68                     i1l1015:	
  6091  0D68  1E8C               	btfss	12,5
  6092  0D69  2D68               	goto	i1l1015
  6093                           
  6094                           ;UART.C: 5: return(RCREG);
  6095  0D6A  081A               	movf	26,w	;volatile
  6096  0D6B  0008               	return
  6097  0D6C                     __end_of_receive:	
  6098                           
  6099                           	psect	intentry
  6100  0004                     __pintentry:	
  6101                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6102                           
  6103  0004                     interrupt_function:	
  6104  007E                     saved_w	set	btemp
  6105  0004  00FE               	movwf	btemp
  6106  0005  0803               	movf	3,w
  6107  0006  00F3               	movwf	??_ISR
  6108  0007  0804               	movf	4,w
  6109  0008  00F4               	movwf	??_ISR+1
  6110  0009  080A               	movf	10,w
  6111  000A  00F5               	movwf	??_ISR+2
  6112  000B  120A  158A  2D33   	ljmp	_ISR
  6113                           
  6114                           	psect	text1000
  6115  0000                     __ptext1000:	
  6116 ;; =============== function _receive ends ============
  6117                           
  6118  007E                     btemp	set	126	;btemp
  6119  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Mon Mar 07 00:46:13 2016

                         pc 0002                 _softreceive 0D8A                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 005E                          fsr 0004  
       ___wmul@multiplicand 0058                         l951 0000                         l960 0786  
                       l954 0777                         l955 0778                         l956 077C  
                       l980 0000                         l957 077D                         l965 0000  
                       l958 0781                         l974 0000                         l959 0782  
                       l992 0D8B                         l968 0000                         _GIE 005F  
                       l989 0000                         l998 0000                         _RC0 0038  
                       _RC1 0039                         _RD0 0040                         _RD1 0041  
                       _RC3 003B                         _RD2 0042                         _RC4 003C  
                       _RD3 0043                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _ISR 0D33  
                       u875 0FB9                         fsr0 0004                         _sms 00C7  
                       indf 0000                ___awmod@sign 0058   __end_of_SoftWareUart_Init 0C78  
                      ?_ISR 0070                        l1122 0000                        l1131 0000  
                      l1140 0000                        l1116 0000                        l1213 0000  
                      l1125 0000                        l1214 0CB8                        l1134 0000  
                      l1119 0000                        l1143 0000                        l1128 0000  
                      l1137 0000                        l1146 0000                        l1235 0000  
                      l1171 04A9                        l1174 04DA                        l1247 0000  
                      l1192 0E65                        l1257 0000                        l1194 0000  
                      l1274 07A2                        l1267 0000                        l1283 0000  
                      l1277 0000                        l3302 0E8A                        l1462 0000  
                      l3304 0000                        l3312 0000                        l4112 0000  
                      l4120 0000                        l3400 0000                        l4200 0000  
                      l3306 0000                        l3322 0FB0                        l3314 0000  
                      l4106 0F8A                        l4114 0F9D                        l4122 0000  
                      l1394 0000                        l3402 0000                        l4202 0000  
                      l4210 0000                        l3332 0000                        l3324 0000  
                      l4132 0000                        l4124 079C                        l3412 0000  
                      l4204 0000                        l4300 0000                        l3246 0000  
                      l3270 0000                        l3262 0000                        l3334 0FC7  
                      l4118 0000                        l4150 0000                        l4142 0000  
                      l3430 0000                        l3414 0740                        l3406 0000  
                      l4206 0000                        l4230 0000                        l4302 0000  
                      l4310 0000                        l3248 0000                        l4072 0000  
                      l3272 0000                        l3264 0000                        l3328 0000  
                      l4136 0000                        l4128 0000                        l4144 0000  
                      l3440 076D                        l3424 074E                        l3416 0000  
                      l3408 0737                        l4160 0000                        l4224 0000  
                      l4216 0D95                        l4232 0000                        l4240 0000  
                      l4304 0000                        l4320 0000                        l4400 0000  
                      l4058 0000                        l4074 0CA1                        l3274 0000  
                      l3266 0000                        l4090 0D2B                        l4082 0000  
                      l4138 07AF                        l4154 07C9                        l4146 07B5  
                      l3434 0000                        l3426 0000                        l4162 0000  
                      l4218 0000                        l4234 0000                        l4250 0000  
                      l4242 0000                        l4306 0000                        l4314 0000  
                      l4322 0000                        l4330 0000                        l4410 0000  
                      l4402 003E                        l4076 0C9B                        l3276 0000  
                      l4092 0CFD                        l4156 0000                        l4148 0000  
                      l3436 0765                        l4180 06F4                        l4172 06E8  
                      l4252 0000                        l4244 0000                        l4236 0000  
                      l4260 0000                        l4308 0000                        l4316 063E  
                      l4324 0000                        l4332 0000                        l4340 0000  
                      l4500 0203                        l4420 0000                        l4412 0000  
                      l4404 0000                        l4078 0CB1                        l4094 0D30  
                      l3438 0000                        l4190 0000                        l4166 0000  
                      l4246 0000                        l4238 0000                        l4262 0000  
                      l4254 0000                        l4270 0000                        l4326 0000  
                      l4318 0000                        l4334 0000                        l4342 0000  
                      l4350 0000                        l4510 0000                        l4502 0000  
                      l4422 0000                        l4414 0000                        l3296 0000  
                      l4192 070F                        l4168 06E1                        l4248 0000  
                      l4264 0000                        l4256 0000                        l4280 0000  
                      l4272 0000                        l4328 0000                        l4336 0000  
                      l4344 0000                        l4352 0000                        l4360 0000  
                      l4600 0000                        l4520 0000                        l4512 0000  
                      l4504 0000                        l4440 00AB                        l4408 0000  
                      l4416 006A                        l3298 0E82                        l4098 0000  
                      l4186 0000                        l4266 0000                        l4258 0000  
                      l4282 0000                        l4274 0000                        l4338 0000  
                      l4354 0000                        l4346 0000                        l4370 0000  
                      l4362 0000                        l4610 0000                        l4602 0000  
                      l4530 0000                        l4522 0000                        l4514 0000  
                      l4506 0000                        l4450 0000                        l4442 0000  
                      l4434 009C                        l4418 0000                        l4188 0707  
                      l4196 0788                        l4284 0000                        l4276 0000  
                      l4268 0000                        l4356 0000                        l4348 0000  
                      l4372 0000                        l4364 0000                        l4604 0000  
                      l4540 0000                        l4532 0000                        l4524 0000  
                      l4516 0000                        l4508 0000                        l4460 0000  
                      l4452 0000                        l4444 0000                        l4428 008E  
                      l4380 0000                        l4198 0000                        l4278 0000  
                      l4294 0D71                        l4286 0000                        l4358 0000  
                      l4374 0000                        l4366 0000                        l4630 0000  
                      l4606 0000                        l4550 0000                        l4542 0000  
                      l4534 0000                        l4526 0000                        l4518 0000  
                      l4470 0000                        l4462 0000                        l4454 0000  
                      l4446 0000                        l4390 0000                        l4382 0000  
                      l4296 0000                        l4376 0000                        l4368 0000  
                      l4608 0000                        l4560 0356                        l4552 0000  
                      l4544 0000                        l4536 0000                        l4528 0000  
                      l4480 0000                        l4472 0000                        l4464 0000  
                      l4456 0000                        l4448 0000                        l4624 0467  
                      l4392 0000                        l4384 0000                        l4298 0000  
                      l4378 0000                        l4634 0486                        l4570 0000  
                      l4562 0000                        l4554 0000                        l4546 0000  
                      l4538 0000                        l4626 0475                        l4482 0000  
                      l4474 0000                        l4466 0000                        l4458 0000  
                      l4394 0000                        l4386 0000                        l4644 0000  
                      l4636 0000                        l4628 0000                        l4580 0000  
                      l4572 0000                        l4564 0000                        l4548 0000  
                      l4492 0000                        l4484 0000                        l4476 0000  
                      l4468 0000                        l4396 0000                        l4388 0000  
                      l4590 0000                        l4582 0000                        l4574 0000  
                      l4566 0000                        l4494 0000                        l4486 0000  
                      l4478 0000                        l4398 0000                        l4592 0000  
                      l4584 0000                        l4576 0000                        l4568 0000  
                      l4496 01FD                        l4488 0000                        l4594 0000  
                      l4586 0000                        l4578 0000                        l4498 0000  
                      l4596 0000                        l4588 0000                        l4598 0000  
                      STR_1 1237                        STR_2 1226                        STR_3 12AB  
                      STR_4 1287                        STR_5 127C                        STR_6 1271  
                      STR_7 1195                        STR_8 1291                        STR_9 106D  
                      _CREN 00C4                        u1045 0757                        u1405 0F90  
                      u1605 0D86                        u1535 06FA                        u1717 0063  
                      u1807 05A7                        u1727 0114                        _PIE1 008C  
                      u1817 05B7                        u1737 01E7                        u1907 078D  
                      u1827 05DA                        u1747 01F6                        u1837 05E9  
                      u1757 026C                        u1847 05F6                        u1767 033F  
                      u1857 0603                        u1777 034E                        u1867 0D8F  
                      u1787 03BF                        u1877 0D97                        u1797 048C  
                      u1887 0DA5                        u1897 0C74                        _RCIF 0065  
                      _OERR 00C1                        _WREN 0C62              ??_eeprom_write 0076  
                      _User 0026                        _main 0011                        btemp 007E  
                      start 000E                       ??_ISR 0073         __end_of_DisplayAmnt 06D7  
       __end_of_DisplayRise 0525          __size_of_RFID_read 001E                       ?_main 0070  
           __end_of___awdiv 0772             __end_of___lbdiv 07B1                       _EEADR 010D  
                     STR_10 103A                       STR_20 111A                       STR_12 101D  
                     STR_21 1085                       STR_30 1258                       STR_14 1159  
                     STR_22 109B                       STR_23 1202                       STR_32 1248  
                     STR_40 1214                       STR_24 11CC                       STR_16 116D  
                     STR_33 12A6                       STR_41 11F0                       STR_25 11DE  
                     STR_34 11DE                       STR_42 11BA                       STR_26 11A8  
                     STR_18 1181                       STR_50 1105                       STR_51 10B1  
                     STR_35 11A8                       STR_19 1144                       STR_43 10F0  
                     STR_27 1055                       STR_44 10B1                       STR_52 10C6  
                     STR_28 1265                       STR_36 10DB             __end_of___awmod 0714  
                     STR_45 10C6                       STR_53 112F                       STR_29 12A1  
                     STR_37 10B1                       STR_46 112F                       STR_54 1214  
                     STR_38 10C6                       STR_55 11F0                       STR_47 1214  
                     STR_39 112F                       STR_56 11BA                       STR_48 11F0  
                     STR_49 11BA                       STR_57 129B             __end_of___lbmod 07CD  
                     _CARRY 0018                       _ANSEL 0188             ___awdiv@divisor 0059  
           __end_of___lwdiv 0FCC             __end_of___lwmod 0FA2             ___awdiv@counter 005D  
                     _RCREG 001A                       _RCSTA 0018                       _SPBRG 0099  
                     _PORTC 0007                       _PORTD 0008                       _TRISC 0087  
                     _TRISD 0088                       _TXSTA 0098                       _User1 00A0  
                     _User2 00AD                       _User3 00BA             __end_of_lcddata 072D  
           __end_of_lcdport 0788                       _digit 1012             __end_of_receive 0D6C  
            __pbitbssCOMMON 03B0                       pclath 000A           ?_LoadStockToArray 0070  
                     status 0003             __end_of_startup 05E1                       wtemp0 007E  
        ??_LoadStockToArray 0076             ___lbdiv@divisor 0053             ___lbdiv@counter 0055  
              __end_of_main 04DD            __end_of_ReadAmnt 0E62               _KeroseneArray 004B  
                    ??_main 0066               _KeroseneStock 0020  __size_of_SoftWareUart_Init 000E  
      __end_of_DisplaySugar 0549        __end_of_DisplayStock 058B                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            ___awdiv@dividend 005B  
                    _ANSELH 0189                      i1l1015 0D68                      i1l1103 0000  
                    i1l1018 0000                      i1l1107 0D3A                      i1l3220 0000  
                    i1l3230 0000                      i1l3208 0000                      i1l3232 0D5B  
                    i1l3224 0000                      i1l3216 0000                      i1l3240 0000  
                    i1l3226 0D52                      i1l3218 0D45                      i1l3228 0000  
                    i1l3236 0000                      _INTCON 000B           __end_of_RFID_read 0D8A  
                    _TRISD0 0440                      _TRISD1 0441          __size_of_ReadStock 0023  
      __size_of_eeprom_read 001E                 _DisplayAmnt 065A            __end_of_lcd_init 0626  
               _DisplayRise 0501                      ___wmul 0E80                   ??___awdiv 0076  
                 ??___lbdiv 0076                   ??___awmod 0076                   ??___lbmod 0054  
                    _enable 0788                   ??___lwdiv 0076                   ??___lwmod 0076  
                    _lcdcmd 0626                      _memcmp 0CFD            ___awdiv@quotient 005F  
           ___awmod@divisor 0053            __end_of_paramter 0DC8        __end_of_eeprom_write 0CD6  
           ___awmod@counter 0057             _DisplayKerosene 04DD                   ??_lcddata 0076  
                    _strcmp 0C99                      clrloop 0C63                   ??_lcdport 0076  
    gsm_read_line2@rec_data 0072                  _User1Sugar 0030                  _User2Sugar 0033  
                _User3Sugar 0036                   ??_receive 0070                      saved_w 007E  
                _SugarArray 004F                  _SugarStock 0024                   ??_startup 005A  
          ___lbdiv@dividend 0054             ___lbmod@divisor 0053           DisplaySugar@Sugar 0058  
           ___lbmod@counter 0056             eeprom_read@addr 0055              __pcstackCOMMON 0070  
              __pidataBANK1 0CD6                ?_softreceive 0070            ___lbdiv@quotient 0056  
         __end_of_ReadStock 0DEB             softreceive@Data 0054           eeprom_write@value 0061  
           softreceive@mask 0055                  __pbssBANK0 0020                  __pbssBANK1 00C7  
                _card_store 0037          __size_of_lcdstring 001C                   ?_ReadAmnt 0070  
                __pmaintext 0011     __end_of_DisplayKerosene 0501                     ?___wmul 0056  
                __pintentry 0004                     ?_enable 0070                     ?_lcdcmd 0070  
                   ?_memcmp 0053                  __ptext1000 0000                     ?_strcmp 0053  
     __size_of_DisplaySugar 0024       __size_of_DisplayStock 0042          __size_of_uart_init 0010  
                 ?_lcd_init 0070     __size_of_gsm_read_line2 0021            _DisplayAmnt$1136 0064  
                ??_ReadAmnt 0076                   ?_paramter 0070       __size_of_eeprom_write 001F  
              _DisplaySugar 0525                _DisplayStock 0549                     ___awdiv 072D  
                   ___lbdiv 0796                     ___awmod 06D7                     ___lbmod 07B1  
           __size_of___wmul 0019                     ___lwdiv 0FA2                     ___lwmod 0F7E  
 __size_of_LoadStockToArray 00DE             __size_of_enable 000E             __size_of_lcdcmd 0018  
           __size_of_memcmp 0036           __end_of_lcdstring 065A                     _lcddata 0714  
           __size_of_strcmp 001E                __size_of_ISR 0010                     _lcdport 0772  
                   _receive 0D64            ___awmod@dividend 0055                     lcdcmd@a 0057  
                   lcdcmd@y 0055                     lcdcmd@z 0056                     _startup 058B  
                ??_lcd_init 0058        end_of_initialization 07FC                     memcmp@n 0056  
                   init_ram 0C8C                _eeprom_write 0CB7                  ??_paramter 0076  
         __end_of_uart_init 0C88                   _RFID_read 0D6C                ?_DisplayAmnt 0061  
              ?_DisplayRise 0058            ?_DisplayKerosene 0058             DisplayAmnt@Amnt 0061  
              __pstringtext 1000                     strcmp@r 0057        __size_of_softreceive 0021  
          ___lbmod@dividend 0055       _LoadStockToArray$1137 005F                 ___lbmod@rem 0057  
             ??_eeprom_read 0053                  ?_RFID_read 0070             DisplayRise@Rise 0058  
            __end_of___wmul 0E99              __end_of_enable 0796              __end_of_lcdcmd 063E  
            __end_of_memcmp 0D33            _delayus_variable 0077              __end_of_strcmp 0CB7  
       start_initialization 07DE                 __end_of_ISR 0D43                  lcdstring@a 0058  
                 _ReadStock 0DC8              _gsm_read_line2 0D43           __size_of_ReadAmnt 0077  
                 _RiseArray 0046         DisplayRise@Location 0059                   _RiseStock 0022  
                  ??___wmul 0076         __end_of_eeprom_read 0E80                    ??_enable 0053  
                  ??_lcdcmd 0076            _LoadStockToArray 0EA0                 __pdataBANK1 00A0  
                 _User1Rise 002F                   _User2Rise 0032                   _User3Rise 0035  
                  ??_memcmp 0058                    ??_strcmp 0055         DisplayAmnt@Location 0063  
               __pbssCOMMON 0077      __end_of_gsm_read_line2 0D64               __pcstackBANK0 0053  
                ?_ReadStock 0070                  RFID_read@i 0056            eeprom_write@addr 0062  
         __size_of_lcd_init 0045            ___lwdiv@dividend 005A                 ??_RFID_read 0076  
         __size_of_paramter 001A                    ?___awdiv 0059                    ?___lbdiv 0053  
                  ?___awmod 0053                    ?___lbmod 0053                   __ptext970 0525  
                 __ptext971 065A                   __ptext980 0DEB                   __ptext972 063E  
                 __ptext981 0D8A                   __ptext973 05E1                   __ptext990 0E80  
                 __ptext982 0C6A                   __ptext974 0D6C                   __ptext966 058B  
                 __ptext991 0CFD                   __ptext983 0788                   __ptext975 0714  
                 __ptext967 0549                   __ptext992 0CB7                   __ptext984 06D7  
                 __ptext976 0626                   __ptext968 04DD                   __ptext993 0C99  
                 __ptext985 072D                   __ptext977 0EA0                   __ptext969 0501  
                 __ptext994 0C78                   __ptext986 07B1                   __ptext978 0DAE  
                 __ptext995 0E62                   __ptext987 0796                   __ptext979 0DC8  
                 __ptext996 0772                   __ptext988 0F7E                   __ptext997 0D33  
                 __ptext989 0FA2                   __ptext998 0D43                   __ptext999 0D64  
      __size_of_DisplayAmnt 007D                    ?___lwdiv 0058                    ?___lwmod 0053  
      __size_of_DisplayRise 0024                    ?_lcddata 0070                    ?_lcdport 0070  
                  ?_receive 0070                   _lcdstring 063E             ?_gsm_read_line2 0070  
          ___lwdiv@quotient 005C                    ?_startup 0070           interrupt_function 0004  
                 _rfid_flag 03B0              ___wmul@product 005A                 _eeprom_read 0E62  
                 _uart_init 0C78                 __stringbase 1012           ___wmul@multiplier 0056  
                ?_lcdstring 0058                 ??_ReadStock 0076               _User1Kerosene 002E  
                  _ReadAmnt 0DEB               _User2Kerosene 0031               _User3Kerosene 0034  
      gsm_read_line2@buffer 0071                   init_fetch 0C88               ??_softreceive 0053  
                ?_uart_init 0070                    _User1amt 0028                    _User2amt 002A  
                  _User3amt 002C            __size_of___awdiv 0045            __size_of___lbdiv 001B  
          __size_of___awmod 003D            __size_of___lbmod 001C            __size_of___lwdiv 002A  
          __size_of___lwmod 0024    __size_of_DisplayKerosene 0024            __size_of_lcddata 0019  
          __size_of_lcdport 0016            __size_of_receive 0008             ___lwdiv@divisor 0058  
           ___lwdiv@counter 005E                    _lcd_init 05E1            __size_of_startup 0056  
  __end_of_LoadStockToArray 0F7E               __size_of_main 04CC                    _paramter 0DAE  
                  clear_ram 0C62                    lcddata@a 0057                    lcddata@y 0055  
                  lcddata@z 0056                    lcdport@a 0053         __end_of_softreceive 0DAB  
               ??_lcdstring 0076                    memcmp@s1 0053                    memcmp@s2 0055  
                  intlevel1 0000            ___lwmod@dividend 0055                   stringcode 100A  
             ?_DisplaySugar 0058               ?_DisplayStock 0070                 ??_uart_init 0076  
          ??_gsm_read_line2 0070          gsm_read_line2@flag 0070                    strcmp@s1 0058  
                  strcmp@s2 0053             ___lwmod@divisor 0053             ___lwmod@counter 0057  
                  stringtab 1000              _sms_indication 03B1           _SoftWareUart_Init 0C6A  
         ??_DisplayKerosene 0076        DisplaySugar@Location 0059          ?_SoftWareUart_Init 0070  
             ?_eeprom_write 0061                ?_eeprom_read 0070     DisplayKerosene@Kerosene 0058  
   DisplayKerosene@Location 0059               ??_DisplayAmnt 0076         ??_SoftWareUart_Init 0053  
             ??_DisplayRise 0076              ??_DisplaySugar 0076              ??_DisplayStock 0076  
